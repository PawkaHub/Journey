<?xml version="1.0"?>
<doc>
    <assembly>
        <name>U3DXTMaps</name>
    </assembly>
    <members>
        <member name="T:U3DXT.iOS.Native.MapKit.MKAnnotation">
            <summary>
            The <c>MKAnnotation</c> protocol is used to provide annotation-related information to a map view. To use this protocol, you adopt it in any custom objects that store or represent annotation data. Each object then serves as the source of information about a single map annotation and provides critical information, such as the annotation’s location on the map. Annotation objects do not provide the visual representation of the annotation but typically coordinate (in conjunction with the map view’s delegate) the creation of an appropriate <c>MKAnnotationView</c> object to handle the display.
            </summary>
            <remarks>
                <p>An object that adopts this protocol must implement the <c>coordinate</c> property. The other methods of this protocol are optional.</p>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotation.UP_MKAnnotation_set__get_coordinate_handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotation.UP_MKAnnotation_set__get_subtitle_handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotation.UP_MKAnnotation_set__get_title_handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotation.UP_MKAnnotation_set__setCoordinate__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotation.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotation._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotation.SetCoordinate(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            (optional) Sets the new center point of the annotation.
            <br></br>Equivalent to the native <c>setCoordinate:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>newCoordinate</em>
                <p>The new center point for the annotation.</p>
                <b>Discussion</b>
                <p>Annotations that support dragging should implement this method to update the position of the annotation. </p>
                <p>If you implement this method, you must update the value of the coordinate in a key-value observing (KVO) compliant way. For more information on how to implement support for KVO, see <em>Key-Value Observing Programming Guide</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="newCoordinate">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotation.coordinate">
            <summary>
            (optional) The center point (specified as a map coordinate) of the annotation. (required) (read-only)
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Your implementation of this property must be key-value observing (KVO) compliant. For more information on how to implement support for KVO, see <em>Key-Value Observing Programming Guide</em>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotation._get_coordinate_handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_get_coordinate_handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotation.subtitle">
            <summary>
            (optional) The string containing the annotation’s subtitle.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This string is displayed in the callout for the associated annotation view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotation._get_subtitle_handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_get_subtitle_handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotation.title">
            <summary>
            (optional) The string containing the annotation’s title.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Although this property is optional, if you support the selection of annotations in your map view, you are expected to provide this property. This string is displayed in the callout for the associated annotation view. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotation._get_title_handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_get_title_handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotation._setCoordinate__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_setCoordinate__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKAnnotationView">
            <summary>
            The <c>MKAnnotationView</c> class is responsible for presenting annotations visually in a map view. Annotation views are loosely coupled to a corresponding annotation object, which is an object that corresponds to the <c>MKAnnotation</c> protocol. When an annotation’s coordinate point is in the visible region, the map view asks its delegate to provide a corresponding annotation view. Annotation views may be recycled later and put into a reuse queue that is maintained by the map view.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>The most efficient way to provide the content for an annotation view is to set its <c>image</c> property. The annotation view sizes itself automatically to the image you specify and draws that image for its contents. Because it is a view, however, you could also override the <c>drawRect:</c> method and draw your view’s content manually. If you choose to override <c>drawRect:</c> directly and you do not specify a custom image in the <c>image</c> property, be aware that the width and height of the annotation view’s frame are set to 0 by default. Before your custom content can be drawn, you must set the width and height to nonzero values by modifying the view’s <c>frame</c> property. In general, if your content consists entirely of static images, it is more efficient to set the <c>image</c> property and change it as needed than to draw the images yourself.</p>
                <p>Annotation views remain anchored to the map at the point specified by their associated annotation object. Although they scroll with the map contents, annotation views reside in a separate display layer and are not scaled when the size of the visible map region changes.</p>
                <p>Annotation views support the concept of a selection state, which determines whether the view is unselected, selected, or selected and displaying a standard callout view. The user toggles between the selection states through interactions with the annotation view. In the unselected state, the annotation view is displayed but not highlighted. In the selected state, the annotation is highlighted but the callout is not displayed. And finally, the annotation can be displayed both with a highlight and a callout. The callout view displays additional information such as a title string and controls for viewing more information. The title information is provided by the annotation object but your annotation view is responsible for providing any custom controls. For more information, see the subclassing notes.</p>
                <b>Reusing Annotation Views</b>
                <p>Annotation views are designed to be reused as the user (or your application) changes the visible map region. The reuse of annotation views provides significant performance improvements during scrolling by avoiding the creation of new view objects during this time critical operation. For this reason, annotation views should not be tightly coupled to the contents of their associated annotation. Instead, it should be possible to use the properties of an annotation view (or setter methods) to configure the view for a new annotation object.</p>
                <p>Whenever you initialize a new annotation view, you should always specify a reuse identifier for that view. As annotation views are no longer needed, the map view may put them into a reuse queue. As new annotations are added to the map view, the delegate object can then dequeue and reconfigure an existing view (rather than create a new one) using the <c>dequeueReusableAnnotationViewWithIdentifier:</c> method of <c>MKMapView</c>. </p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	You can use the <c>MKAnnotationView</c> class as is or subclass it to provide custom behavior as needed. The <c>image</c> property of the class lets you set the appearance of the annotation view without subclassing directly. You might also create custom subclasses as a convenience and use them to put the annotation view in a known state. For example, the <c>MKPinAnnotationView</c> subclass initializes the contents of the annotation view to a pin image.</p>
                <p class="spaceabove">	There are no special requirements for subclassing <c>MKAnnotationView</c>. However, the following list includes some reasons you might want to subclass and some of the methods you would override to implement the desired behavior: </p>
                <ul class="ul">
                    <li class="li">
                        <p>To put the annotation view into a consistent state, provide a custom initialization method. Your custom initialization method would then call <c>initWithAnnotation:reuseIdentifier:</c> to initialize the superclass.</p>
                    </li>
                    <li class="li">
                        <p>To provide custom callout views, override the <c>leftCalloutAccessoryView</c> method and use it to return the views.</p>
                    </li>
                </ul>
                <p class="spaceabove">	If you support draggable annotation views in iOS 4.0 and later, your subclass is responsible for changing the value in the <c>dragState</c> property to appropriate values at key transition points in the drag operation. For more information, see the description of that property. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKAnnotationView.MKAnnotationCalloutInfoDidChangeNotification">
            <summary>
            Constant name for the native <c>MKAnnotationCalloutInfoDidChangeNotification</c> notification.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKAnnotationView.CalloutInfoDidChange">
            <summary>
                <b>MKAnnotationCalloutInfoDidChangeNotification</b> Notifies observers that the title or subtitle information of an annotation object changed. (<strong class="deprecated">Deprecated.</strong> Use KVO notifications instead.) <p>This notification supports legacy applications and is no longer necessary. MapKit tracks changes to the title and subtitle of an annotation using KVO notifications. </p><b>Availability</b><ul><li>Available in iOS 3.0 and later.</li></ul><br></br>Equivalent to adding the event handler as an observer to the native <c>MKAnnotationCalloutInfoDidChangeNotification</c> notification.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKAnnotationView.AllNotifications">
            <summary>
            Occurs when this object sends any notification.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKAnnotationView.AllInstances">
            <summary>
            Static class for notifications of all instances of the <c>MKAnnotationView</c> class.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKAnnotationView.AllInstances.CalloutInfoDidChange">
            <summary>
                <b>MKAnnotationCalloutInfoDidChangeNotification</b> Notifies observers that the title or subtitle information of an annotation object changed. (<strong class="deprecated">Deprecated.</strong> Use KVO notifications instead.) <p>This notification supports legacy applications and is no longer necessary. MapKit tracks changes to the title and subtitle of an annotation using KVO notifications. </p><b>Availability</b><ul><li>Available in iOS 3.0 and later.</li></ul><br></br>Equivalent to adding the event handler as an observer to the native <c>MKAnnotationCalloutInfoDidChangeNotification</c> notification.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_annotation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_annotation(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_calloutOffset(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_calloutOffset(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_canShowCallout(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_canShowCallout(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_centerOffset(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_centerOffset(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_draggable(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_draggable(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_dragState(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_dragState(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_enabled(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_enabled(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_highlighted(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_highlighted(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_image(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_image(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_leftCalloutAccessoryView(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_leftCalloutAccessoryView(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_reuseIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_rightCalloutAccessoryView(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_rightCalloutAccessoryView(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_get_selected(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_set_selected(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_alloc_initWithAnnotation_reuseIdentifier_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_prepareForReuse(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_setDragState_animated_(System.String,System.Int32,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.UP_MKAnnotationView_setSelected_animated_(System.String,System.Boolean,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKAnnotationView" /> class.
            <br></br>Equivalent to the native <c>[[MKAnnotationView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.ClassExists">
            <summary>
            Returns whether the native MKAnnotationView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.annotation">
            <summary>
            The annotation object currently associated with the view.
            <br></br>Equivalent to the native <c>annotation</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You should not change the value of this property directly. This property contains a non-<c>null</c> value only while the annotation view is visible on the map. If the view is queued and waiting to be reused, the value is <c>null</c></p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.calloutOffset">
            <summary>
            The offset (in pixels) at which to place the callout bubble.
            <br></br>Equivalent to the native <c>calloutOffset</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property determines the additional distance by which to move the callout bubble. When this property is set to (0, 0), the anchor point of the callout bubble is placed on the top-center point of the annotation view’s frame. Specifying positive offset values moves the callout bubble down and to the right, while specifying negative values moves it up and to the left.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.canShowCallout">
            <summary>
            A Boolean value indicating whether the annotation view is able to display extra information in a callout bubble.
            <br></br>Equivalent to the native <c>canShowCallout</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>true</c>, a standard callout bubble is shown when the user taps a selected annotation view. The callout uses the title and subtitle text from the associated annotation object. If there is no title text, though, the annotation view is treated as if its <c>enabled</c> property is set to <c>false</c>. The callout also displays any custom callout views stored in the <c>leftCalloutAccessoryView</c> and <c>rightCalloutAccessoryView</c> properties. </p>
                <p>If the value of this property is <c>false</c>, the value of the title and subtitle strings are ignored and the annotation view remains enabled by default. You can still disable the view explicitly using the <c>enabled</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property leftCalloutAccessoryView</c></li>
                    <li>    <c>@property rightCalloutAccessoryView</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.centerOffset">
            <summary>
            The offset (in pixels) at which to display the view.
            <br></br>Equivalent to the native <c>centerOffset</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>By default, the center point of an annotation view is placed at the coordinate point of the associated annotation. You can use this property to reposition the annotation view as needed. This x and y offset values are measured in pixels. Positive offset values move the annotation view down and to the right, while negative values move it up and to the left.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.draggable">
            <summary>
            A Boolean indicating whether the annotation view is draggable.
            <br></br>Equivalent to the native <c>draggable</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Setting this property to <c>true</c> makes an annotation draggable by the user. If <c>true</c>, the associated annotation object must also implement the <c>setCoordinate:</c> method. The default value of this property is <c>false</c>. </p>
                <p>Setting this property to <c>true</c>, lets the map view know that the annotation is always draggable. In other words, you cannot conditionalize drag operations by attempting to stop an operation that has already been initiated; doing so can lead to undefined behavior. Once begun, the drag operation should always continue to completion.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.dragState">
            <summary>
            The current drag state of the annotation view.
            <br></br>Equivalent to the native <c>dragState</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Applications targeting iOS 4.1 and earlier can use this property to support drag operations in custom annotation views. If your application runs in iOS 4.2 or later, you should override the <c>setDragState:animated:</c> method and use it to manage the drag state instead. </p>
                <p>To support drag operations, you must override the implementation of this property and update the drag state at the following times:</p>
                <ul class="ul">
                    <li class="li">
                        <p>When the drag state changes to <c>MKAnnotationViewDragStateStarting</c>, you should set the state to <c>MKAnnotationViewDragStateDragging</c>. If you perform an animation to indicate the beginning of a drag, you should perform that animation before changing the state. Changing the state to the new value lets the map know that your animations are done.  </p>
                    </li>
                    <li class="li">
                        <p>When the state changes to either <c>MKAnnotationViewDragStateCanceling</c> or <c>MKAnnotationViewDragStateEnding</c>, set the state to <c>MKAnnotationViewDragStateNone</c>. If you perform an animation at the end of a drag, you should perform that animation before changing the state.  </p>
                    </li>
                </ul>
                <p>Changing the state to the <c>MKAnnotationViewDragStateDragging</c> or <c>MKAnnotationViewDragStateNone</c> value is the way to signal to the map view that you are done with any animations you wanted to perform. For example, when a drag operation begins for a pin annotation, the <c>MKPinAnnotationView</c> class executes an animation to lift the pin off the map. Similarly, when the pin is dropped, the class performs a drop animation. Even if you do not perform any animations, you should still change the value of this property to reflect the correct state.  </p>
                <p>You must not try to abort a new drag operation by changing the state from <c>MKAnnotationViewDragStateStarting</c> to <c>MKAnnotationViewDragStateNone</c>. If you do not want your annotation view to be draggable, set the <c>draggable</c> property to <c>false</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property draggable</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.enabled">
            <summary>
            A Boolean value indicating whether the annotation is enabled.
            <br></br>Equivalent to the native <c>enabled</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value of this property is <c>true</c>. If the value of this property is <c>false</c>, the annotation view ignores touch events and cannot be selected. Subclasses may also display the annotation contents differently depending on the value of this property. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.highlighted">
            <summary>
            A Boolean value indicating whether the annotation view is highlighted.
            <br></br>Equivalent to the native <c>highlighted</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You should not set the value of this property directly. The map view sets it in response to touch events entering or exiting the annotation view’s bounds. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.image">
            <summary>
            The image to be displayed by the annotation view.
            <br></br>Equivalent to the native <c>image</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Assigning a new image to this property also changes the size of the view’s frame so that it matches the width and height of the new image. The position of the view’s frame does not change. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.leftCalloutAccessoryView">
            <summary>
            The view to display on the left side of the standard callout bubble.
            <br></br>Equivalent to the native <c>leftCalloutAccessoryView</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value of this property is <c>null</c>. The left callout view is typically used to display information about the annotation or to link to custom information provided by your application. The height of your view should be 32 pixels or less. </p>
                <p>If the view you specify is also a descendant of the <c>UIControl</c> class, you can use the map view’s delegate to receive notifications when your control is tapped. If it does not descend from <c>UIControl</c>, your view is responsible for handling any touch events within its bounds.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property canShowCallout</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.reuseIdentifier">
            <summary>
            The string that identifies that this annotation view is reusable. (read-only)
            <br></br>Equivalent to the native <c>reuseIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You specify the reuse identifier when you create the view. You use this type later to retrieve an annotation view that was created previously but which is currently unused because its annotation is not on screen. </p>
                <p>If you define distinctly different types of annotations (with distinctly different annotation views to go with them), you can differentiate between the annotation types by specifying different reuse identifiers for each one. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.rightCalloutAccessoryView">
            <summary>
            The view to display on the right side of the standard callout bubble.
            <br></br>Equivalent to the native <c>rightCalloutAccessoryView</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is set to <c>null</c> by default. The right callout view is typically used to link to more detailed information about the annotation. The height of your view should be 32 pixels or less. A common view to specify for this property is <c>UIButton</c> object whose type is set to <c>UIButtonTypeDetailDisclosure</c>. </p>
                <p>If the view you specify is also a descendant of the <c>UIControl</c> class, you can use the map view’s delegate to receive notifications when your control is tapped. If it does not descend from <c>UIControl</c>, your view is responsible for handling any touch events within its bounds.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property canShowCallout</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKAnnotationView.selected">
            <summary>
            A Boolean value indicating whether the annotation view is currently selected.
            <br></br>Equivalent to the native <c>selected</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You should not set the value of this property directly. If the property contains <c>true</c>, the annotation view is displaying a callout bubble. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.#ctor(U3DXT.iOS.Native.MapKit.MKAnnotation,System.String)">
            <summary>
            Creates an instance of the native MKAnnotationView and initializes the object. Initializes and returns a new annotation view.
            <br></br>Equivalent to the native <c>[[MKAnnotationView alloc] initWithAnnotation:reuseIdentifier:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotation</em>
                <p>The annotation object to associate with the new view.</p>
                <em>reuseIdentifier</em>
                <p>If you plan to reuse the annotation view for similar types of annotations, pass a string to identify it. Although you can pass <c>null</c> if you do not intend to reuse the view, reusing annotation views is generally recommended.</p>
                <b>Return Value</b>
                <p>The initialized annotation view or <c>null</c> if there was a problem initializing the object.</p>
                <b>Discussion</b>
                <p>The reuse identifier provides a way for you to improve performance by recycling annotation views as they are scrolled on and off of the map. As views are no longer needed, they are moved to a reuse queue by the map view. When a new annotation becomes visible, your application can request a view for that annotation by passing the appropriate reuse identifier string to the <c>dequeueReusableAnnotationViewWithIdentifier:</c> method of <c>MKMapView</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="annotation">
            </param>
            <param name="reuseIdentifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.Prepare">
            <summary>
            Called when the view is removed from the reuse queue.
            <br></br>Equivalent to the native <c>prepareForReuse</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default implementation of this method does nothing. You can override it in your custom annotation views and use it to put the view in a known state before it is returned to your map view delegate. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>dequeueReusableAnnotationViewWithIdentifier:</c> (MKMapView)</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.SetDragState(U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState,System.Boolean)">
            <summary>
            Sets the current drag state for the annotation view.
            <br></br>Equivalent to the native <c>setDragState:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>newDragState</em>
                <p>The new drag state for the annotation view.</p>
                <em>animated</em>
                <p>If <c>true</c>, the change to the new drag state should be animated; otherwise, it should be made without animations. </p>
                <b>Discussion</b>
                <p>Applications targeting iOS 4.2 and later can override this method and use it to implement drag support for custom annotation views. As the system detects user actions that would indicate a drag, it calls this method to update the drag state. In response to these changes, your custom implementation of this method should do the following:</p>
                <ul class="ul">
                    <li class="li">
                        <p>When the drag state changes to <c>MKAnnotationViewDragStateStarting</c>, set the state to <c>MKAnnotationViewDragStateDragging</c>. If you perform an animation to indicate the beginning of a drag, and the <em>animated</em> parameter is <c>true</c>, perform that animation before changing the state.</p>
                    </li>
                    <li class="li">
                        <p>When the state changes to either <c>MKAnnotationViewDragStateCanceling</c> or <c>MKAnnotationViewDragStateEnding</c>, set the state to <c>MKAnnotationViewDragStateNone</c>. If you perform an animation at the end of a drag, and the <em>animated</em> parameter is <c>true</c>, you should perform that animation before changing the state.  </p>
                    </li>
                </ul>
                <p>The default implementation of this method sets the value of the <c>dragState</c> property to the value in the <em>newDragState</em> parameter only. Therefore, direct subclasses can simply call the inherited version of this method to change the drag state; otherwise, just change the value in the <c>draggable</c> property directly. </p>
                <p>Changing the state to <c>MKAnnotationViewDragStateDragging</c> or <c>MKAnnotationViewDragStateNone</c> is the way to signal to the map view that you are done with any animations you wanted to perform. For example, when a drag operation begins for a pin annotation, the <c>MKPinAnnotationView</c> class executes an animation to lift the pin off the map. Similarly, when the pin is dropped, the class performs a drop animation. Even if you do not perform any animations, you should call the inherited version of this method to update the <c>dragState</c> property.</p>
                <p>You must not try to abort a new drag operation by changing the state from <c>MKAnnotationViewDragStateStarting</c> to <c>MKAnnotationViewDragStateNone</c>. If you do not want your annotation view to be draggable, set the <c>draggable</c> property to <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
            <param name="newDragState">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.SetSelected(System.Boolean,System.Boolean)">
            <summary>
            Sets the selection state of the annotation view.
            <br></br>Equivalent to the native <c>setSelected:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>selected</em>
                <p>Contains the value <c>true</c> if the view should display itself as selected. </p>
                <em>animated</em>
                <p>Set to <c>true</c> if the change in selection state is animated. </p>
                <b>Discussion</b>
                <p>You should not call this method directly. An <c>MKMapView</c> object calls this method in response to user interactions with the annotation. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>selectAnnotation:animated:</c> (MKMapView)</li>
                </ul>
            </remarks>
            <param name="selected">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKAnnotationView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native MKAnnotationView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[MKAnnotationView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState">
            <summary>
            These constants indicate the current drag state of an annotation view.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState.Ending">
            <summary>
                <p>An action occurred that indicated the view was dropped by the user. The map view automatically moves annotation views to this state in response to appropriate user actions. </p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKAnnotationViewDragStateEnding</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState.Canceling">
            <summary>
                <p>An action occurred that indicated the view should cancel the drag operation. You can put an annotation view into this state to abort the operation. </p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKAnnotationViewDragStateCanceling</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState.None">
            <summary>
                <p>The view is not involved in a drag operation. The annotation view is responsible for returning itself to this state when a drag ends or is canceled.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKAnnotationViewDragStateNone</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState.Starting">
            <summary>
                <p>An action occurred that indicated the view should begin dragging. The map view automatically moves annotation views to this state in response to appropriate user actions.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKAnnotationViewDragStateStarting</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState.Dragging">
            <summary>
                <p>The view is in the middle of a drag operation and is tracking progress. </p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKAnnotationViewDragStateDragging</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKCircle">
            <summary>
            The <c>MKCircle</c> class is a concrete overlay object representing a circular area on a map. This class manages the data that defines the area and is typically used in conjunction with an <c>MKCircleView</c> object, which handles the drawing of the circular area on a map.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.UP_MKCircle_circleWithCenterCoordinate_radius_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.UP_MKCircle_circleWithMapRect_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.UP_MKCircle_get_boundingMapRect(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.UP_MKCircle_get_coordinate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.UP_MKCircle_get_radius(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKCircle" /> class.
            <br></br>Equivalent to the native <c>[[MKCircle alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKCircle.ClassExists">
            <summary>
            Returns whether the native MKCircle class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.Circle(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.Double)">
            <summary>
            Creates and returns an <c>MKCircle</c> object using the specified coordinate and radius.
            <br></br>Equivalent to the native <c>circleWithCenterCoordinate:radius:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coord</em>
                <p>The center point of the circle, specified as a latitude and longitude value.</p>
                <em>radius</em>
                <p>The radius of the circle, measured in meters from the center point.</p>
                <b>Return Value</b>
                <p>A circle overlay object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="coord">
            </param>
            <param name="radius">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircle.Circle(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Creates and returns an <c>MKCircle</c> object where the circular area is derived from the specified rectangle.
            <br></br>Equivalent to the native <c>circleWithMapRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The map rectangle used to determine the circular area. The center point of the rectangle is used as the center point of the circle. If the rectangle is not a square, the longest side of the rectangle is used to define the radius of the resulting circle. </p>
                <b>Return Value</b>
                <p>A circle overlay object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKCircle.boundingMapRect">
            <summary>
            The bounding rectangle of the circular area. (read-only)
            <br></br>Equivalent to the native <c>boundingMapRect</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>As latitude values move away from the equator and toward the poles, the physical distance between map points gets smaller. This means that more map points are needed to represent the same distance. As a result, the bounding rectangle of a circle overlay gets larger as the center point of that circle moves away from the equator and toward the poles. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKCircle.coordinate">
            <summary>
            The center point of the circular area, specified as a latitude and longitude. (read-only)
            <br></br>Equivalent to the native <c>coordinate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKCircle.radius">
            <summary>
            The radius of the circular area, measured in meters. (read-only)
            <br></br>Equivalent to the native <c>radius</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKCircleRenderer">
            <summary>
            The <c>MKCircleRenderer</c> class provides a visual representation for an <c>MKCircle</c> overlay object. This renderer draws by filling and stroking the circle represented by the overlay object. You can change the color and other drawing attributes of the circle by modifying the properties inherited from the parent class. You typically use this class as is and do not subclass it.
            </summary>
            <remarks>
                <p>You create an instance of this class in your map view delegate’s <c>mapView:rendererForOverlay:</c> method. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleRenderer.UP_MKCircleRenderer_get_circle(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleRenderer.UP_MKCircleRenderer_alloc_initWithCircle_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleRenderer.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKCircleRenderer" /> class.
            <br></br>Equivalent to the native <c>[[MKCircleRenderer alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleRenderer.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKCircleRenderer.ClassExists">
            <summary>
            Returns whether the native MKCircleRenderer class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKCircleRenderer.circle">
            <summary>
            The circle overlay object that contains the information used to draw the overlay. (read-only)
            <br></br>Equivalent to the native <c>circle</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKCircle)">
            <summary>
            Creates an instance of the native MKCircleRenderer and initializes the object. Initializes and returns a new overlay view using the specified circle overlay object.
            <br></br>Equivalent to the native <c>[[MKCircleRenderer alloc] initWithCircle:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>circle</em>
                <p>The circle overlay containing the information about the circular area to be drawn. The renderer maintains a strong reference to the object you provide. This parameter must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized circle renderer object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="circle">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKCircleRenderer and initializes the object. Inherits from <c>MKOverlayRenderer</c>. Initializes and returns the overlay renderer and associates it with the specified overlay object.
            <br></br>Equivalent to the native <c>[[MKCircleRenderer alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay content on the map. This object provides the data needed to draw the overlay’s shape. The overlay renderer stores a strong reference to this object.</p>
                <b>Return Value</b>
                <p>An initialized overlay renderer object.</p>
                <b>Discussion</b>
                <p>Initially, the overlay renderer assumes that the overlay is fully opaque and that it has a content scale factor of 1.0. You can change these values as needed using the <c>alpha</c> and <c>contentScaleFactor</c> properties.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayRenderer" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKCircleView">
            <summary>
            The <c>MKCircleView</c> class provides the visual representation for an <c>MKCircle</c> annotation object. This view fills and strokes the circle represented by the annotation. You can change the color and other drawing attributes of the circle by modifying the properties inherited from the <c>MKOverlayPathView</c> class. This class is typically used as is and not subclassed.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>Use of this class is discouraged in iOS 7 and later. Use the <c>MKCircleRenderer</c> class instead.  </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.UP_MKCircleView_get_circle(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.UP_MKCircleView_alloc_initWithCircle_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKCircleView" /> class.
            <br></br>Equivalent to the native <c>[[MKCircleView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKCircleView.ClassExists">
            <summary>
            Returns whether the native MKCircleView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKCircleView.circle">
            <summary>
            The circle overlay object that contains the information used to draw the overlay. (read-only) ( Deprecated in iOS 7.0.  Use the <c>MKCircleRenderer</c> class instead.)
            <br></br>Equivalent to the native <c>circle</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.#ctor(U3DXT.iOS.Native.MapKit.MKCircle)">
            <summary>
            Creates an instance of the native MKCircleView and initializes the object. Initializes and returns a new overlay view using the specified circle overlay object. ( Deprecated in iOS 7.0.  Use the <c>MKCircleRenderer</c> class instead.)
            <br></br>Equivalent to the native <c>[[MKCircleView alloc] initWithCircle:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>circle</em>
                <p>The circle overlay containing the information about the circular area to be drawn.</p>
                <b>Return Value</b>
                <p>A new circle overlay view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="circle">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKCircleView and initializes the object. Inherits from <c>MKOverlayView</c>. Initializes and returns the overlay view and associates it with the specified overlay object. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>[[MKCircleView alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay on the map. This object provides the data needed to draw the overlay’s shape. This object is retained by the overlay view. </p>
                <b>Return Value</b>
                <p>An initialized overlay object.</p>
                <b>Discussion</b>
                <p>Upon initialization, the frame of the overlay view is set to <c>CGRectZero</c>. The map view sets the size and position of the view at display time, and you should not change those values yourself.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayView" />
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCircleView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native MKCircleView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[MKCircleView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion">
            <summary>
            A structure that defines which portion of the map to display.
            </summary>
            <remarks>
                <b>Fields</b>
                <p>
                </p>
                <c>center</c>
                <p>The center point of the region.</p>
                <c>span</c>
                <p>The horizontal and vertical span representing the amount of map to display. The span also defines the current zoom level used by the map view object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKCoordinateRegion.center">
            <summary> The center.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKCoordinateRegion.span">
            <summary> The span.</summary>;</member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateRegion.#ctor(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,U3DXT.iOS.Native.MapKit.MKCoordinateSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" /> struct.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateRegion._Serialize">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateRegion._Deserialize(System.Object)">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
            <param name="json">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateRegion.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" />.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateRegion.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" /> object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateRegion.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" />.
            </summary>
            <param name="other">
            The <see cref="T:System.Object" /> to compare with the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateRegion.op_Equality(U3DXT.iOS.Native.MapKit.MKCoordinateRegion,U3DXT.iOS.Native.MapKit.MKCoordinateRegion)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" /> is equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateRegion.op_Inequality(U3DXT.iOS.Native.MapKit.MKCoordinateRegion,U3DXT.iOS.Native.MapKit.MKCoordinateRegion)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" /> is not equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateRegion" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan">
            <summary>
            A structure that defines the area spanned by a map region.
            </summary>
            <remarks>
                <b>Fields</b>
                <p>
                </p>
                <c>latitudeDelta</c>
                <p>The amount of north-to-south distance (measured in degrees) to display on the map. Unlike longitudinal distances, which vary based on the latitude, one degree of latitude is always approximately 111 kilometers (69 miles).</p>
                <c>longitudeDelta</c>
                <p>The amount of east-to-west distance (measured in degrees) to display for the map region. The number of kilometers spanned by a longitude range varies based on the current latitude. For example, one degree of longitude spans a distance of approximately 111 kilometers (69 miles) at the equator but shrinks to 0 kilometers at the poles.</p>
                <b>Discussion</b>
                <p>You use the delta values in this structure to indicate the desired zoom level of the map, with smaller delta values corresponding to a higher zoom level. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKCoordinateSpan.latitudeDelta">
            <summary> The latitudeDelta.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKCoordinateSpan.longitudeDelta">
            <summary> The longitudeDelta.</summary>;</member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateSpan.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" /> struct.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateSpan._Serialize">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateSpan._Deserialize(System.Object)">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
            <param name="json">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateSpan.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" />.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateSpan.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" /> object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateSpan.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" />.
            </summary>
            <param name="other">
            The <see cref="T:System.Object" /> to compare with the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateSpan.op_Equality(U3DXT.iOS.Native.MapKit.MKCoordinateSpan,U3DXT.iOS.Native.MapKit.MKCoordinateSpan)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" /> is equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKCoordinateSpan.op_Inequality(U3DXT.iOS.Native.MapKit.MKCoordinateSpan,U3DXT.iOS.Native.MapKit.MKCoordinateSpan)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" /> is not equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKCoordinateSpan" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKDirections">
            <summary>
            An <c>MKDirections</c> object provides you with route-based directions data from Apple servers. You can use instances of this class to get travel-time information or driving or walking directions based on the data in an <c>MKDirectionsRequest</c> object that you provide. The directions object passes your request to the Apple servers and returns the requested information to a block that you provide.
            </summary>
            <remarks>
                <p>Each directions object handles a single request for directions, although you can cancel and restart that request as needed. You can create multiple instances of this class and process different route requests at the same time, but you should make requests only when you plan to present the corresponding route information to the user. Apps may receive a <c>MKErrorLoadingThrottled</c> error if too many requests have been made from the current device in too short a time period.  </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.UP_MKDirections_get_calculating(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.UP_MKDirections_calculateDirectionsWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.UP_MKDirections_calculateETAWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.UP_MKDirections_cancel(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.UP_MKDirections_alloc_initWithRequest_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKDirections" /> class.
            <br></br>Equivalent to the native <c>[[MKDirections alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirections.ClassExists">
            <summary>
            Returns whether the native MKDirections class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirections.calculating">
            <summary>
            A Boolean value indicating whether a request is currently in process. (read-only)
            <br></br>Equivalent to the native <c>calculating</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.CalculateDirections(System.Action{U3DXT.iOS.Native.MapKit.MKDirectionsResponse,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Begins calculating the requested route information asynchronously.
            <br></br>Equivalent to the native <c>calculateDirectionsWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>The block to execute when the directions are ready or when an error occurs. This parameter must not be <c>null</c>.</p>
                <b>Discussion</b>
                <p>This method initiates the request for directions and calls your completion handler block with the results. Your completion handler is executed on your app’s main thread. The implementation of your handler should check for errors and then incorporate the response data as appropriate.</p>
                <p>If you call this method while a previous request is in process, this method calls your completion handler with an error. You can determine if a request is in process by checking the value of the <c>calculating</c> property. You can also cancel a request as needed. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property calculating</c></li>
                    <li>
                        <c>– cancel</c>
                    </li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.CalculateETA(System.Action{U3DXT.iOS.Native.MapKit.MKETAResponse,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Begins calculating the requested travel-time information asynchronously.
            <br></br>Equivalent to the native <c>calculateETAWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>The block to execute when the travel-time estimate is ready or when an error occurs. This parameter must not be <c>null</c>.</p>
                <b>Discussion</b>
                <p>This method initiates a request for a travel-time estimate and calls your completion handler block with the results. Travel-time estimates take much less time to generate than directions, so use this method in situations where you want a time estimate only. Your completion handler is executed on your app’s main thread. The implementation of your handler should check for errors and then incorporate the response data as appropriate.</p>
                <p>If you call this method while a previous request is in process, this method calls your completion handler with an error. You can determine if a request is in process by checking the value of the <c>calculating</c> property. You can also cancel a request as needed. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.Cancel">
            <summary>
            Cancels a pending request.
            <br></br>Equivalent to the native <c>cancel</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>After canceling a request, you can call the <c>calculateDirectionsWithCompletionHandler:</c> method again (if you want) to restart the request process. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirections.#ctor(U3DXT.iOS.Native.MapKit.MKDirectionsRequest)">
            <summary>
            Creates an instance of the native MKDirections and initializes the object. Initializes and returns a directions object using the specified request.
            <br></br>Equivalent to the native <c>[[MKDirections alloc] initWithRequest:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>request</em>
                <p>The request object containing the start and end points of the route. This parameter must not be <c>null</c>. </p>
                <b>Return Value</b>
                <p>An initialized directions object.</p>
                <b>Discussion</b>
                <p>After initializing your directions object, you must call the <c>calculateDirectionsWithCompletionHandler:</c> or <c>calculateETAWithCompletionHandler:</c> method to perform the request. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="request">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKDirectionsRequest">
            <summary>
            The <c>MKDirectionsRequest</c> class is used by apps that work with turn-based directions. When the Maps app sends a directions-related URL to your app, you use this class to decode the URL contents and determine the start and end points of a route. You then use that data to compute the actual route and display the results to the user. For apps that want to supplement their own routing directions, you can also use instances of this class to specify route information that you want from Apple.
            </summary>
            <remarks>
                <p>For apps that provide directions, upon receiving a URL in your app delegate’s <c>application:openURL:sourceApplication:annotation:</c> method, use the <c>isDirectionsRequestURL:</c> method of this class to determine if the URL is related to routing directions. If it is, create an instance of this class using the provided URL and extract the map items associated with the start and end points. You can then use those points to begin your route planning.</p>
                <p>
                    <strong>Note:</strong> To provide routing directions, apps must include special keys in their <c>Info.plist</c> file and be able to handle URLs sent to it by the Maps app. These keys indicate a special URL type that your app must be prepared to handle. For information about how to implement this support, see <em>Location and Maps Programming Guide</em>.</p>
                <p>
                </p>
                <p>You can use this class to request directions for modes of transportation that your app does not natively handle. For example, an app that provides subway directions might request walking directions to and from relevant subway stations. To request directions, create a new instance of this class and configure it with the new start and end points you need. Then create a <c>MKDirections</c> object and use the methods of that class to initiate the request and process the results.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_isDirectionsRequestURL_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_get_arrivalDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_set_arrivalDate(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_get_departureDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_set_departureDate(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_get_requestsAlternateRoutes(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_set_requestsAlternateRoutes(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_get_transportType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_set_transportType(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_destination(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_alloc_initWithContentsOfURL_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_setDestination_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_setSource_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.UP_MKDirectionsRequest_source(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKDirectionsRequest" /> class.
            <br></br>Equivalent to the native <c>[[MKDirectionsRequest alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.ClassExists">
            <summary>
            Returns whether the native MKDirectionsRequest class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.IsDirectionsRequestURL(U3DXT.iOS.Native.Foundation.NSURL)">
            <summary>
            Returns a Boolean indicating whether the specified URL contains a directions request.
            <br></br>Equivalent to the native <c>isDirectionsRequestURL:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>url</em>
                <p>The URL provided to your app.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the URL contains a directions request that your app should display to the user or <c>false</c> if it does not.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="url">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.arrivalDate">
            <summary>
            The arrival date for the trip.
            <br></br>Equivalent to the native <c>arrivalDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Specifying an arrival date provides the server with extra information that it can use to optimize the returned routes. For example, for a trip that takes place during commute hours, the server might consider alternatives to routes that are typically congested at that time.</p>
                <p>The use of this property is optional.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.departureDate">
            <summary>
            The departure date for the trip.
            <br></br>Equivalent to the native <c>departureDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Specifying a departure date provides the server with extra information that it can use to optimize the returned routes. For example, for a trip that takes place during commute hours, the server might consider alternatives to routes that are typically congested at that time.</p>
                <p>The use of this property is optional.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.requestsAlternateRoutes">
            <summary>
            A Boolean indicating whether your app wants multiple routes when they are available.
            <br></br>Equivalent to the native <c>requestsAlternateRoutes</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is set to <c>false</c>, the server returns a single route between the start and end points. When this property is <c>true</c>, the server may return additional routes for the user to follow. The server returns additional routes only if they are available and represent a reasonable path that the user might take. </p>
                <p>The default value of this property is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.transportType">
            <summary>
            The type of conveyance to which the directions should apply.
            <br></br>Equivalent to the native <c>transportType</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You can use this property to specify whether you want directions suited to a particular type of transportation. For example, you can use this to specify that you want walking directions or driving directions. </p>
                <p>The default value of this property is <c>MKDirectionsTransportTypeAny</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.Destination">
            <summary>
            Returns the end point for routing directions
            <br></br>Equivalent to the native <c>destination</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The end point for routing directions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.#ctor(U3DXT.iOS.Native.Foundation.NSURL)">
            <summary>
            Creates an instance of the native MKDirectionsRequest and initializes the object. Initializes and returns a directions request object using the specified URL.
            <br></br>Equivalent to the native <c>[[MKDirectionsRequest alloc] initWithContentsOfURL:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>url</em>
                <p>The URL provided to your app.</p>
                <b>Return Value</b>
                <p>An initialized directions request object.</p>
                <b>Discussion</b>
                <p>You should use the <c>isDirectionsRequestURL:</c> method to verify that the specified URL is of the correct format before calling this method to initialize the object.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="url">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.SetDestination(U3DXT.iOS.Native.MapKit.MKMapItem)">
            <summary>
            Sets the end point for routing directions
            <br></br>Equivalent to the native <c>setDestination:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>destination</em>
                <p>The map item that represents the end point for routing directions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="destination">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.SetSource(U3DXT.iOS.Native.MapKit.MKMapItem)">
            <summary>
            Sets the starting point for routing directions.
            <br></br>Equivalent to the native <c>setSource:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>source</em>
                <p>The map item that represents the starting point for routing directions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="source">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsRequest.Source">
            <summary>
            Returns the starting point for routing directions.
            <br></br>Equivalent to the native <c>source</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The starting point for routing directions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKDirectionsResponse">
            <summary>
            The <c>MKDirectionsResponse</c> class provides a container for route information returned by the Apple servers. You do not create instances of this class directly. Instead, you initiate a request for directions between two points by calling the <c>calculateDirectionsWithCompletionHandler:</c> method of an <c>MKDirections</c> object. You receive an instance of this class as the result.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.UP_MKDirectionsResponse_get_destination(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.UP_MKDirectionsResponse_get_routes(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.UP_MKDirectionsResponse_get_source(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKDirectionsResponse" /> class.
            <br></br>Equivalent to the native <c>[[MKDirectionsResponse alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.ClassExists">
            <summary>
            Returns whether the native MKDirectionsResponse class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.destination">
            <summary>
            The end point of the route. (read-only)
            <br></br>Equivalent to the native <c>destination</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The item in this property may contain additional details that were not included in the original item used to create the <c>MKDirectionsRequest</c> object. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.routes">
            <summary>
            An array of route objects representing the directions between the start and end points. (read-only)
            <br></br>Equivalent to the native <c>routes</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The array contains one or more <c>MKRoute</c> objects, each of which represents a possible set of directions for the user to follow. If you did not request alternate routes in the original directions request, this array contains at most one object.</p>
                <p>Each route object contains geometry information that you can use to display that route on your app’s map view. Routes may also contain additional information that is relevant to that particular route, such as the expected travel time and any trip advisory notices.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDirectionsResponse.source">
            <summary>
            The start point of the route. (read-only)
            <br></br>Equivalent to the native <c>source</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The item in this property may contain additional details that were not included in the original item used to create the <c>MKDirectionsRequest</c> object. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKDirectionsTransportType">
            <summary>
            Constants that specify the type of conveyance to be used.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDirectionsTransportType.Automobile">
            <summary>
                <p>Directions suitable for use while driving.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDirectionsTransportTypeAutomobile</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDirectionsTransportType.Any">
            <summary>
                <p>Directions suitable for any transportation option.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDirectionsTransportTypeAny</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDirectionsTransportType.Walking">
            <summary>
                <p>Directions suitable for a pedestrian.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDirectionsTransportTypeWalking</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKDistanceFormatter">
            <summary>
            The <c>MKDistanceFormatter</c> class implements a formatter object for geographic distances. You can apply a distance formatter in places where you need to specify distances and know that the values are formatted appropriately for the user’s locale and language. You can also parse existing format strings to retrieve the corresponding distance value.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.UP_MKDistanceFormatter_get_locale(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.UP_MKDistanceFormatter_set_locale(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.UP_MKDistanceFormatter_get_units(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.UP_MKDistanceFormatter_set_units(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.UP_MKDistanceFormatter_get_unitStyle(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.UP_MKDistanceFormatter_set_unitStyle(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.UP_MKDistanceFormatter_distanceFromString_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.UP_MKDistanceFormatter_stringFromDistance_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKDistanceFormatter" /> class.
            <br></br>Equivalent to the native <c>[[MKDistanceFormatter alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.ClassExists">
            <summary>
            Returns whether the native MKDistanceFormatter class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.locale">
            <summary>
            The locale to use when formatting strings.
            <br></br>Equivalent to the native <c>locale</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you do not specify an explicit locale, the formatter uses the user’s current locale information. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.units">
            <summary>
            The measuring system (imperial or metric) to use for units.
            <br></br>Equivalent to the native <c>units</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You can use this property to explicitly set the measuring system for units. The default value of this property is <c>MKDistanceFormatterUnitsDefault</c>, which bases the measuring system on the user’s locale. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.unitStyle">
            <summary>
            The preferred style for units.
            <br></br>Equivalent to the native <c>unitStyle</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Units can be abbreviated or fully spelled out. The default value of this property is <c>MKDistanceFormatterUnitStyleDefault</c>, which bases the style on the user’s locale and language settings.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.Distance(System.String)">
            <summary>
            Returns the distance value contained in a formatted string.
            <br></br>Equivalent to the native <c>distanceFromString:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>distance</em>
                <p>A formatted string that specifies a distance. </p>
                <b>Return Value</b>
                <p>The distance value represented by the string.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="distance">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKDistanceFormatter.String(System.Double)">
            <summary>
            Creates a string based on the specified distance.
            <br></br>Equivalent to the native <c>stringFromDistance:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>distance</em>
                <p>The distance value.</p>
                <b>Return Value</b>
                <p>A user-readable string that specifies the distance value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="distance">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnitStyle">
            <summary>
            Constants that indicate the format style to use for strings.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnitStyle.Default">
            <summary>
                <p>The decision to abbreviate is based on the current locale and user language settings.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDistanceFormatterUnitStyleDefault</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnitStyle.Abbreviated">
            <summary>
                <p>Use abbreviated units. For example, use the abbreviation <c>km</c> instead of <c>kilometer</c>.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDistanceFormatterUnitStyleAbbreviated</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnitStyle.Full">
            <summary>
                <p>Spell out units in full. For example, use <c>kilometer</c> instead of the abbreviation <c>km</c>.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDistanceFormatterUnitStyleFull</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnits">
            <summary>
            Constants that reflect the type of units to use in the string.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnits.Default">
            <summary>
                <p>The format uses the locale information to determine which units to use. Some locales mix metric and imperial units so do not assume this means one or the other.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDistanceFormatterUnitsDefault</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnits.Metric">
            <summary>
                <p>The format uses metric units.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDistanceFormatterUnitsMetric</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnits.Imperial">
            <summary>
                <p>The format uses imperial units.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDistanceFormatterUnitsImperial</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKDistanceFormatterUnits.ImperialWithYards">
            <summary>
                <p>The format uses imperial units that include measurements in yards.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKDistanceFormatterUnitsImperialWithYards</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKETAResponse">
            <summary>
            The <c>MKETAResponse</c> class provides a container for travel-time information returned by the Apple servers. You do not create instances of this class directly. Instead, you initiate a request for the travel time between two points by calling the <c>calculateETAWithCompletionHandler:</c> method of an <c>MKDirections</c> object. You receive an instance of this class as the result.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKETAResponse.UP_MKETAResponse_get_destination(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKETAResponse.UP_MKETAResponse_get_expectedTravelTime(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKETAResponse.UP_MKETAResponse_get_source(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKETAResponse.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKETAResponse.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKETAResponse.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKETAResponse" /> class.
            <br></br>Equivalent to the native <c>[[MKETAResponse alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKETAResponse.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKETAResponse.ClassExists">
            <summary>
            Returns whether the native MKETAResponse class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKETAResponse.destination">
            <summary>
            The end point of the route. (read-only)
            <br></br>Equivalent to the native <c>destination</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The item in this property may contain additional details that were not included in the original item used to create the <c>MKDirectionsRequest</c> object. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKETAResponse.expectedTravelTime">
            <summary>
            The expected travel time in seconds. (read-only)
            <br></br>Equivalent to the native <c>expectedTravelTime</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This expected travel time reflects the time it takes to traverse the route under ideal conditions. The actual amount of time may vary based on traffic, weather, and other travel conditions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKETAResponse.source">
            <summary>
            The start point of the route. (read-only)
            <br></br>Equivalent to the native <c>source</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This item in this property may contain additional details that were not included in the original item used to create the <c>MKDirectionsRequest</c> object. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKErrorCode">
            <summary>
            Error constants for the Map Kit framework.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKErrorCode.DirectionsNotFound">
            <summary>
                <p>The specified directions could not be found. </p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKErrorDirectionsNotFound</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKErrorCode.ServerFailure">
            <summary>
                <p>The map server was unable to return the desired information.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKErrorServerFailure</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKErrorCode.LoadingThrottled">
            <summary>
                <p>The data was not loaded because data throttling is in effect. This error can occur if an app makes frequent requests for data over a short period of time.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKErrorLoadingThrottled</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKErrorCode.Unknown">
            <summary>
                <p>An unknown error occurred.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKErrorUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKErrorCode.PlacemarkNotFound">
            <summary>
                <p>The specified placemark could not be found. </p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKErrorPlacemarkNotFound</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline">
            <summary>
            The <c>MKGeodesicPolyline</c> class represents a line shape that traces the shortest path along the surface of the Earth. As with regular polyline overlays, you specify a geodesic polyline using a set of end-to-end points where the first and last points are not connected to each other. When displayed on a two-dimensional map view, the line segment between any two points may appear curved.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.UP_MKGeodesicPolyline_polylineWithCoordinates_count_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.UP_MKGeodesicPolyline_polylineWithPoints_count_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline" /> class.
            <br></br>Equivalent to the native <c>[[MKGeodesicPolyline alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.ClassExists">
            <summary>
            Returns whether the native MKGeodesicPolyline class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.Polyline(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.UInt32)">
            <summary>
            Creates and returns an geodesic polyline using the specified coordinates.
            <br></br>Equivalent to the native <c>polylineWithCoordinates:count:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coords</em>
                <p>A pointer to the array of coordinates that define the path.</p>
                <em>count</em>
                <p>The number of items in the <em>coords</em> array.</p>
                <b>Return Value</b>
                <p>A new geodesic polyline object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="coords">
            </param>
            <param name="count">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeodesicPolyline.Polyline(U3DXT.iOS.Native.MapKit.MKMapPoint,System.UInt32)">
            <summary>
            Creates and returns an geodesic polyline using the specified map points.
            <br></br>Equivalent to the native <c>polylineWithPoints:count:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>points</em>
                <p>A pointer to the array of map points that define the path.</p>
                <em>count</em>
                <p>The number of items in the <em>points</em> array.</p>
                <b>Return Value</b>
                <p>A new geodesic polyline object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="points">
            </param>
            <param name="count">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKGeometry">
            <summary>
            Functions belonging to MKGeometry.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapPointEqualToPoint(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectContainsPoint(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectContainsRect(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectEqualToRect(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectIntersectsRect(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectIsEmpty(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectIsNull(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapSizeEqualToSize(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKCoordinateForMapPoint(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKCoordinateRegionForMapRect(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapPointForCoordinate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectRemainder(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectSpans180thMeridian(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapPointsPerMeterAtLatitude(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMetersBetweenMapPoints(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMetersPerMapPointAtLatitude(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectGetHeight(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectGetMaxX(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectGetMaxY(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectGetMidX(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectGetMidY(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectGetMinX(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectGetMinY(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectGetWidth(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKStringFromMapPoint(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKStringFromMapRect(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKStringFromMapSize(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKCoordinateRegionMake(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKCoordinateRegionMakeWithDistance(System.String,System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKCoordinateSpanMake(System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapPointMake(System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectMake(System.Double,System.Double,System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapSizeMake(System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectDivide(System.String,System.String,System.String,System.Double,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectInset(System.String,System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectIntersection(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectOffset(System.String,System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.UP_MKGeometry_MKMapRectUnion(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapPointEqualToPoint(U3DXT.iOS.Native.MapKit.MKMapPoint,U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Returns a Boolean value indicating whether the two map points are equal.
            <br></br>Equivalent to the native <c>MKMapPointEqualToPoint</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point1</em>
                <p>The first map point.</p>
                <em>point2</em>
                <p>The second point.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the <c>x</c> and <c>y</c> values in both points are exactly the same or <c>false</c> if one or both values are different.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="point1">
            </param>
            <param name="point2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectContainsPoint(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Returns a Boolean value indicating whether the specified map point lies within the rectangle.
            <br></br>Equivalent to the native <c>MKMapRectContainsPoint</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle being tested.</p>
                <em>point</em>
                <p>The point to check.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the rectangle is not null or empty and the point is located inside the rectangle; otherwise, <c>false</c>.</p>
                <b>Discussion</b>
                <p>A point is considered to be inside the rectangle if its coordinates lie inside the rectangle or on the minimum X or minimum Y edge. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectContainsRect(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns Boolean value indicating whether one rectangle contains another.
            <br></br>Equivalent to the native <c>MKMapRectContainsRect</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect1</em>
                <p>The containing rectangle. </p>
                <em>rect2</em>
                <p>The rectangle that might be contained in <em>rect1</em>. </p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if <em>rect2</em> is null or lies entirely inside <em>rect1</em>; otherwise, returns <c>false</c> if <em>rect1</em> is null or does not completely enclose <em>rect2</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect1">
            </param>
            <param name="rect2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectEqualToRect(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns a Boolean value indicating whether the two map rectangles are equal
            <br></br>Equivalent to the native <c>MKMapRectEqualToRect</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect1</em>
                <p>The first map rectangle.</p>
                <em>rect2</em>
                <p>The second map rectangle.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the rectangles are exactly the same or <c>false</c> if the origin point or size values are different.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect1">
            </param>
            <param name="rect2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectIntersectsRect(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns a Boolean value indicating whether two rectangles intersect each other.
            <br></br>Equivalent to the native <c>MKMapRectIntersectsRect</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect1</em>
                <p>The first rectangle to test.</p>
                <em>rect2</em>
                <p>The second rectangle to test.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if <em>rect1</em> and <em>rect2</em> intersect each other or <c>false</c> if they do not intersect or either rectangle is null.</p>
                <b>Discussion</b>
                <p>The rectangles are not considered to be intersecting if the only intersection occurs along an edge. To be considered a true intersection, the rectangles must both enclose a single rectangular area whose width and height are both greater than <c>0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect1">
            </param>
            <param name="rect2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectIsEmpty(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns a Boolean value indicating whether the specified rectangle has no area.
            <br></br>Equivalent to the native <c>MKMapRectIsEmpty</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle to test.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the rectangle is null or its width or height are equal to 0; otherwise, <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectIsNull(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns a Boolean indicating whether the specified rectangle is null.
            <br></br>Equivalent to the native <c>MKMapRectIsNull</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle to test.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the rectangle is null or <c>false</c> if it is not null.</p>
                <b>Discussion</b>
                <p>A rectangle is considered null if its origin point contains an invalid or infinite value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapSizeEqualToSize(U3DXT.iOS.Native.MapKit.MKMapSize,U3DXT.iOS.Native.MapKit.MKMapSize)">
            <summary>
            Returns a Boolean value indicating whether the two map sizes are equal.
            <br></br>Equivalent to the native <c>MKMapSizeEqualToSize</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>size1</em>
                <p>The first map size.</p>
                <em>size2</em>
                <p>The second map size.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the <c>width</c> and <c>height</c> values in both sizes are exactly the same or <c>false</c> if one or both values are different.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="size1">
            </param>
            <param name="size2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKCoordinate(U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Returns the latitude and longitude that corresponds to the specified map point.
            <br></br>Equivalent to the native <c>MKCoordinateForMapPoint</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapPoint</em>
                <p>The map point value that corresponds to the desired point on a two-dimensional map projection.</p>
                <b>Return Value</b>
                <p>The coordinate structure containing the latitude and longitude values for the specified point.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapPoint">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKCoordinateRegion(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the region that corresponds to the specified map rectangle.
            <br></br>Equivalent to the native <c>MKCoordinateRegionForMapRect</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle that corresponds to the desired region on a two-dimensional map projection.</p>
                <b>Return Value</b>
                <p>The region structure specifying the latitude, longitude, and span values for the specified rectangle.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapPoint(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            Returns the map point data structure that corresponds to the specified coordinate.
            <br></br>Equivalent to the native <c>MKMapPointForCoordinate</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>The coordinate containing the latitude and longitude values for the desired point.</p>
                <b>Return Value</b>
                <p>The map point value that corresponds to the specified coordinate on a two-dimensional map projection. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectRemainder(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Normalizes the portion of the specified rectangle that lies outside the world map boundaries.
            <br></br>Equivalent to the native <c>MKMapRectRemainder</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle to check.</p>
                <b>Discussion</b>
                <p>For a rectangle that lies on the 180th meridian, this function isolates the portion that lies outside the boundary, wraps it to the opposite side of the map, and returns that rectangle. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectSpans180thMeridian(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns a Boolean value that indicates whether the specified map rectangle crosses the 180th meridian.
            <br></br>Equivalent to the native <c>MKMapRectSpans180thMeridian</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle to test.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the rectangle spans the 180th meridian or <c>false</c> if it is contained wholly within the world map.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapPointsPerMeterAtLatitude(System.Double)">
            <summary>
            Returns the number of map points that represent one meter at the given latitude.
            <br></br>Equivalent to the native <c>MKMapPointsPerMeterAtLatitude</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>latitude</em>
                <p>The latitude for which to return the value.</p>
                <b>Return Value</b>
                <p>The number of map points that span one meter. </p>
                <b>Discussion</b>
                <p>The number of map points per meter increases as the latitude approaches the poles. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="latitude">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMetersBetweenMapPoints(U3DXT.iOS.Native.MapKit.MKMapPoint,U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Returns the number of meters between two map points.
            <br></br>Equivalent to the native <c>MKMetersBetweenMapPoints</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>a</em>
                <p>The first map point.</p>
                <em>b</em>
                <p>The second map point.</p>
                <b>Return Value</b>
                <p>The number of meters between the specified map points.</p>
                <b>Discussion</b>
                <p>This distance reflects the actual distance between the two points on the surface of the globe, taking into account the curvature of the Earth. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="a">
            </param>
            <param name="b">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMetersPerMapPointAtLatitude(System.Double)">
            <summary>
            Returns the distance spanned by one map point at the specified latitude.
            <br></br>Equivalent to the native <c>MKMetersPerMapPointAtLatitude</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>latitude</em>
                <p>The latitude for which to return the value.</p>
                <b>Return Value</b>
                <p>The distance (in meters) spanned by a single map point. </p>
                <b>Discussion</b>
                <p>The distance between map points decreases as the latitude approaches the poles. This relationship parallels the relationship between longitudinal coordinates at different latitudes.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="latitude">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectGetHeight(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the height of the map rectangle.
            <br></br>Equivalent to the native <c>MKMapRectGetHeight</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to test.</p>
                <b>Return Value</b>
                <p>The rectangle’s height.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectGetMaxX(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the maximum x-axis value of the specified rectangle.
            <br></br>Equivalent to the native <c>MKMapRectGetMaxX</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to test.</p>
                <b>Return Value</b>
                <p>The maximum x-axis value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectGetMaxY(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the maximum y-axis value of the specified rectangle.
            <br></br>Equivalent to the native <c>MKMapRectGetMaxY</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to test.</p>
                <b>Return Value</b>
                <p>The maximum y-axis value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectGetMidX(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the mid-point along the x-axis of the specified rectangle.
            <br></br>Equivalent to the native <c>MKMapRectGetMidX</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to test.</p>
                <b>Return Value</b>
                <p>The midpoint value along the x-axis.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectGetMidY(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the mid-point along the y-axis of the specified rectangle.
            <br></br>Equivalent to the native <c>MKMapRectGetMidY</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to test.</p>
                <b>Return Value</b>
                <p>The midpoint value along the y-axis.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectGetMinX(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the minimum x-axis value of the specified rectangle.
            <br></br>Equivalent to the native <c>MKMapRectGetMinX</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to test.</p>
                <b>Return Value</b>
                <p>The minimum x-axis value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectGetMinY(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the minimum y-axis value of the specified rectangle.
            <br></br>Equivalent to the native <c>MKMapRectGetMinY</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to test.</p>
                <b>Return Value</b>
                <p>The minimum y-axis value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectGetWidth(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the width of the map rectangle.
            <br></br>Equivalent to the native <c>MKMapRectGetWidth</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to test.</p>
                <b>Return Value</b>
                <p>The rectangle’s width.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKString(U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Returns a formatted string for the specified map point.
            <br></br>Equivalent to the native <c>MKStringFromMapPoint</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>The map point to format.</p>
                <b>Return Value</b>
                <p>A formatted string containing the x and y coordinates of the map point.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKString(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns a formatted string for the specified map rectangle.
            <br></br>Equivalent to the native <c>MKStringFromMapRect</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The map rectangle to format.</p>
                <b>Return Value</b>
                <p>A formatted string containing the origin and size values of the map rectangle.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKString(U3DXT.iOS.Native.MapKit.MKMapSize)">
            <summary>
            Returns a formatted string for the specified map size.
            <br></br>Equivalent to the native <c>MKStringFromMapSize</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>size</em>
                <p>The map size to format.</p>
                <b>Return Value</b>
                <p>A formatted string containing the width and height values of the map size.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="size">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKCoordinateRegionMake(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,U3DXT.iOS.Native.MapKit.MKCoordinateSpan)">
            <summary>
            Creates a new <c>MKCoordinateRegion</c> from the specified coordinate and span values.
            <br></br>Equivalent to the native <c>MKCoordinateRegionMake</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>centerCoordinate</em>
                <p>The center point of the region.</p>
                <em>span</em>
                <p>The horizontal and vertical span representing the amount of map to display. The size of the span also reflects the current zoom level.</p>
                <b>Return Value</b>
                <p>A region with the specified values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="centerCoordinate">
            </param>
            <param name="span">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKCoordinateRegionMake(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.Double,System.Double)">
            <summary>
            Creates a new <c>MKCoordinateRegion</c> from the specified coordinate and distance values.
            <br></br>Equivalent to the native <c>MKCoordinateRegionMakeWithDistance</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>centerCoordinate</em>
                <p>The center point of the new coordinate region.</p>
                <em>latitudinalMeters</em>
                <p>The amount of north-to-south distance (measured in meters) to use for the span.</p>
                <em>longitudinalMeters</em>
                <p>The amount of east-to-west distance (measured in meters) to use for the span.</p>
                <b>Return Value</b>
                <p>A region with the specified values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="centerCoordinate">
            </param>
            <param name="latitudinalMeters">
            </param>
            <param name="longitudinalMeters">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKCoordinateSpanMake(System.Double,System.Double)">
            <summary>
            Creates a new <c>MKCoordinateSpan</c> from the specified values.
            <br></br>Equivalent to the native <c>MKCoordinateSpanMake</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>latitudeDelta</em>
                <p>The amount of north-to-south distance (measured in degrees) to use for the span. Unlike longitudinal distances, which vary based on the latitude, one degree of latitude is approximately 111 kilometers (69 miles) at all times.</p>
                <em>longitudeDelta</em>
                <p>The amount of east-to-west distance (measured in degrees) to use for the span. The number of kilometers spanned by a longitude range varies based on the current latitude. For example, one degree of longitude spans a distance of approximately 111 kilometers (69 miles) at the equator but shrinks to 0 kilometers at the poles.</p>
                <b>Return Value</b>
                <p>A span with the specified delta values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="latitudeDelta">
            </param>
            <param name="longitudeDelta">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapPointMake(System.Double,System.Double)">
            <summary>
            Creates a new <c>MKMapPoint</c> structure from the specified values.
            <br></br>Equivalent to the native <c>MKMapPointMake</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>x</em>
                <p>The point along the east-west axis of the map projection. </p>
                <em>y</em>
                <p>The point along the north-south axis of the map projection. </p>
                <b>Return Value</b>
                <p>A map point with the specified values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="x">
            </param>
            <param name="y">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectMake(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new <c>MKMapRect</c> structure from the specified values.
            <br></br>Equivalent to the native <c>MKMapRectMake</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>x</em>
                <p>The point along the east-west axis of the map projection to use for the origin. </p>
                <em>y</em>
                <p>The point along the north-south axis of the map projection to use for the origin. </p>
                <em>width</em>
                <p>The width of the rectangle (measured using map points). </p>
                <em>height</em>
                <p>The height of the rectangle (measured using map points).</p>
                <b>Return Value</b>
                <p>A map rectangle with the specified values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="x">
            </param>
            <param name="y">
            </param>
            <param name="width">
            </param>
            <param name="height">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapSizeMake(System.Double,System.Double)">
            <summary>
            Creates a new <c>MKMapSize</c> structure from the specified values.
            <br></br>Equivalent to the native <c>MKMapSizeMake</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>width</em>
                <p>The distance (measured using map points) along the east-west axis of the map projection.</p>
                <em>height</em>
                <p>The distance (measured using map points) along the north-south axis of the map projection.</p>
                <b>Return Value</b>
                <p>A map size with the specified values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="width">
            </param>
            <param name="height">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectDivide(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect,System.Double,U3DXT.iOS.Native.CoreGraphics.CGRectEdge)">
            <summary>
            Divides the specified rectangle into two smaller rectangles.
            <br></br>Equivalent to the native <c>MKMapRectDivide</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle to divide.</p>
                <em>slice</em>
                <p>On input, a pointer to a map rectangle. On output, this parameter contains the portion of <em>rect</em> that was removed.</p>
                <em>remainder</em>
                <p>On input, a pointer to a map rectangle. On output, this parameter contains the remaining portion of <em>rect</em> that was not removed.</p>
                <em>amount</em>
                <p>The amount of <em>rect</em> to remove along the specified edge. If this value is negative, it is set to <c>0</c>.</p>
                <em>edge</em>
                <p>The edge from which to remove the specified amount.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
            <param name="slice">
            </param>
            <param name="remainder">
            </param>
            <param name="amount">
            </param>
            <param name="edge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectInset(U3DXT.iOS.Native.MapKit.MKMapRect,System.Double,System.Double)">
            <summary>
            Returns the specified rectangle inset by the specified amounts.
            <br></br>Equivalent to the native <c>MKMapRectInset</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The original rectangle.</p>
                <em>dx</em>
                <p>The amount (in map points) to subtract from both sides along the x-axis.</p>
                <em>dy</em>
                <p>The amount (in map points) to subtract from both sides along the y-axis.</p>
                <b>Return Value</b>
                <p>The inset rectangle. If the original rectangle was null, that rectangle is returned instead.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
            <param name="dx">
            </param>
            <param name="dy">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectIntersection(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the rectangle representing the intersection of two rectangles.
            <br></br>Equivalent to the native <c>MKMapRectIntersection</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect1</em>
                <p>The first rectangle. </p>
                <em>rect2</em>
                <p>The second rectangle.</p>
                <b>Return Value</b>
                <p>The rectangle representing the intersection of the two rectangles or <c>MKMapRectNull</c> if there is no intersection.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect1">
            </param>
            <param name="rect2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectOffset(U3DXT.iOS.Native.MapKit.MKMapRect,System.Double,System.Double)">
            <summary>
            Returns a rectangle whose origin point is shifted by the specified amount.
            <br></br>Equivalent to the native <c>MKMapRectOffset</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The original rectangle.</p>
                <em>dx</em>
                <p>The amount (in map points) by which to shift the x-coordinate of the origin point.</p>
                <em>dy</em>
                <p>The amount (in map points) by which to shift the y-coordinate of the origin point.</p>
                <b>Return Value</b>
                <p>The offset rectangle. If the original rectangle was null, that rectangle is returned instead.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
            <param name="dx">
            </param>
            <param name="dy">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKGeometry.MKMapRectUnion(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns a rectangle representing the union of the two rectangles.
            <br></br>Equivalent to the native <c>MKMapRectUnion</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect1</em>
                <p>The first rectangle.</p>
                <em>rect2</em>
                <p>The second rectangle.</p>
                <b>Return Value</b>
                <p>A rectangle whose area encompasses the two rectangles and the space between them. </p>
                <b>Discussion</b>
                <p>If either rectangle is null, this method returns the other rectangle. The origin point of the returned rectangle is set to the smaller of the x and y values for the two rectangles. Similarly, the size and width of the rectangle are computed by taking the maximum x and y values and subtracting the x and y values for the new origin point. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect1">
            </param>
            <param name="rect2">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKLocalSearch">
            <summary>
            An <c>MKLocalSearch</c> object initiates a map-based search operation and delivers the results back to your app asynchronously. Search objects are designed to perform one search operation only. To perform several different searches, you must create separate instances of this class and start them separately.
            </summary>
            <remarks>
                <p>You use this class to perform programmatic searches of map-based information. For example, you can use this class to search for addresses or points-of-interest in much the same way the user might search for those items in the Maps app.  </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.UP_MKLocalSearch_get_searching(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.UP_MKLocalSearch_cancel(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.UP_MKLocalSearch_alloc_initWithRequest_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.UP_MKLocalSearch_startWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKLocalSearch" /> class.
            <br></br>Equivalent to the native <c>[[MKLocalSearch alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKLocalSearch.ClassExists">
            <summary>
            Returns whether the native MKLocalSearch class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKLocalSearch.searching">
            <summary>
            A Boolean indicating whether the search is currently in progress. (read-only)
            <br></br>Equivalent to the native <c>searching</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is set to <c>true</c> when a search is initiated and remains in that state until the search results (or an appropriate error) are delivered, at which time the property is set to <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.Cancel">
            <summary>
            Cancels an in-progress search operation.
            <br></br>Equivalent to the native <c>cancel</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If no search operation is in progress, this method does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.#ctor(U3DXT.iOS.Native.MapKit.MKLocalSearchRequest)">
            <summary>
            Creates an instance of the native MKLocalSearch and initializes the object. Initializes and returns a search object configured with the specified parameters.
            <br></br>Equivalent to the native <c>[[MKLocalSearch alloc] initWithRequest:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>request</em>
                <p>The search request information. This parameter must not be <c>null</c>. </p>
                <b>Return Value</b>
                <p>An initialized search object.</p>
                <b>Discussion</b>
                <p>This method stores a copy of the object in the <em>request</em> parameter. So any changes you make to your request object after calling this method are ignored.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.1 and later.</li>
                </ul>
            </remarks>
            <param name="request">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearch.Start(System.Action{U3DXT.iOS.Native.MapKit.MKLocalSearchResponse,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Starts the search and delivers the results to the specified completion handler.
            <br></br>Equivalent to the native <c>startWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>The completion handler block that processes the results. This parameter must not be <c>null</c>.</p>
                <b>Discussion</b>
                <p>You use this method to initiate a map-based search operation. The search runs until the results are delivered, at which point the specified completion handler is called. </p>
                <p>You should call this method only once to start the search operation. Calling this method while the search is running does not stop the original search operation from finishing. However, for each subsequent call, the search object executes your completion handler and passes an error object to it.</p>
                <p>The provided completion handler is always executed on your app’s main thread. The local search object keeps a reference to the completion handler block until the results (or an error) are delivered, at which point it relinquishes that reference.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.1 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest">
            <summary>
            An <c>MKLocalSearchRequest</c> object is a utility object that you use to specify map-based search parameters. After creating an instance of this object, you can assign a natural language string containing the address or point-of-interest to search for. You can also specify a specific map region to narrow the search results. You then use the configured object to initialize an <c>MKLocalSearch</c> object and perform your search.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.UP_MKLocalSearchRequest_get_naturalLanguageQuery(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.UP_MKLocalSearchRequest_set_naturalLanguageQuery(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.UP_MKLocalSearchRequest_get_region(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.UP_MKLocalSearchRequest_set_region(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest" /> class.
            <br></br>Equivalent to the native <c>[[MKLocalSearchRequest alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.ClassExists">
            <summary>
            Returns whether the native MKLocalSearchRequest class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.naturalLanguageQuery">
            <summary>
            A string containing the desired search item.
            <br></br>Equivalent to the native <c>naturalLanguageQuery</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You specify this parameter as a string describing the map-based item you want to look for. The text is equivalent to what the user would type in a search field in the Maps app. For example, the text might contain all or part of an address or it might contain the name of a point of interest.</p>
                <p>This property can not be <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKLocalSearchRequest.region">
            <summary>
            A map region that provides a hint as to where to search.
            <br></br>Equivalent to the native <c>region</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You can use this parameter to narrow the list of search results to those inside or close to the specified region. Specifying a region does not guarantee that the results will all be inside the region. It is merely a hint to the search engine.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse">
            <summary>
            An <c>MKLocalSearchResponse</c> object contains the search results from a map-based search that was started using an <c>MKLocalSearch</c> object.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.UP_MKLocalSearchResponse_get_boundingRegion(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.UP_MKLocalSearchResponse_get_mapItems(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse" /> class.
            <br></br>Equivalent to the native <c>[[MKLocalSearchResponse alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.ClassExists">
            <summary>
            Returns whether the native MKLocalSearchResponse class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.boundingRegion">
            <summary>
            The map region that encloses the returned search results. (read-only)
            <br></br>Equivalent to the native <c>boundingRegion</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The returned region is the smallest bounding box that encloses all of the map items. If there is only one search result, the size of the region may be (0, 0). </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKLocalSearchResponse.mapItems">
            <summary>
            An array of map items representing the search results. (read-only)
            <br></br>Equivalent to the native <c>mapItems</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property contains an array of <c>MKMapItem</c> objects, each of which represents a returned search result. You can use these objects to retrieve information about the search result, such as the name of the point of interest, the address, the geographic location, and so on.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapCamera">
            <summary>
            An <c>MKMapCamera</c> object describes a virtual camera that you use to define the appearance of the map. A camera object creates a virtual viewpoint above the map surface and affects how the map renders its tiles and other content. You use a camera object to specify the location of the camera on the map, the compass heading that corresponds to the camera’s viewing direction, the pitch of the camera relative to the map perpendicular, and the camera’s altitude above the map. These factors let you create a map view that is not just flat but offers a more 3D-like experience.
            </summary>
            <remarks>
                <p>After creating an instance of this class, configure it with the desired attributes and assign it to your map view. When you assign a camera to your map view, the map centers the map using the value in your camera object’s <c>centerCoordinate</c> property, updating the map’s own region information in the process. The map also takes the camera’s the pitch and altitude into account when calculating the visible region, ensuring that the region always encompasses the visible content on the map.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_camera">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_cameraLookingAtCenterCoordinate_fromEyeCoordinate_eyeAltitude_(System.String,System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_get_altitude(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_set_altitude(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_get_centerCoordinate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_set_centerCoordinate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_get_heading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_set_heading(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_get_pitch(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.UP_MKMapCamera_set_pitch(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKMapCamera" /> class.
            <br></br>Equivalent to the native <c>[[MKMapCamera alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapCamera.ClassExists">
            <summary>
            Returns whether the native MKMapCamera class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.Camera">
            <summary>
            Returns a new camera object for you to configure.
            <br></br>Equivalent to the native <c>camera</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A new camera object.</p>
                <b>Discussion</b>
                <p>You must change the values of the returned camera object before using it. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapCamera.CameraLookingAtCenterCoordinate(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.Double)">
            <summary>
            Returns a new camera object using the specified viewing angle information.
            <br></br>Equivalent to the native <c>cameraLookingAtCenterCoordinate:fromEyeCoordinate:eyeAltitude:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>centerCoordinate</em>
                <p>The coordinate point on which the map should be centered.</p>
                <em>eyeCoordinate</em>
                <p>The coordinate point at which to place the camera. If the value for this parameter is equal to the value in the <em>centerCoordinate</em> parameter, the map is displayed as if the camera is looking straight down. If this point is offset from the <em>centerCoordinate</em> value, the map is displayed with an appropriate heading and pitch angle. </p>
                <em>eyeAltitude</em>
                <p>The altitude (in meters) above the ground at which to place the camera. </p>
                <b>Return Value</b>
                <p>A new camera object initialized with the specified information. </p>
                <b>Discussion</b>
                <p>This method calculates the required pitch and heading angles to accommodate the specified eye position and altitude. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="centerCoordinate">
            </param>
            <param name="eyeCoordinate">
            </param>
            <param name="eyeAltitude">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapCamera.altitude">
            <summary>
            The altitude above the ground, measured in meters.
            <br></br>Equivalent to the native <c>altitude</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value you specify for this property must not be less than <c>0</c>. </p>
                <p>Changing this property may also change the maximum pitch that is allowed for the map. If the current pitch value exceeds the new maximum, the <c>pitch</c> property is clamped to the new maximum.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapCamera.centerCoordinate">
            <summary>
            The map coordinate at the center of the map view.
            <br></br>Equivalent to the native <c>centerCoordinate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This point represents the coordinate on which the map should be centered. When the camera pitch is 0, this property also corresponds to the geographic position of the camera. Changing the pitch to a nonzero value moves the camera but does not affect this property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapCamera.heading">
            <summary>
            The heading of the camera (measured in degrees) relative to true north.
            <br></br>Equivalent to the native <c>heading</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value <c>0</c> means that the top edge of the map view corresponds to true north. The value <c>90</c> means the top of the map is pointing due east. The value <c>180</c> means the top of the map points due south, and so on. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapCamera.pitch">
            <summary>
            The viewing angle of the camera, measured in degrees.
            <br></br>Equivalent to the native <c>pitch</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A value of <c>0</c> results in a camera pointed straight down at the map. Angles greater than <c>0</c> result in a camera that is pitched toward the horizon by the specified number of degrees.</p>
                <p>The value in this property may be clamped to a maximum value to maintain map readability. There is no fixed maximum value, though, because the actual maximum value is dependent on the current altitude of the camera. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapItem">
            <summary>
            The <c>MKMapItem</c> class encapsulates information about a specific point on a map. This information includes the map location and any other data that might be relevant, such as the name of a business at that location. Apps use this class to share map-related data with the Maps app.
            </summary>
            <remarks>
                <p>You use this class in one of two ways. If your app is able to display point-to-point directions, the Maps app can send a directions request to your app in response to a request by the user to use your app for routing. In that instance, the directions request contains map items with the start and end points to use when creating the directions. The other way to use map items is to create them in your app and then ask the Maps app to display them. For example, if your app allows the user to search for local businesses or points of interest, you can create map items for each location and ask Maps to display pins at the corresponding locations.</p>
                <p>Usually, you use this class to represent fixed locations on the map, but you can also use the <c>mapItemForCurrentLocation</c> method to get a map item that represents the user’s current location. For privacy reasons, and because the user’s location can change, the map item returned by that method does not contain any coordinate data. When you need the actual location of the user, you must use the Core Location framework to retrieve it.</p>
                <b>Usage Special Considerations</b>
                <p>To determine whether a class is available at runtime in a given iOS release, you typically check whether that class is <c>null</c>. Unfortunately, this test is not cleanly accurate for MKMapItem. Although this class was publicly available starting with iOS 6.0, it was in development prior to that. Although the class exists in earlier releases, you should not attempt to use it in those releases.</p>
                <p>To determine at runtime whether you can use map items in your application, test whether the class and the <c>openMapsWithItems:launchOptions:</c> class method exist. That method was not added to the class until iOS 6.0. The code might look like the following:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>Class itemClass = [MKMapItem class];  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>if (itemClass &amp;&amp; [itemClass respondsToSelector:@selector(openMapsWithItems:launchOptions:)]) {  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>   // Use class  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>}  </pre>
                        </td>
                    </tr>
                </table>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapItem.MKLaunchOptionsDirectionsModeWalking">
            <summary>
                <p>Tells the Maps app to display walking directions between the start and end points.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKLaunchOptionsDirectionsModeWalking</c> constant.
            </summary>
            <remarks>
            Strings representing the possible values of the <c>MKLaunchOptionsDirectionsModeKey</c> key.
            <p></p><br />
            	Provide Feedback
            <p></p>This is a constant for "Directions Mode Values".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapItem.MKLaunchOptionsDirectionsModeDriving">
            <summary>
                <p>Tells the Maps app to display driving directions between the start and end points.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKLaunchOptionsDirectionsModeDriving</c> constant.
            </summary>
            <remarks>
            Strings representing the possible values of the <c>MKLaunchOptionsDirectionsModeKey</c> key.
            <p></p><br />
            	Provide Feedback
            <p></p>This is a constant for "Directions Mode Values".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapItem.MKLaunchOptionsMapSpanKey">
            <summary>
                <p>The value of this key is an <c>NSValue</c> object that contains an encoded <c>MKCoordinateSpan</c> structure. This value represents the region that the map view should display.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKLaunchOptionsMapSpanKey</c> constant.
            </summary>
            <remarks>
            Launch options to specify when opening map items in the Maps app.
            <p></p><b>Discussion</b><p>You specify these keys in the launch options dictionary for the <c>openMapsWithItems:launchOptions:</c> or <c>openInMapsWithLaunchOptions:</c> method.</p><p></p>This is a constant for "Launch Options Dictionary Keys".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapItem.MKLaunchOptionsShowsTrafficKey">
            <summary>
                <p>The value of this key is an <c>double</c> object that contains a Boolean value. This value indicates whether traffic information should be displayed on the map. If you do not specify this key, Maps uses its current settings to determine whether or not to display traffic.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKLaunchOptionsShowsTrafficKey</c> constant.
            </summary>
            <remarks>
            Launch options to specify when opening map items in the Maps app.
            <p></p><b>Discussion</b><p>You specify these keys in the launch options dictionary for the <c>openMapsWithItems:launchOptions:</c> or <c>openInMapsWithLaunchOptions:</c> method.</p><p></p>This is a constant for "Launch Options Dictionary Keys".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapItem.MKLaunchOptionsDirectionsModeKey">
            <summary>
                <p>The value of this key is an <c>String</c> corresponding to one of the values described in <c>“Directions Mode Values”</c>. You specify this key to tell the Maps app to treat the provided map items as start and end points for routing directions. If this key is not present, Maps displays pins at the specified locations. </p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKLaunchOptionsDirectionsModeKey</c> constant.
            </summary>
            <remarks>
            Launch options to specify when opening map items in the Maps app.
            <p></p><b>Discussion</b><p>You specify these keys in the launch options dictionary for the <c>openMapsWithItems:launchOptions:</c> or <c>openInMapsWithLaunchOptions:</c> method.</p><p></p>This is a constant for "Launch Options Dictionary Keys".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapItem.MKLaunchOptionsMapCenterKey">
            <summary>
                <p>The value of this key is an <c>NSValue</c> object that contains an encoded <c>CLLocationCoordinate2D</c> structure. This value represents the location on which the map view should be centered.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKLaunchOptionsMapCenterKey</c> constant.
            </summary>
            <remarks>
            Launch options to specify when opening map items in the Maps app.
            <p></p><b>Discussion</b><p>You specify these keys in the launch options dictionary for the <c>openMapsWithItems:launchOptions:</c> or <c>openInMapsWithLaunchOptions:</c> method.</p><p></p>This is a constant for "Launch Options Dictionary Keys".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapItem.MKLaunchOptionsMapTypeKey">
            <summary>
                <p>The value of this key is an <c>double</c> object whose value is an integer corresponding to an <c>MKMapType</c> value. This value represents the type of map (standard, satellite, hybrid) to display. </p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKLaunchOptionsMapTypeKey</c> constant.
            </summary>
            <remarks>
            Launch options to specify when opening map items in the Maps app.
            <p></p><b>Discussion</b><p>You specify these keys in the launch options dictionary for the <c>openMapsWithItems:launchOptions:</c> or <c>openInMapsWithLaunchOptions:</c> method.</p><p></p>This is a constant for "Launch Options Dictionary Keys".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_mapItemForCurrentLocation">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_openMapsWithItems_launchOptions_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_get_isCurrentLocation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_get_name(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_set_name(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_get_phoneNumber(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_set_phoneNumber(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_get_placemark(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_get_url(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_set_url(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_alloc_initWithPlacemark_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.UP_MKMapItem_openInMapsWithLaunchOptions_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKMapItem" /> class.
            <br></br>Equivalent to the native <c>[[MKMapItem alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapItem.ClassExists">
            <summary>
            Returns whether the native MKMapItem class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.MapItem">
            <summary>
            Creates and returns a singleton map item object representing the device’s current location.
            <br></br>Equivalent to the native <c>mapItemForCurrentLocation</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>An <c>MKMapItem</c> object representing the current location. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.OpenMaps(System.Object[],System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            Open the Maps app and display the specified map items.
            <br></br>Equivalent to the native <c>openMapsWithItems:launchOptions:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapItems</em>
                <p>An array containing one or more <c>MKMapItem</c> objects representing the items you want to display on the map. This parameter may be <c>null</c>.</p>
                <em>launchOptions</em>
                <p>Additional information that the Maps app can use to configure the map display. For example, you can use the launch options to specify the visible map region and the map type. For a list of keys you can put into this dictionary, see <c>“Launch Options Dictionary Keys”</c>. </p>
                <p>You may specify <c>null</c> for this parameter. </p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the map items were successfully opened by the Maps app, or <c>false</c> if there was an error. </p>
                <b>Discussion</b>
                <p>You use this method to pass one or more map items to the Maps app. For example, you might use this method to ask the Maps app to display location-based search results generated by your app. Maps displays pins at each location you specify and uses the contents of each map item object to display additional information.</p>
                <p>If you specify the <c>MKLaunchOptionsDirectionsModeKey</c> option in the <em>launchOptions</em> dictionary, the <em>mapItems</em> array must have no more than two items in it. If the array contains one item, the Maps app generates directions from the user’s current location to the location specified by the map item. If the array contains two items, the Maps app generates directions from the location of the first item to the location of the second item in the array.</p>
                <p>If you do not include the <c>MKLaunchOptionsMapCenterKey</c> and <c>MKLaunchOptionsMapSpanKey</c> keys in your <em>launchOptions</em> dictionary, Maps constructs a region that encompasses the provided items. It uses this region to set the visible portion of the map. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapItems">
            </param>
            <param name="launchOptions">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapItem.isCurrentLocation">
            <summary>
            A Boolean value indicating whether the map item represents the user’s current location.
            <br></br>Equivalent to the native <c>isCurrentLocation</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>true</c>, the map item represents the user’s current location. If <c>true</c>, the value in the <c>placemark</c> property is set to <c>null</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapItem.name">
            <summary>
            The descriptive name associated with the map item.
            <br></br>Equivalent to the native <c>name</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Use this property to specify the name associated with the location. For example, if there is a business at the specified location, you would use this property to specify the name of the business.</p>
                <p>If this map item represents the user’s current location, the value in property is set to a localized version of “Current Location”. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapItem.phoneNumber">
            <summary>
            The phone number associated with a business at the specified location.
            <br></br>Equivalent to the native <c>phoneNumber</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If there is a relevant phone number associated with the location, such as a phone number for a business at the location, use this property to specify that value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapItem.placemark">
            <summary>
            The placemark object containing the location information.
            <br></br>Equivalent to the native <c>placemark</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you created the map item using the <c>mapItemForCurrentLocation</c> method, the value of this property is <c>null</c> and the <c>isCurrentLocation</c> property is set to <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapItem.url">
            <summary>
            The URL associated with the specified location.
            <br></br>Equivalent to the native <c>url</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If there is a relevant URL associated with the location, such as a URL for a business at the location, use this property to specify that value. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.#ctor(U3DXT.iOS.Native.MapKit.MKPlacemark)">
            <summary>
            Creates an instance of the native MKMapItem and initializes the object. Initializes and returns a map item object using the specified placemark object.
            <br></br>Equivalent to the native <c>[[MKMapItem alloc] initWithPlacemark:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>placemark</em>
                <p>The placemark object corresponding to the desired map location. This parameter must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized map item object. </p>
                <b>Discussion</b>
                <p>Use this method to create a map item for an existing placemark. Do not use it to create a map item representing the user’s current location. To do that, use the <c>mapItemForCurrentLocation</c> method instead. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="placemark">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapItem.OpenInMaps(System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            Open the Maps app and display this map item.
            <br></br>Equivalent to the native <c>openInMapsWithLaunchOptions:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>launchOptions</em>
                <p>Additional information that the Maps app can use to configure the map display. For example, you can use the launch options to specify the visible map region and the map type. For a list of keys you can put into this dictionary, see <c>“Launch Options Dictionary Keys”</c>. </p>
                <p>This parameter may be <c>null</c>.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if this map item was successfully opened by the Maps app, or <c>false</c> if there was an error. </p>
                <b>Discussion</b>
                <p>You use this method to pass the current map item to the Maps app. If your map item contains descriptive information about the location (such as a name or URL), the Maps app displays that information at the specified coordinate.</p>
                <p>If you specify the <c>MKLaunchOptionsDirectionsModeKey</c> option in the <em>launchOptions</em> dictionary, the Maps app interprets that as an attempt to map from the user’s current location to the location specified by this map item.</p>
                <p>If you do not include the <c>MKLaunchOptionsMapCenterKey</c> and <c>MKLaunchOptionsMapSpanKey</c> keys in your <em>launchOptions</em> dictionary, Maps constructs a region around the current item. It uses that region to set the visible portion of the map. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="launchOptions">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapPoint">
            <summary>
            A point on a two-dimensional map projection.
            </summary>
            <remarks>
                <b>Fields</b>
                <p>
                </p>
                <c>x</c>
                <p>The location of the point along the x-axis of the map.</p>
                <c>y</c>
                <p>The location of the point along the y-axis of the map.</p>
                <b>Discussion</b>
                <p>If you project the curved surface of the globe onto a flat surface, what you get is a two-dimensional version of a map where longitude lines appear to be parallel. Such maps are often used to show the entire surface of the globe all at once. An <c>MKMapPoint</c> data structure represents a point on this two-dimensional map. </p>
                <p>The actual units of a map point are tied to the underlying units used to draw the contents of an <c>MKMapView</c>, but you should never need to worry about these units directly. You use map points primarily to simplify computations that would be complex to do using coordinate values on a curved surface. By converting to map points, you can perform those calculations on a flat surface, which is generally much simpler, and then convert back as needed. You can map between coordinate values and map points using the <c>MKMapPointForCoordinate</c> and <c>MKCoordinateForMapPoint</c> functions. </p>
                <p>When saving map-related data to a file, you should always save coordinate values (latitude and longitude) and not map points. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapPoint.x">
            <summary> The x.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapPoint.y">
            <summary> The y.</summary>;</member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" /> struct.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapPoint._Serialize">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapPoint._Deserialize(System.Object)">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
            <param name="json">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" />.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapPoint.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" /> object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapPoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" />.
            </summary>
            <param name="other">
            The <see cref="T:System.Object" /> to compare with the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapPoint.op_Equality(U3DXT.iOS.Native.MapKit.MKMapPoint,U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" /> is equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapPoint.op_Inequality(U3DXT.iOS.Native.MapKit.MKMapPoint,U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" /> is not equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKMapPoint" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapRect">
            <summary>
            A rectangular area as measured on a two-dimensional map projection.
            </summary>
            <remarks>
                <b>Fields</b>
                <p>
                </p>
                <c>origin</c>
                <p>The origin point of the rectangle.</p>
                <c>size</c>
                <p>The width and height of the rectangle, starting from the origin point.</p>
                <b>Discussion</b>
                <p>If you project the curved surface of the globe onto a flat surface, what you get is a two-dimensional version of a map where longitude lines appear to be parallel. Such maps are often used to show the entire surface of the globe all at once. An <c>MKMapRect</c> data structure represents a rectangular area as seen on this two-dimensional map. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapRect.origin">
            <summary> The origin.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapRect.size">
            <summary> The size.</summary>;</member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapRect.#ctor(U3DXT.iOS.Native.MapKit.MKMapPoint,U3DXT.iOS.Native.MapKit.MKMapSize)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" /> struct.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapRect._Serialize">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapRect._Deserialize(System.Object)">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
            <param name="json">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapRect.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" />.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapRect.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" /> object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapRect.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" />.
            </summary>
            <param name="other">
            The <see cref="T:System.Object" /> to compare with the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapRect.op_Equality(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" /> is equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapRect.op_Inequality(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" /> is not equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKMapRect" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapSize">
            <summary>
            Size information as measured on a two-dimensional map projection.
            </summary>
            <remarks>
                <b>Fields</b>
                <p>
                </p>
                <c>width</c>
                <p>The width value. The units of this value are map points. </p>
                <c>height</c>
                <p>The height value. The units of this value are map points. </p>
                <b>Discussion</b>
                <p>If you project the curved surface of the globe onto a flat surface, what you get is a two-dimensional version of a map where longitude lines appear to be parallel. Such maps are often used to show the entire surface of the globe all at once. An <c>MKMapSize</c> data structure represents a horizontal and vertical distance as measured on this two-dimensional map. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapSize.width">
            <summary> The width.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapSize.height">
            <summary> The height.</summary>;</member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSize.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" /> struct.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSize._Serialize">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSize._Deserialize(System.Object)">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
            <param name="json">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSize.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" />.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSize.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" /> object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSize.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" />.
            </summary>
            <param name="other">
            The <see cref="T:System.Object" /> to compare with the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSize.op_Equality(U3DXT.iOS.Native.MapKit.MKMapSize,U3DXT.iOS.Native.MapKit.MKMapSize)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" /> is equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSize.op_Inequality(U3DXT.iOS.Native.MapKit.MKMapSize,U3DXT.iOS.Native.MapKit.MKMapSize)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" /> is not equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSize" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapSnapshot">
            <summary>
            An <c>MKMapSnapshot</c> object contains an image generated by a snapshotter object. You do not create instances of this class directly. Instead, you use an <c>MKMapSnapshotter</c> object capture the map contents asynchronously. Upon completion, the snapshotter object generates an image based on the options you provide and delivers that image inside an instance of this class.
            </summary>
            <remarks>
                <p>Snapshot images do not include any custom overlays or annotations that your app added to the map view. If you want your annotations and overlays to appear on the final image, you must draw them yourself. To position those items correctly on the image, use the <c>pointForCoordinate:</c> method of this class to translate the overlay or annotation coordinate value to an appropriate location inside the image’s coordinate space.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshot.UP_MKMapSnapshot_get_image(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshot.UP_MKMapSnapshot_pointForCoordinate_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshot.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshot.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshot.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSnapshot" /> class.
            <br></br>Equivalent to the native <c>[[MKMapSnapshot alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshot.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshot.ClassExists">
            <summary>
            Returns whether the native MKMapSnapshot class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshot.image">
            <summary>
            The image of the map’s content. (read-only)
            <br></br>Equivalent to the native <c>image</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshot.Point(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            Converts the specified map coordinate to a point in the coordinate space of the image.
            <br></br>Equivalent to the native <c>pointForCoordinate:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>A map coordinate that you want to convert.</p>
                <b>Return Value</b>
                <p>The point in the image’s coordinate space that corresponds to the map location.</p>
                <b>Discussion</b>
                <p>If you want to display additional views or content on top of the image, you can use this method to find an appropriate point at which to draw those items.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions">
            <summary>
            The <c>MKMapSnapshotOptions</c> class specifies the options to use when capturing map-based imagery. After creating and configuring an instance of this class, you pass that instance to an <c>MKMapSnapshotter</c> object. The snapshotter uses the options you specify to determine the portion of the map to capture, the viewing angle to use for the camera, and the map appearance.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_get_camera(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_set_camera(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_get_mapType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_set_mapType(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_get_region(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_set_region(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_get_scale(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_set_scale(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_get_showsBuildings(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_set_showsBuildings(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_get_showsPointsOfInterest(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_set_showsPointsOfInterest(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_get_size(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.UP_MKMapSnapshotOptions_set_size(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions" /> class.
            <br></br>Equivalent to the native <c>[[MKMapSnapshotOptions alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.ClassExists">
            <summary>
            Returns whether the native MKMapSnapshotOptions class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.camera">
            <summary>
            The camera to use when taking the map snapshot.
            <br></br>Equivalent to the native <c>camera</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Specify a camera object if you want to change the pitch, altitude, or heading information applied to the map.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.mapType">
            <summary>
            The map’s visual style.
            <br></br>Equivalent to the native <c>mapType</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value of this property is <c>MKMapTypeStandard</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.region">
            <summary>
            The map region that you want to capture.
            <br></br>Equivalent to the native <c>region</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Use this property to specify the map using geographical coordinates. If you assign a value for this property, the value in the <c>rect</c> property is updated to match the corresponding region as closely as possible.</p>
                <p>The default value of this property is set to a region that encompasses the user’s country, as determined by the current locale information.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.scale">
            <summary>
            The scale factor to use when creating the image.
            <br></br>Equivalent to the native <c>scale</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is either <c>1.0</c> or <c>2.0</c>, depending on whether the device has a standard or Retina display. Set the value to <c>1.0</c> if you want to display the resulting image on a standard resolution display. Set the value to 2.0 if you want to display the image on a Retina display or want to use the image for printing. </p>
                <p>This property is set to a default value that corresponds to the resolution of the current device’s display. You can change the value as needed to generate an image suitable for display on a different device.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.showsBuildings">
            <summary>
            A Boolean indicating whether the map displays extruded building information.
            <br></br>Equivalent to the native <c>showsBuildings</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is set to <c>true</c> and the camera has a pitch angle greater than 0, the map extrudes buildings so that they appear to extend above the map plane, creating a 3D effect. The <c>mapType</c> property must be set to <c>MKMapTypeStandard</c> for extruded buildings to be displayed. The default value of this property is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.showsPointsOfInterest">
            <summary>
            A Boolean indicating whether the map displays point-of-interest information.
            <br></br>Equivalent to the native <c>showsPointsOfInterest</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is set to <c>true</c>, the map displays icons and labels for restaurants, schools, and other relevant points of interest. The default value of this property is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions.size">
            <summary>
            The size of the image that you want to create.
            <br></br>Equivalent to the native <c>size</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value of this property is 256 by 256 points. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapSnapshotter">
            <summary>
            An <c>MKMapSnapshotter</c> object captures map-based imagery asynchronously. Use instances of this class in situations where you want to capture the iOS-provided map content, including the map tiles and imagery. The snapshotter object always captures the best image possible, loading all of the available map tiles before capturing the image.
            </summary>
            <remarks>
                <p>You use a snapshotter object in conjunction with an <c>MKMapSnapshotOptions</c> object. The snapshot options specify the map configuration to use during the capture process, including which portion of the map you want to capture.</p>
                <p>
                    <strong>Note:</strong> Snapshotter objects do not capture the visual representations of any overlays or annotations that your app creates. If you want those items to appear in the final snapshot, you must draw them on the resulting snapshot image. For more information about drawing custom content on map snapshots, see <em>MKMapSnapshot Class Reference</em>. </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.UP_MKMapSnapshotter_get_loading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.UP_MKMapSnapshotter_cancel(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.UP_MKMapSnapshotter_alloc_initWithOptions_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.UP_MKMapSnapshotter_startWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKMapSnapshotter" /> class.
            <br></br>Equivalent to the native <c>[[MKMapSnapshotter alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.ClassExists">
            <summary>
            Returns whether the native MKMapSnapshotter class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.loading">
            <summary>
            A Boolean indicating whether the snapshotter is currently generating an image. (read-only)
            <br></br>Equivalent to the native <c>loading</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.Cancel">
            <summary>
            Cancels the current request to create a snapshot.
            <br></br>Equivalent to the native <c>cancel</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the snapshotter is not in the process of generating the snapshot, calling this method does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.#ctor(U3DXT.iOS.Native.MapKit.MKMapSnapshotOptions)">
            <summary>
            Creates an instance of the native MKMapSnapshotter and initializes the object. Initializes and returns a snapshotter object based on the specified options.
            <br></br>Equivalent to the native <c>[[MKMapSnapshotter alloc] initWithOptions:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>options</em>
                <p>The options to use when capturing the map imagery. If you specify <c>null</c> for this property, the snapshotter uses a set of default options that capture an image of the current user’s country.</p>
                <b>Return Value</b>
                <p>An initialized snapshotter option.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="options">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapSnapshotter.Start(System.Action{U3DXT.iOS.Native.MapKit.MKMapSnapshot,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Submits the request to create a snapshot and delivers the results to the specified block.
            <br></br>Equivalent to the native <c>startWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>The block to call with the resulting snapshot. This block is executed on the app’s main thread and must not be <c>null</c>.</p>
                <b>Discussion</b>
                <p>Call this method to begin generating a snapshot image based on the specified parameters. This method executes the request asynchronously. </p>
                <p>The snapshotter delivers the final image to your app only when it is running in the foreground. The snapshotter must render the final image while your app is in the foreground. If you start generating a snapshot while the app is in the background, or if your app moves to the background while a snapshot is in progress, this behavior delays the delivery of the snapshot until your app returns to the foreground.</p>
                <p>In OS X, this method creates both standard and high-resolution representations of the map data and includes both in the returned image object. In iOS, you must specify the image scale you want using the snapshot options, which default to the scale on the current device.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapType">
            <summary>
            The type of map to display.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapType.Standard">
            <summary>
                <p>Displays a street map that shows the position of all roads and some road names.  </p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKMapTypeStandard</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapType.Hybrid">
            <summary>
                <p>Displays a satellite image of the area with road and road name information layered on top.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKMapTypeHybrid</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapType.Satellite">
            <summary>
                <p>Displays satellite imagery of the area.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKMapTypeSatellite</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView">
            <summary>
            An <c>MKMapView</c> object provides an embeddable map interface, similar to the one provided by the Maps application. You use this class as-is to display map information and to manipulate the map contents from your application. You can center the map on a given coordinate, specify the size of the area you want to display, and annotate the map with custom information.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>When you initialize a map view, you should specify the initial region for that map to display. You do this by setting the <c>region</c> property of the map. A region is defined by a center point and a horizontal and vertical distance, referred to as the span. The <strong>span</strong> defines how much of the map at the given point should be visible and is also how you set the zoom level. Specifying a large span results in the user seeing a wide geographical area and corresponds to a low zoom level. Specifying a small span results in the user seeing a more narrow geographical area and corresponds to a higher zoom level. </p>
                <p>In addition to setting the span programmatically, the <c>MKMapView</c> class supports many standard interactions for changing the position and zoom level of the map. In particular, map views support flick and pinch gestures for scrolling around the map and zooming in and out. Support for these gestures is enabled by default but can also be disabled using the <c>scrollEnabled</c> and <c>zoomEnabled</c> properties.</p>
                <p>You can also use projected map coordinates instead of regions to specify some values. When you project the curved surface of the globe onto a flat surface, you get a two-dimensional version of a map where longitude lines appear to be parallel. To specify locations and distances, you use the <c>MKMapPoint</c>, <c>MKMapSize</c>, and <c>MKMapRect</c> data types.</p>
                <p>Although you should not subclass the <c>MKMapView</c> class itself, you can get information about the map view’s behavior by providing a delegate object. The map view calls the methods of your custom delegate to let it know about changes in the map status and to coordinate the display of custom annotations, which are described in more detail in  “Annotating the Map.”  The delegate object can be any object in your application as long as it conforms to the <c>MKMapViewDelegate</c> protocol. For more information about implementing the delegate object, see <em>MKMapViewDelegate Protocol Reference</em>.</p>
                <b>Annotating the Map</b>
                <p>The <c>MKMapView</c> class supports the ability to annotate the map with custom information. Because a map may have potentially large numbers of annotations, map views differentiate between the annotation objects used to manage the annotation data and the view objects for presenting that data on the map. </p>
                <p>An <strong>annotation object</strong> is any object that conforms to the <c>MKAnnotation</c> protocol. Annotation objects are typically implemented using existing classes in your application’s data model. This allows you to manipulate the annotation data directly but still make it available to the map view. Each annotation object contains information about the annotation’s location on the map along with descriptive information that can be displayed in a callout.</p>
                <p>The presentation of annotation objects on the screen is handled by an <strong>annotation view</strong>, which is an instance of the <c>MKAnnotationView</c> class. An annotation view is responsible for presenting the annotation data in a way that makes sense. For example, the Maps application uses a pin icon to denote specific points of interest on a map. (The Map Kit framework offers the <c>MKPinAnnotationView</c> class for similar annotations in your own applications.) You could also create annotation views that cover larger portions of the map.</p>
                <p>Because annotation views are needed only when they are onscreen, the <c>MKMapView</c> class provides a mechanism for queueing annotation views that are not in use. Annotation views with a reuse identifier can be detached and queued internally by the map view when they move offscreen. This feature improves memory use by keeping only a small number of annotation views in memory at once and by recycling the views you do have. It also improves scrolling performance by alleviating the need to create new views while the map is scrolling. </p>
                <p>When configuring your map interface, you should add all of your annotation objects right away. The map view uses the coordinate data in each annotation object to determine when the corresponding annotation view needs to appear onscreen. When an annotation moves onscreen, the map view asks its delegate to create a corresponding annotation view. If your application has different types of annotations, it can define different annotation view classes to represent each type.</p>
                <b>Adding Overlays to the Map</b>
                <p>You can use overlays to layer content over a wide portion of the map. An <strong>overlay</strong> object is any object that conforms to the <c>MKOverlay</c> protocol. An overlay object is a data object that contains the points needed to specify the shape and size of the overlay and its location on the map. Overlays can represent shapes such as circles, rectangles, multi-segment lines, and simple or complex polygons. You can also define your own custom overlays to represent other shapes.</p>
                <p>In iOS 7 and later, the presentation of an overlay is handled by an <strong>overlay renderer</strong> object, which is an instance of the <c>MKOverlayRenderer</c> class. The job of the renderer is to draw the overlay’s content onto the screen when asked to do so by the map view. For example, if you have a simple overlay that represents a bus route, you could use a polyline renderer to draw the line segments that trace the route of the bus. You could also define a custom renderer that draws both the bus route and icons at the location of each bus stop. When specifying overlays, you can add them to specific levels of the map, which allows them to be rendered above or below other types of map content. Prior to iOS 7, overlays are drawn on onscreen using overlay views, which are instances of the <c>MKOverlayView</c> class.</p>
                <p>When configuring your map interface, you can add overlay objects at any time. The map view uses the data in each overlay object to determine when the corresponding overlay view needs to appear onscreen. When an overlay moves onscreen, the map view asks its delegate to create a corresponding overlay renderer. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.CalloutAccessoryControlTapped">
            <summary>
            Tells the delegate that the user tapped one of the annotation view’s accessory buttons.
            <br></br>Equivalent to implementing the native <c>mapView:annotationView:calloutAccessoryControlTapped:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.CalloutAccessoryControlTappedEventArgs">
            <summary>
            Event arguments for CalloutAccessoryControlTapped.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.CalloutAccessoryControlTappedEventArgs.#ctor(U3DXT.iOS.Native.MapKit.MKAnnotationView,U3DXT.iOS.Native.UIKit.UIControl)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.CalloutAccessoryControlTappedEventArgs.view">
            <summary>view</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.CalloutAccessoryControlTappedEventArgs.control">
            <summary>control</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeDragState">
            <summary>
            Tells the delegate that the drag state of one of its annotation views changed.
            <br></br>Equivalent to implementing the native <c>mapView:annotationView:didChangeDragState:fromOldState:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeDragStateEventArgs">
            <summary>
            Event arguments for DidChangeDragState.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeDragStateEventArgs.#ctor(U3DXT.iOS.Native.MapKit.MKAnnotationView,U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState,U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeDragStateEventArgs.view">
            <summary>view</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeDragStateEventArgs.newState">
            <summary>newState</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeDragStateEventArgs.oldState">
            <summary>oldState</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidAddAnnotationViews">
            <summary>
            Tells the delegate that one or more annotation views were added to the map.
            <br></br>Equivalent to implementing the native <c>mapView:didAddAnnotationViews:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidAddAnnotationViewsEventArgs">
            <summary>
            Event arguments for DidAddAnnotationViews.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidAddAnnotationViewsEventArgs.#ctor(System.Object[])">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidAddAnnotationViewsEventArgs.views">
            <summary>views</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidAddOverlayRenderers">
            <summary>
            Tells the delegate that one or more renderer objects were added to the map.
            <br></br>Equivalent to implementing the native <c>mapView:didAddOverlayRenderers:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidAddOverlayRenderersEventArgs">
            <summary>
            Event arguments for DidAddOverlayRenderers.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidAddOverlayRenderersEventArgs.#ctor(System.Object[])">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidAddOverlayRenderersEventArgs.renderers">
            <summary>renderers</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeUserTrackingMode">
            <summary>
            Tells the delegate that the user tracking mode changed.
            <br></br>Equivalent to implementing the native <c>mapView:didChangeUserTrackingMode:animated:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeUserTrackingModeEventArgs">
            <summary>
            Event arguments for DidChangeUserTrackingMode.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeUserTrackingModeEventArgs.#ctor(U3DXT.iOS.Native.MapKit.MKUserTrackingMode,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeUserTrackingModeEventArgs.mode">
            <summary>mode</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidChangeUserTrackingModeEventArgs.animated">
            <summary>animated</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidDeselect">
            <summary>
            Tells the delegate that one of its annotation views was deselected.
            <br></br>Equivalent to implementing the native <c>mapView:didDeselectAnnotationView:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidDeselectEventArgs">
            <summary>
            Event arguments for DidDeselect.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidDeselectEventArgs.#ctor(U3DXT.iOS.Native.MapKit.MKAnnotationView)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidDeselectEventArgs.view">
            <summary>view</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidFailToLocateUser">
            <summary>
            Tells the delegate that an attempt to locate the user’s position failed.
            <br></br>Equivalent to implementing the native <c>mapView:didFailToLocateUserWithError:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidFailToLocateUserEventArgs">
            <summary>
            Event arguments for DidFailToLocateUser.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidFailToLocateUserEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidFailToLocateUserEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidSelect">
            <summary>
            Tells the delegate that one of its annotation views was selected.
            <br></br>Equivalent to implementing the native <c>mapView:didSelectAnnotationView:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidSelectEventArgs">
            <summary>
            Event arguments for DidSelect.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidSelectEventArgs.#ctor(U3DXT.iOS.Native.MapKit.MKAnnotationView)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidSelectEventArgs.view">
            <summary>view</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidUpdate">
            <summary>
            Tells the delegate that the location of the user was updated.
            <br></br>Equivalent to implementing the native <c>mapView:didUpdateUserLocation:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidUpdateEventArgs">
            <summary>
            Event arguments for DidUpdate.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidUpdateEventArgs.#ctor(U3DXT.iOS.Native.MapKit.MKUserLocation)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidUpdateEventArgs.userLocation">
            <summary>userLocation</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.RegionDidChangeAnimated">
            <summary>
            Tells the delegate that the region displayed by the map view just changed.
            <br></br>Equivalent to implementing the native <c>mapView:regionDidChangeAnimated:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.RegionDidChangeAnimatedEventArgs">
            <summary>
            Event arguments for RegionDidChangeAnimated.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.RegionDidChangeAnimatedEventArgs.#ctor(System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.RegionDidChangeAnimatedEventArgs.animated">
            <summary>animated</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.RegionWillChangeAnimated">
            <summary>
            Tells the delegate that the region displayed by the map view is about to change.
            <br></br>Equivalent to implementing the native <c>mapView:regionWillChangeAnimated:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.RegionWillChangeAnimatedEventArgs">
            <summary>
            Event arguments for RegionWillChangeAnimated.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.RegionWillChangeAnimatedEventArgs.#ctor(System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.RegionWillChangeAnimatedEventArgs.animated">
            <summary>animated</summary>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.rendererHandler">
            <summary>
            Asks the delegate for a renderer object to use when drawing the specified overlay.
            <br></br>Equivalent to implementing the native <c>mapView:rendererForOverlay:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.viewHandler">
            <summary>
            Returns the view associated with the specified annotation object.
            <br></br>Equivalent to implementing the native <c>mapView:viewForAnnotation:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidFailLoading">
            <summary>
            Tells the delegate that the specified view was unable to load the map data.
            <br></br>Equivalent to implementing the native <c>mapViewDidFailLoadingMap:withError:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidFailLoadingEventArgs">
            <summary>
            Event arguments for DidFailLoading.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidFailLoadingEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidFailLoadingEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidFinishLoading">
            <summary>
            Tells the delegate that the specified map view successfully loaded the needed map data.
            <br></br>Equivalent to implementing the native <c>mapViewDidFinishLoadingMap:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidFinishRendering">
            <summary>
            Tells the delegate that the map view has finished rendering all visible tiles.
            <br></br>Equivalent to implementing the native <c>mapViewDidFinishRenderingMap:fullyRendered:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapView.DidFinishRenderingEventArgs">
            <summary>
            Event arguments for DidFinishRendering.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DidFinishRenderingEventArgs.#ctor(System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKMapView.DidFinishRenderingEventArgs.fullyRendered">
            <summary>fullyRendered</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.DidStopLocatingUser">
            <summary>
            Tells the delegate that the map view stopped tracking the user’s location.
            <br></br>Equivalent to implementing the native <c>mapViewDidStopLocatingUser:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.WillStartLoading">
            <summary>
            Tells the delegate that the specified map view is about to retrieve some map data.
            <br></br>Equivalent to implementing the native <c>mapViewWillStartLoadingMap:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.WillStartLocatingUser">
            <summary>
            Tells the delegate that the map view will start tracking the user’s position.
            <br></br>Equivalent to implementing the native <c>mapViewWillStartLocatingUser:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.MapKit.MKMapView.WillStartRendering">
            <summary>
            Tells the delegate that the map view is about to start rendering some of its tiles.
            <br></br>Equivalent to implementing the native <c>mapViewWillStartRenderingMap:</c> method of <c>MKMapViewDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_annotations(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_annotationVisibleRect(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_camera(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_camera(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_centerCoordinate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_centerCoordinate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_mapType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_mapType(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_overlays(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_pitchEnabled(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_pitchEnabled(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_region(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_region(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_rotateEnabled(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_rotateEnabled(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_scrollEnabled(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_scrollEnabled(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_selectedAnnotations(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_selectedAnnotations(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_showsBuildings(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_showsBuildings(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_showsPointsOfInterest(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_showsPointsOfInterest(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_showsUserLocation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_showsUserLocation(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_userLocation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_userLocationVisible(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_userTrackingMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_userTrackingMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_visibleMapRect(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_visibleMapRect(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_get_zoomEnabled(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_set_zoomEnabled(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_addAnnotation_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_addAnnotations_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_addOverlay_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_addOverlay_level_(System.String,System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_addOverlays_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_addOverlays_level_(System.String,System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_annotationsInMapRect_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_convertCoordinate_toPointToView_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_convertPoint_toCoordinateFromView_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_convertRect_toRegionFromView_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_convertRegion_toRectToView_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_dequeueReusableAnnotationViewWithIdentifier_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_deselectAnnotation_animated_(System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_exchangeOverlay_withOverlay_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_exchangeOverlayAtIndex_withOverlayAtIndex_(System.String,System.UInt32,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_insertOverlay_aboveOverlay_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_insertOverlay_atIndex_(System.String,System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_insertOverlay_atIndex_level_(System.String,System.String,System.UInt32,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_insertOverlay_belowOverlay_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_mapRectThatFits_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_mapRectThatFits_edgePadding_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_overlaysInLevel_(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_regionThatFits_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_removeAnnotation_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_removeAnnotations_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_removeOverlay_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_removeOverlays_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_rendererForOverlay_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_selectAnnotation_animated_(System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_setCamera_animated_(System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_setCenterCoordinate_animated_(System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_setRegion_animated_(System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_setUserTrackingMode_animated_(System.String,System.Int32,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_setVisibleMapRect_animated_(System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_setVisibleMapRect_edgePadding_animated_(System.String,System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_showAnnotations_animated_(System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_viewForAnnotation_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.UP_MKMapView_viewForOverlay_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKMapView" /> class.
            <br></br>Equivalent to the native <c>[[MKMapView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.ClassExists">
            <summary>
            Returns whether the native MKMapView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.annotations">
            <summary>
            The complete list of annotations associated with the receiver. (read-only)
            <br></br>Equivalent to the native <c>annotations</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The objects in this array must adopt the <c>MKAnnotation</c> protocol. If no annotations are associated with the map view, the value of this property is <c>null</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addAnnotation:</c>
                    </li>
                    <li>
                        <c>– addAnnotations:</c>
                    </li>
                    <li>
                        <c>– removeAnnotation:</c>
                    </li>
                    <li>
                        <c>– removeAnnotations:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.annotationVisibleRect">
            <summary>
            The visible rectangle where annotation views are currently being displayed. (read-only)
            <br></br>Equivalent to the native <c>annotationVisibleRect</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.camera">
            <summary>
            The camera used for determining the appearance of the map.
            <br></br>Equivalent to the native <c>camera</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A camera object defines a point above the map’s surface from which to view the map. Applying a camera to a map has the effect of giving the map a 3D-like appearance. You can use a camera to rotate the map so that it is oriented to match the user’s heading or to apply a pitch angle to tilt the plane of the map. </p>
                <p>Assigning a new camera to this property updates the map immediately and without animating the change. If you want to animate changes in camera position, use the <c>setCamera:animated:</c> method instead. </p>
                <p>You must not set this property to <c>null</c>. To restore the map to a flat appearance, apply a camera with a pitch angle of <c>0</c>, which yields a camera looking straight down onto the map surface. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– setCamera:animated:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.centerCoordinate">
            <summary>
            The map coordinate at the center of the map view.
            <br></br>Equivalent to the native <c>centerCoordinate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Changing the value in this property centers the map on the new coordinate without changing the current zoom level. It also updates the values in the <c>region</c> property to reflect the new center coordinate and the new span values needed to maintain the current zoom level.</p>
                <p>Changing the value of this property updates the map view immediately. If you want to animate the change, use the <c>setCenterCoordinate:animated:</c> method instead. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– setCenterCoordinate:animated:</c>
                    </li>
                    <li>    <c>@property region</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.Delegate">
            <summary>
            The receiver’s delegate.
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A map view sends messages to its delegate regarding the loading of map data and changes in the portion of the map being displayed. The delegate also manages the annotation views used to highlight points of interest on the map. </p>
                <p>The delegate should implement the methods of the <c>MKMapViewDelegate</c> protocol. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.mapType">
            <summary>
            The type of data displayed by the map view.
            <br></br>Equivalent to the native <c>mapType</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Changing the value in this property may cause the receiver to begin loading new map content. For example, changing from <c>MKMapTypeStandard</c> to <c>MKMapTypeSatellite</c> might cause it to begin loading the satellite imagery needed for the map. If new data is needed, however, it is loaded asynchronously and appropriate messages are sent to the receiver’s delegate indicating the status of the operation.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.overlays">
            <summary>
            The overlay objects currently associated with the map view. (read-only)
            <br></br>Equivalent to the native <c>overlays</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property contains the union of all overlays at the different levels of the map. The objects in this array must adopt the <c>MKOverlay</c> protocol. If no overlays are associated with the map view, the value of this property is an empty array. </p>
                <p>The order of the objects in this array does not necessary reflect their visual order on the map.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.pitchEnabled">
            <summary>
            A Boolean value indicating whether the map camera’s pitch information is used.
            <br></br>Equivalent to the native <c>pitchEnabled</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is set to <c>true</c> and a valid camera is associated with the map, the camera’s pitch angle is used to tilt the plane of the map. When this property is set to <c>false</c>, the camera’s pitch angle is ignored and the map is always displayed as if the user is looking straight down onto it.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.region">
            <summary>
            The area currently displayed by the map view.
            <br></br>Equivalent to the native <c>region</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The region encompasses both the latitude and longitude point on which the map is centered and the span of coordinates to display. The span values provide an implicit zoom value for the map. The larger the displayed area, the lower the amount of zoom. Similarly, the smaller the displayed area, the greater the amount of zoom. </p>
                <p>Changing only the center coordinate of the region can still cause the span to change implicitly. The span might change because the distances represented by a span change at different latitudes and longitudes and the map view may need to adjust the span to account for the new location. If you want to change the center coordinate without changing the zoom level, use the <c>centerCoordinate</c> instead.</p>
                <p>Changing the value of this property updates the map view immediately. When setting this property, the map may adjust the new region value so that it fits the visible area of the map precisely. This is normal and is done to ensure that the value in this property always reflects the visible portion of the map. However, it does mean that if you get the value of this property right after setting it, the returned value may not match the value you set. (You can use the <c>regionThatFits:</c> method to determine the region that will actually be set by the map.) </p>
                <p>If you want to animate the change in region, use the <c>setRegion:animated:</c> method instead. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– setRegion:animated:</c>
                    </li>
                    <li>    <c>@property centerCoordinate</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.rotateEnabled">
            <summary>
            A Boolean value indicating whether the map camera’s heading information is used.
            <br></br>Equivalent to the native <c>rotateEnabled</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is set to <c>true</c> and a valid camera is associated with the map, the camera’s heading angle is used to rotate the plane of the map around its center point. When this property is set to <c>false</c>, the camera’s heading angle is ignored and the map is always oriented so that true north is situated at the top of the map view. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.scrollEnabled">
            <summary>
            A Boolean value that determines whether the user may scroll around the map.
            <br></br>Equivalent to the native <c>scrollEnabled</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property controls only user interactions with the map. If you set the value of this property to <c>false</c>, you may still change the map location programmatically by changing the value in the <c>region</c> property. </p>
                <p>The default value of this property is <c>true</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.selectedAnnotations">
            <summary>
            The annotations that are currently selected.
            <br></br>Equivalent to the native <c>selectedAnnotations</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Assigning a new array to this property selects only the first annotation in the array.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.showsBuildings">
            <summary>
            A Boolean indicating whether the map displays extruded building information.
            <br></br>Equivalent to the native <c>showsBuildings</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is set to <c>true</c> and the camera has a pitch angle greater than zero, the map extrudes buildings so that they extend above the map plane, creating a 3D effect. The <c>mapType</c> property must be set to <c>MKMapTypeStandard</c> for extruded buildings to be displayed. The default value of this property is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.showsPointsOfInterest">
            <summary>
            A Boolean indicating whether the map displays point-of-interest information.
            <br></br>Equivalent to the native <c>showsPointsOfInterest</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is set to <c>true</c>, the map displays icons and labels for restaurants, schools, and other relevant points of interest. The default value of this property is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.showsUserLocation">
            <summary>
            A Boolean value indicating whether the map should try to display the user’s location.
            <br></br>Equivalent to the native <c>showsUserLocation</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property does not indicate whether the user’s position is actually visible on the map, only whether the map view should try to display it. Setting this property to <c>true</c> causes the map view to use the Core Location framework to find the current location and try to display it on the map. As long as this property is <c>true</c>, the map view continues to track the user’s location and update it periodically. The default value of this property is <c>false</c>. </p>
                <p>Showing the user’s location does not guarantee that the location is visible on the map. The user might have scrolled the map to a different point, causing the current location to be offscreen. To determine whether the user’s current location is currently displayed on the map, use the <c>userLocationVisible</c> property. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property userLocationVisible</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.userLocation">
            <summary>
            The annotation object representing the user’s current location. (read-only)
            <br></br>Equivalent to the native <c>userLocation</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property showsUserLocation</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.userLocationVisible">
            <summary>
            A Boolean value indicating whether the device’s current location is visible in the map view. (read-only)
            <br></br>Equivalent to the native <c>userLocationVisible</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property tells you whether the icon used to represent the user’s current location is visible in the map view. When determining whether the current location is visible, this property factors in the horizontal accuracy of the location data. Specifically, if the rectangle represented by the user’s current location plus or minus minus the horizontal accuracy of that location intersects the map’s visible rectangle, this property contains the value <c>true</c>. If that location rectangle does not intersect the map’s visible rectangle, this property contains the value <c>false</c>. </p>
                <p>If the user’s location cannot be determined, this property contains the value <c>false</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.userTrackingMode">
            <summary>
            The mode used to track the user location.
            <br></br>Equivalent to the native <c>userTrackingMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Possible values are described in  “MKUserTrackingMode.” </p>
                <p>Setting the tracking mode to <c>MKUserTrackingModeFollow</c> or <c>MKUserTrackingModeFollowWithHeading</c> causes the map view to center the map on that location and begin tracking the user’s location. If the map is zoomed out, the map view automatically zooms in on the user’s location, effectively changing the current visible region.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– setUserTrackingMode:animated:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.visibleMapRect">
            <summary>
            The area currently displayed by the map view.
            <br></br>Equivalent to the native <c>visibleMapRect</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property represents the same basic information as the <c>region</c> property but specified as a map rectangle instead of a region. </p>
                <p>Changing the value of this property updates the map view immediately. If you want to animate the change, use the <c>setVisibleMapRect:animated:</c> method instead. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapView.zoomEnabled">
            <summary>
            A Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.
            <br></br>Equivalent to the native <c>zoomEnabled</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property controls only user interactions with the map. If you set the value of this property to <c>false</c>, you may still change the zoom level programmatically by changing the value in the <c>region</c> property. </p>
                <p>The default value of this property is <c>true</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.AddAnnotation(U3DXT.iOS.Native.MapKit.MKAnnotation)">
            <summary>
            Adds the specified annotation to the map view.
            <br></br>Equivalent to the native <c>addAnnotation:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotation</em>
                <p>The annotation object to add to the receiver. This object must conform to the <c>MKAnnotation</c> protocol. The map view retains the specified object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addAnnotations:</c>
                    </li>
                    <li>
                        <c>– removeAnnotation:</c>
                    </li>
                </ul>
            </remarks>
            <param name="annotation">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.AddAnnotations(System.Object[])">
            <summary>
            Adds an array of annotation objects to the map view.
            <br></br>Equivalent to the native <c>addAnnotations:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotations</em>
                <p>An array of annotation objects. Each object in the array must conform to the <c>MKAnnotation</c> protocol. The map view retains the individual annotation objects.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addAnnotation:</c>
                    </li>
                    <li>
                        <c>– removeAnnotations:</c>
                    </li>
                </ul>
            </remarks>
            <param name="annotations">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.AddOverlay(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Adds a single overlay object to the map.
            <br></br>Equivalent to the native <c>addOverlay:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to add. This object must conform to the <c>MKOverlay</c> protocol.</p>
                <b>Discussion</b>
                <p>The specified object is added to the group of overlay objects in the <c>MKOverlayLevelAboveLabels</c> level. Adding an overlay causes the map view to begin monitoring the area represented by that overlay. As soon as the bounding rectangle of an overlay intersects the visible portion of the map, the map view adds a corresponding overlay view to the map. The overlay view is provided by the <c>mapView:viewForOverlay:</c> method of the map view’s delegate object. </p>
                <p>To remove an overlay from a map, use the <c>removeOverlay:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addOverlays:</c>
                    </li>
                    <li>
                        <c>– removeOverlay:</c>
                    </li>
                    <li>
                        <c>– removeOverlays:</c>
                    </li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.AddOverlay(U3DXT.iOS.Native.MapKit.MKOverlay,U3DXT.iOS.Native.MapKit.MKOverlayLevel)">
            <summary>
            Adds the overlay object to the map at the specified level.
            <br></br>Equivalent to the native <c>addOverlay:level:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to add. This object must conform to the <c>MKOverlay</c> protocol.</p>
                <em>level</em>
                <p>The map level at which to place the overlay. For a list of possible values for this parameter, see  “MKOverlayLevel.”  </p>
                <b>Discussion</b>
                <p>Positioning an overlay at a specific level places that overlay’s visual representation in front of or behind other map content such as map labels and point-of-interest icons.</p>
                <p>This method adds the specified overlay to the end of the list of overlay objects at the given level. Adding an overlay also causes the map view to begin monitoring the area they represent. As soon as the bounding rectangle of the overlay intersects the visible portion of the map, the map view calls your delegate’s <c>mapView:rendererForOverlay:</c> method to get the renderer object to use when drawing the overlay.</p>
                <p>To remove an overlay from a map, use the <c>removeOverlay:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <param name="level">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.AddOverlays(System.Object[])">
            <summary>
            Adds an array of overlay objects to the map.
            <br></br>Equivalent to the native <c>addOverlays:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlays</em>
                <p>An array of objects, each of which must conform to the <c>MKOverlay</c> protocol.</p>
                <b>Discussion</b>
                <p>The specified objects are added to the group of overlay objects in the <c>MKOverlayLevelAboveLabels</c> level. Adding an overlay causes the map view to begin monitoring the area represented by that overlay. As soon as the bounding rectangle of the overlay intersects the visible portion of the map, the map view tries to draw the overlay. As soon as the bounding rectangle of an overlay intersects the visible portion of the map, the map view adds a corresponding overlay view to the map. The overlay view is provided by the <c>mapView:viewForOverlay:</c> method of the map view’s delegate object. </p>
                <p>To remove multiple overlays from a map, use the <c>removeOverlays:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addOverlay:</c>
                    </li>
                    <li>
                        <c>– removeOverlay:</c>
                    </li>
                    <li>
                        <c>– removeOverlays:</c>
                    </li>
                </ul>
            </remarks>
            <param name="overlays">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.AddOverlays(System.Object[],U3DXT.iOS.Native.MapKit.MKOverlayLevel)">
            <summary>
            Adds an array of overlay objects to the map at the specified level.
            <br></br>Equivalent to the native <c>addOverlays:level:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlays</em>
                <p>The array of overlay objects to add. Each object in the array must conform to the <c>MKOverlay</c> protocol.</p>
                <em>level</em>
                <p>The map level at which to place the overlays. For a list of possible values for this parameter, see  “MKOverlayLevel.”  </p>
                <b>Discussion</b>
                <p>Positioning an overlay at a specific level places that overlay’s visual representation in front of or behind other map content such as map labels and point-of-interest icons.</p>
                <p>This method adds the specified overlays to the end of the list of overlay objects at the given level. Adding the overlays also causes the map view to begin monitoring the area they represent. As soon as the bounding rectangle of an overlay intersects the visible portion of the map, the map view calls your delegate’s <c>mapView:rendererForOverlay:</c> method to get the renderer object to use when drawing that overlay.</p>
                <p>To remove multiple overlays from a map, use the <c>removeOverlays:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlays">
            </param>
            <param name="level">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.AnnotationsInMapRect(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the annotation objects located in the specified map rectangle.
            <br></br>Equivalent to the native <c>annotationsInMapRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The portion of the map that you want to search for annotations.</p>
                <b>Return Value</b>
                <p>The set of annotation objects located in <em>mapRect</em>.</p>
                <b>Discussion</b>
                <p>This method offers a fast way to retrieve the annotation objects in a particular portion of the map. This method is much faster than doing a linear search of the objects in the <c>annotations</c> property yourself.</p>
                <b>Special Considerations</b>
                <p>Prior to iOS 7 this method incorrectly did not return instances of <c>MKUserLocation</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.ConvertCoordinate(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,U3DXT.iOS.Native.UIKit.UIView)">
            <summary>
            Converts a map coordinate to a point in the specified view.
            <br></br>Equivalent to the native <c>convertCoordinate:toPointToView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>The map coordinate for which you want to find the corresponding point.</p>
                <em>view</em>
                <p>The view in whose coordinate system you want to locate the specified map coordinate. If this parameter is <c>null</c>, the returned point is specified in the window’s coordinate system. If <em>view</em> is not <c>null</c>, it must belong to the same window as the map view.</p>
                <b>Return Value</b>
                <p>The point (in the appropriate view or window coordinate system) corresponding to the specified latitude and longitude value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– convertPoint:toCoordinateFromView:</c>
                    </li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
            <param name="view">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.ConvertPoint(UnityEngine.Vector2,U3DXT.iOS.Native.UIKit.UIView)">
            <summary>
            Converts a point in the specified view’s coordinate system to a map coordinate.
            <br></br>Equivalent to the native <c>convertPoint:toCoordinateFromView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>The point you want to convert. </p>
                <em>view</em>
                <p>The view that serves as the reference coordinate system for the <em>point</em> parameter. </p>
                <b>Return Value</b>
                <p>The map coordinate at the specified point. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– convertCoordinate:toPointToView:</c>
                    </li>
                </ul>
            </remarks>
            <param name="point">
            </param>
            <param name="view">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.ConvertRect(UnityEngine.Rect,U3DXT.iOS.Native.UIKit.UIView)">
            <summary>
            Converts a rectangle in the specified view’s coordinate system to a map region.
            <br></br>Equivalent to the native <c>convertRect:toRegionFromView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle you want to convert.</p>
                <em>view</em>
                <p>The view that serves as the reference coordinate system for the <em>rect</em> parameter. </p>
                <b>Return Value</b>
                <p>The map region corresponding to the specified view rectangle. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– convertRegion:toRectToView:</c>
                    </li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
            <param name="view">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.ConvertRegion(U3DXT.iOS.Native.MapKit.MKCoordinateRegion,U3DXT.iOS.Native.UIKit.UIView)">
            <summary>
            Converts a map region to a rectangle in the specified view.
            <br></br>Equivalent to the native <c>convertRegion:toRectToView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The map region for which you want to find the corresponding view rectangle.</p>
                <em>view</em>
                <p>The view in whose coordinate system you want to locate the specified map region. If this parameter is <c>null</c>, the returned rectangle is specified in the window’s coordinate system. If <em>view</em> is not <c>null</c>, it must belong to the same window as the map view.</p>
                <b>Return Value</b>
                <p>The rectangle corresponding to the specified map region.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– convertRect:toRegionFromView:</c>
                    </li>
                </ul>
            </remarks>
            <param name="region">
            </param>
            <param name="view">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DequeueReusableAnnotationView(System.String)">
            <summary>
            Returns a reusable annotation view located by its identifier.
            <br></br>Equivalent to the native <c>dequeueReusableAnnotationViewWithIdentifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifier</em>
                <p>A string identifying the annotation view to be reused. This string is the same one you specify when initializing the annotation view using the <c>initWithAnnotation:reuseIdentifier:</c> method.</p>
                <b>Return Value</b>
                <p>An annotation view with the specified identifier, or <c>null</c> if no such object exists in the reuse queue.</p>
                <b>Discussion</b>
                <p>For performance reasons, you should generally reuse <c>MKAnnotationView</c> objects in your map views. As annotation views move offscreen, the map view moves them to an internally managed reuse queue. As new annotations move onscreen, and your code is prompted to provide a corresponding annotation view, you should always attempt to dequeue an existing view before creating a new one. Dequeueing saves time and memory during performance-critical operations such as scrolling.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.DeselectAnnotation(U3DXT.iOS.Native.MapKit.MKAnnotation,System.Boolean)">
            <summary>
            Deselects the specified annotation and hides its callout view.
            <br></br>Equivalent to the native <c>deselectAnnotation:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotation</em>
                <p>The annotation object to deselect.</p>
                <em>animated</em>
                <p>If <c>true</c>, the callout view is animated offscreen.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="annotation">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.ExchangeOverlay(U3DXT.iOS.Native.MapKit.MKOverlay,U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Exchanges the positions of the two overlay objects.
            <br></br>Equivalent to the native <c>exchangeOverlay:withOverlay:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay1</em>
                <p>The first overlay object. </p>
                <em>overlay2</em>
                <p>The second overlay object.</p>
                <b>Discussion</b>
                <p>If the overlays are in the same map level, they exchange positions within that level’s array of overlay objects. If they are in different map levels, the two objects also swap levels. Swapping the position of the overlays affects their visibility in the map view. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– exchangeOverlayAtIndex:withOverlayAtIndex:</c>
                    </li>
                </ul>
            </remarks>
            <param name="overlay1">
            </param>
            <param name="overlay2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.ExchangeOverlayAtIndex(System.UInt32,System.UInt32)">
            <summary>
            Exchanges the position of two overlay objects.
            <br></br>Equivalent to the native <c>exchangeOverlayAtIndex:withOverlayAtIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>index1</em>
                <p>The index of an overlay in the <c>MKOverlayLevelAboveLabels</c> map level. </p>
                <em>index2</em>
                <p>The index of another overlay in the <c>MKOverlayLevelAboveLabels</c> map level.</p>
                <b>Discussion</b>
                <p>If you need to exchange overlays in other map levels, use the <c>exchangeOverlay:withOverlay:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– exchangeOverlay:withOverlay:</c>
                    </li>
                </ul>
            </remarks>
            <param name="index1">
            </param>
            <param name="index2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.InsertOverlayAbove(U3DXT.iOS.Native.MapKit.MKOverlay,U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Inserts one overlay object on top of another.
            <br></br>Equivalent to the native <c>insertOverlay:aboveOverlay:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to insert.</p>
                <em>sibling</em>
                <p>An existing object in the <c>overlays</c> array. This object must exist in the array and must not be <c>null</c>.</p>
                <b>Discussion</b>
                <p>This method inserts the overlay into the <c>MKOverlayLevelAboveLabels</c> level and positions it relative to the specified sibling. When displayed, this leads to the overlay’s contents being displayed above that of its sibling. If sibling is not in the same map level, this method appends the overlay to the end of the list of overlays at the indicated level.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– insertOverlay:atIndex:</c>
                    </li>
                    <li>
                        <c>– insertOverlay:belowOverlay:</c>
                    </li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <param name="sibling">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.InsertOverlayAt(U3DXT.iOS.Native.MapKit.MKOverlay,System.UInt32)">
            <summary>
            Inserts an overlay object into the list associated with the map.
            <br></br>Equivalent to the native <c>insertOverlay:atIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to insert.</p>
                <em>index</em>
                <p>The index at which to insert the overlay object. If this value is greater than the number of objects in the <c>overlays</c> property, this method appends the object to the end of the array.</p>
                <b>Discussion</b>
                <p>This method inserts the overlay into the <c>MKOverlayLevelAboveLabels</c> level.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– insertOverlay:aboveOverlay:</c>
                    </li>
                    <li>
                        <c>– insertOverlay:belowOverlay:</c>
                    </li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.InsertOverlayAt(U3DXT.iOS.Native.MapKit.MKOverlay,System.UInt32,U3DXT.iOS.Native.MapKit.MKOverlayLevel)">
            <summary>
            Inserts an overlay object into the level at the specified index.
            <br></br>Equivalent to the native <c>insertOverlay:atIndex:level:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to insert.</p>
                <em>index</em>
                <p>The index at which to insert the overlay object. If this value is greater than the number of objects in the <c>overlays</c> property, this method appends the object to the end of the array.</p>
                <em>level</em>
                <p>The map level at which to place the overlay. For a list of possible values for this parameter, see  “MKOverlayLevel.”  </p>
                <b>Discussion</b>
                <p>Inserting an overlay at a specific level places that overlay’s visual representation in front of or behind other map content such as map labels and point-of-interest icons.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <param name="index">
            </param>
            <param name="level">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.InsertOverlayBelow(U3DXT.iOS.Native.MapKit.MKOverlay,U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Inserts one overlay object below another.
            <br></br>Equivalent to the native <c>insertOverlay:belowOverlay:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to insert.</p>
                <em>sibling</em>
                <p>An existing object in the <c>overlays</c> array. This object must exist in the array and must not be <c>null</c>.</p>
                <b>Discussion</b>
                <p>This method inserts the overlay into the <c>MKOverlayLevelAboveLabels</c> level and positions it relative to the specified sibling. When displayed, this leads to the overlay’s contents being displayed beneath that of its sibling. If sibling is not in the same map level, this method appends the overlay to the end of the list of overlays at the indicated level.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– insertOverlay:atIndex:</c>
                    </li>
                    <li>
                        <c>– insertOverlay:aboveOverlay:</c>
                    </li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <param name="sibling">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.MapRectThatFits(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Adjusts the aspect ratio of the specified map rectangle to ensure that it fits in the map view’s frame.
            <br></br>Equivalent to the native <c>mapRectThatFits:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The initial map rectangle whose width and height you want to adjust.</p>
                <b>Return Value</b>
                <p>A map rectangle that is still centered on the same point of the map but whose width and height are adjusted to fit in the map view’s frame.</p>
                <b>Discussion</b>
                <p>You can use this method to normalize map rectangle values before displaying the corresponding area. This method returns a new map rectangle that both contains the specified rectangle and fits neatly inside the map view’s frame. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– mapRectThatFits:edgePadding:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.MapRectThatFits(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.UIKit.UIEdgeInsets)">
            <summary>
            Adjusts the aspect ratio of the specified map rectangle, incorporating the specified inset values.
            <br></br>Equivalent to the native <c>mapRectThatFits:edgePadding:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The initial map rectangle whose width and height you want to adjust.</p>
                <em>insets</em>
                <p>The distance (measured in screen points) by which to inset the returned rectangle from the actual boundaries of the map view’s frame.</p>
                <b>Return Value</b>
                <p>A map rectangle that is still centered on the same point of the map but whose width and height are adjusted to fit in the map view’s frame minus the inset values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– mapRectThatFits:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="insets">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.OverlaysInLevel(U3DXT.iOS.Native.MapKit.MKOverlayLevel)">
            <summary>
            The overlay objects in the specified level of the map.
            <br></br>Equivalent to the native <c>overlaysInLevel:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>level</em>
                <p>The map level whose overlays you want. For a list of possible values for this parameter, see  “MKOverlayLevel.”  </p>
                <b>Return Value</b>
                <p>An array of objects conforming to the <c>MKOverlay</c> protocol that display in the specified map level. If there are no overlays at the specified level, this method returns an empty array.</p>
                <b>Discussion</b>
                <p>You can use this method to get all of the overlays assigned to a specific map level, which might be a subset of the complete set of overlay objects. For overlapping overlay objects, the order of objects in the array represents their visual order when displayed on the map, with objects in the beginning of the array located behind those at later indexes. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addOverlay:level:</c>
                    </li>
                    <li>
                        <c>– addOverlays:level:</c>
                    </li>
                </ul>
            </remarks>
            <param name="level">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.RegionThatFits(U3DXT.iOS.Native.MapKit.MKCoordinateRegion)">
            <summary>
            Adjusts the aspect ratio of the specified region to ensure that it fits in the map view’s frame.
            <br></br>Equivalent to the native <c>regionThatFits:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The initial region whose span you want to adjust. </p>
                <b>Return Value</b>
                <p>A region that is still centered on the same point of the map but whose span values are adjusted to fit in the map view’s frame. </p>
                <b>Discussion</b>
                <p>You can use this method to normalize the region values before displaying them in the map. This method returns a new region that both contains the specified region and fits neatly inside the map view’s frame. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.RemoveAnnotation(U3DXT.iOS.Native.MapKit.MKAnnotation)">
            <summary>
            Removes the specified annotation object from the map view.
            <br></br>Equivalent to the native <c>removeAnnotation:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotation</em>
                <p>The annotation object to remove. This object must conform to the <c>MKAnnotation</c> protocol.</p>
                <b>Discussion</b>
                <p>If the annotation is currently associated with an annotation view, and that view has a reuse identifier, this method removes the annotation view and queues it internally for later reuse. You can retrieve queued annotation views (and associate them with new annotations) using the <c>dequeueReusableAnnotationViewWithIdentifier:</c> method. </p>
                <p>Removing an annotation object disassociates it from the map view entirely, preventing it from being displayed on the map. Thus, you would typically call this method only when you want to hide or delete a given annotation. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– removeAnnotations:</c>
                    </li>
                    <li>
                        <c>– addAnnotation:</c>
                    </li>
                </ul>
            </remarks>
            <param name="annotation">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.RemoveAnnotations(System.Object[])">
            <summary>
            Removes an array of annotation objects from the map view.
            <br></br>Equivalent to the native <c>removeAnnotations:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotations</em>
                <p>The array of annotations to remove. Objects in the array must conform to the <c>MKAnnotation</c> protocol.</p>
                <b>Discussion</b>
                <p>If any annotation object in the array has an associated annotation view, and if that view has a reuse identifier, this method removes the annotation view and queues it internally for later reuse. You can retrieve queued annotation views (and associate them with new annotations) using the <c>dequeueReusableAnnotationViewWithIdentifier:</c> method. </p>
                <p>Removing annotation objects disassociates them from the map view entirely, preventing them from being displayed on the map. Thus, you would typically call this method only when you want to hide or delete the specified annotations. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– removeAnnotation:</c>
                    </li>
                    <li>
                        <c>– addAnnotations:</c>
                    </li>
                </ul>
            </remarks>
            <param name="annotations">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.RemoveOverlay(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Removes a single overlay object from the map.
            <br></br>Equivalent to the native <c>removeOverlay:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to remove.</p>
                <b>Discussion</b>
                <p>This method removes the overlay regardless of the level that it is in. Removing an overlay also removes its corresponding renderer, if one is in use. If the specified overlay is not currently associated with the map view, this method does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addOverlay:</c>
                    </li>
                    <li>
                        <c>– addOverlays:</c>
                    </li>
                    <li>
                        <c>– removeOverlays:</c>
                    </li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.RemoveOverlays(System.Object[])">
            <summary>
            Removes one or more overlay objects from the map.
            <br></br>Equivalent to the native <c>removeOverlays:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlays</em>
                <p>An array of objects, each of which conforms to the <c>MKOverlay</c> protocol. </p>
                <b>Discussion</b>
                <p>This method removes the specified overlays regardless of which level each one is in. Removing an overlay also removes its corresponding renderer, if one is in use. If a given overlay object is not associated with the map view, it is ignored. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addOverlay:</c>
                    </li>
                    <li>
                        <c>– addOverlays:</c>
                    </li>
                    <li>
                        <c>– removeOverlay:</c>
                    </li>
                </ul>
            </remarks>
            <param name="overlays">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.Renderer(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Returns the renderer object used to draw the contents of the specified overlay object.
            <br></br>Equivalent to the native <c>rendererForOverlay:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object whose renderer you want.</p>
                <b>Return Value</b>
                <p>The renderer object in use for the specified overlay or <c>null</c> if the overlay is not onscreen. </p>
                <b>Discussion</b>
                <p>This method returns the renderer object that your map delegate provided in its <c>mapView:rendererForOverlay:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.SelectAnnotation(U3DXT.iOS.Native.MapKit.MKAnnotation,System.Boolean)">
            <summary>
            Selects the specified annotation and displays a callout view for it.
            <br></br>Equivalent to the native <c>selectAnnotation:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotation</em>
                <p>The annotation object to select.</p>
                <em>animated</em>
                <p>If <c>true</c>, the callout view is animated into position.</p>
                <b>Discussion</b>
                <p>If the specified annotation is not onscreen, and therefore does not have an associated annotation view, this method has no effect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="annotation">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.SetCamera(U3DXT.iOS.Native.MapKit.MKMapCamera,System.Boolean)">
            <summary>
            Changes the camera used for determining the map’s viewing parameters and optionally animates the change.
            <br></br>Equivalent to the native <c>setCamera:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>camera</em>
                <p>The camera object containing the viewing angle information. This parameter must not be <c>null</c>. </p>
                <em>animated</em>
                <p>Specify <c>true</c> if you want the change in viewing angle to be animated or <c>false</c> if you want the map to reflect the changes without animations.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property camera</c></li>
                </ul>
            </remarks>
            <param name="camera">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.SetCenterCoordinate(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.Boolean)">
            <summary>
            Changes the center coordinate of the map and optionally animates the change.
            <br></br>Equivalent to the native <c>setCenterCoordinate:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>The new center coordinate for the map. </p>
                <em>animated</em>
                <p>Specify <c>true</c> if you want the map view to scroll to the new location or <c>false</c> if you want the map to display the new location immediately.</p>
                <b>Discussion</b>
                <p>Changing the center coordinate centers the map on the new coordinate without changing the current zoom level. It also updates the value in the <c>region</c> property to reflect the new center coordinate and the new span values needed to maintain the current zoom level.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property centerCoordinate</c></li>
                    <li>    <c>@property region</c></li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.SetRegion(U3DXT.iOS.Native.MapKit.MKCoordinateRegion,System.Boolean)">
            <summary>
            Changes the currently visible region and optionally animates the change.
            <br></br>Equivalent to the native <c>setRegion:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The new region to display in the map view.</p>
                <em>animated</em>
                <p>Specify <c>true</c> if you want the map view to animate the transition to the new region or <c>false</c> if you want the map to center on the specified region immediately.</p>
                <b>Discussion</b>
                <p>Changing just the center coordinate of the region can still cause the span values to change implicitly. The span values might change because that the distances represented by a span change at different latitudes and longitudes and the map view may need to adjust the span to account for the new location. If you want to change the center coordinate without changing the zoom level, use the <c>setCenterCoordinate:animated:</c> instead.</p>
                <p>When setting a new region, the map may adjust the value in the <em>region</em> parameter so that it fits the visible area of the map precisely. This adjustment is normal and is done to ensure that the value in the <c>region</c> property always reflects the visible portion of the map. However, it does mean that if you get the value of that property right after calling this method, the returned value may not match the value you set. (You can use the <c>regionThatFits:</c> method to determine the region that will actually be set by the map.)</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property region</c></li>
                    <li>
                        <c>– setCenterCoordinate:animated:</c>
                    </li>
                </ul>
            </remarks>
            <param name="region">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.SetUserTrackingMode(U3DXT.iOS.Native.MapKit.MKUserTrackingMode,System.Boolean)">
            <summary>
            Sets the mode used to track the user location with optional animation.
            <br></br>Equivalent to the native <c>setUserTrackingMode:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mode</em>
                <p>The mode used to track the user location. Possible values are described in  “MKUserTrackingMode.” </p>
                <em>animated</em>
                <p>If <c>true</c>, the change from the current mode to the new mode is animated; otherwise, it is not. This parameter affects only tracking mode changes. Changes to the user location or heading are always animated. </p>
                <b>Discussion</b>
                <p>Setting the tracking mode to <c>MKUserTrackingModeFollow</c> or <c>MKUserTrackingModeFollowWithHeading</c> causes the map view to center the map on that location and begin tracking the user’s location. If the map is zoomed out, the map view automatically zooms in on the user’s location, effectively changing the current visible region.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property userTrackingMode</c></li>
                    <li>
                        <c>mapView:didChangeUserTrackingMode:animated:</c>
                    </li>
                    <li>
                        <c>mapView:didUpdateUserLocation:</c>
                    </li>
                    <li>
                        <c>heading</c>
                    </li>
                </ul>
            </remarks>
            <param name="mode">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.SetVisibleMapRect(U3DXT.iOS.Native.MapKit.MKMapRect,System.Boolean)">
            <summary>
            Changes the currently visible portion of the map and optionally animates the change.
            <br></br>Equivalent to the native <c>setVisibleMapRect:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The map rectangle to make visible in the map view.</p>
                <em>animate</em>
                <p>Specify <c>true</c> if you want the map view to animate the transition to the new map rectangle or <c>false</c> if you want the map to center on the specified rectangle immediately.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– setVisibleMapRect:edgePadding:animated:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="animate">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.SetVisibleMapRect(U3DXT.iOS.Native.MapKit.MKMapRect,U3DXT.iOS.Native.UIKit.UIEdgeInsets,System.Boolean)">
            <summary>
            Changes the currently visible portion of the map, allowing you to specify additional space around the edges.
            <br></br>Equivalent to the native <c>setVisibleMapRect:edgePadding:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The map rectangle to make visible in the map view.</p>
                <em>insets</em>
                <p>The amount of additional space (measured in screen points) to make visible around the specified rectangle. </p>
                <em>animate</em>
                <p>Specify <c>true</c> if you want the map view to animate the transition to the new map rectangle or <c>false</c> if you want the map to center on the specified rectangle immediately.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– setVisibleMapRect:animated:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="insets">
            </param>
            <param name="animate">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.ShowAnnotations(System.Object[],System.Boolean)">
            <summary>
            Sets the visible region so that the map displays the specified annotations.
            <br></br>Equivalent to the native <c>showAnnotations:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotations</em>
                <p>The annotations that you want to be visible in the map. </p>
                <em>animated</em>
                <p>
                    <c>true</c> if you want the map region change to be animated, or <c>false</c> if you want the map to display the new region immediately without animations.</p>
                <b>Discussion</b>
                <p>Calling this method updates the value in the <c>region</c> property and potentially other properties to reflect the new map region. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="annotations">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.View(U3DXT.iOS.Native.MapKit.MKAnnotation)">
            <summary>
            Returns the annotation view associated with the specified annotation object, if any.
            <br></br>Equivalent to the native <c>viewForAnnotation:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotation</em>
                <p>The annotation object whose view you want.</p>
                <b>Return Value</b>
                <p>The annotation view or <c>null</c> if the view has not yet been created. This method may also return <c>null</c> if the annotation is not in the visible map region and therefore does not have an associated annotation view. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="annotation">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.View(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Returns the view associated with the overlay object if any. ( Deprecated in iOS 7.0.  Use the <c>rendererForOverlay:</c> method instead.)
            <br></br>Equivalent to the native <c>viewForOverlay:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object whose view you want.</p>
                <b>Return Value</b>
                <p>The view associated with the overlay object or <c>null</c> if the overlay is not onscreen. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native MKMapView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[MKMapView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMapViewDelegate">
            <summary>
            The <c>MKMapViewDelegate</c> protocol defines a set of optional methods that you can use to receive map-related update messages. Because many map operations require the <c>MKMapView</c> class to load data asynchronously, the map view calls these methods to notify your application when specific operations complete. The map view also uses these methods to request annotation and overlay views and to manage interactions with those views.
            </summary>
            <remarks>
                <p>Before releasing an <c>MKMapView</c> object for which you have set a delegate, remember to set that object’s <c>delegate</c> property to <c>null</c>. </p>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_annotationView_calloutAccessoryControlTapped__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_annotationView_didChangeDragState_fromOldState__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_didAddAnnotationViews__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_didAddOverlayRenderers__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_didChangeUserTrackingMode_animated__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_didDeselectAnnotationView__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_didFailToLocateUserWithError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_didSelectAnnotationView__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_didUpdateUserLocation__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_regionDidChangeAnimated__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_regionWillChangeAnimated__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_rendererForOverlay__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapView_viewForAnnotation__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapViewDidFailLoadingMap_withError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapViewDidFinishLoadingMap__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapViewDidFinishRenderingMap_fullyRendered__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapViewDidStopLocatingUser__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapViewWillStartLoadingMap__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapViewWillStartLocatingUser__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.UP_MKMapViewDelegate_set__mapViewWillStartRenderingMap__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.CalloutAccessoryControlTapped(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.MapKit.MKAnnotationView,U3DXT.iOS.Native.UIKit.UIControl)">
            <summary>
            (optional) Tells the delegate that the user tapped one of the annotation view’s accessory buttons.
            <br></br>Equivalent to the native <c>mapView:annotationView:calloutAccessoryControlTapped:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view containing the specified annotation view.</p>
                <em>view</em>
                <p>The annotation view whose button was tapped.</p>
                <em>control</em>
                <p>The control that was tapped.</p>
                <b>Discussion</b>
                <p>Accessory views contain custom content and are positioned on either side of the annotation title text. If a view you specify is a descendant of the <c>UIControl</c> class, the map view calls this method as a convenience whenever the user taps your view. You can use this method to respond to taps and perform any actions associated with that control. For example, if your control displayed additional information about the annotation, you could use this method to present a modal panel with that information.</p>
                <p>If your custom accessory views are not descendants of the <c>UIControl</c> class, the map view does not call this method. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="view">
            </param>
            <param name="control">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidChangeDragState(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.MapKit.MKAnnotationView,U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState,U3DXT.iOS.Native.MapKit.MKAnnotationViewDragState)">
            <summary>
            (optional) Tells the delegate that the drag state of one of its annotation views changed.
            <br></br>Equivalent to the native <c>mapView:annotationView:didChangeDragState:fromOldState:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view containing the annotation view.</p>
                <em>annotationView</em>
                <p>The annotation view whose drag state changed.</p>
                <em>newState</em>
                <p>The new drag state of the annotation view.</p>
                <em>oldState</em>
                <p>The previous drag state of the annotation view.</p>
                <b>Discussion</b>
                <p>The drag state typically changes in response to user interactions with the annotation view. However, the annotation view itself is responsible for changing that state as well. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="view">
            </param>
            <param name="newState">
            </param>
            <param name="oldState">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidAddAnnotationViews(U3DXT.iOS.Native.MapKit.MKMapView,System.Object[])">
            <summary>
            (optional) Tells the delegate that one or more annotation views were added to the map.
            <br></br>Equivalent to the native <c>mapView:didAddAnnotationViews:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that added the annotation views.</p>
                <em>views</em>
                <p>An array of <c>MKAnnotationView</c> objects representing the views that were added.</p>
                <b>Discussion</b>
                <p>By the time this method is called, the specified views are already added to the map.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="views">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidAddOverlayRenderers(U3DXT.iOS.Native.MapKit.MKMapView,System.Object[])">
            <summary>
            (optional) Tells the delegate that one or more renderer objects were added to the map.
            <br></br>Equivalent to the native <c>mapView:didAddOverlayRenderers:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that added the renderer objects.</p>
                <em>renderers</em>
                <p>The renderer objects that were added.</p>
                <b>Discussion</b>
                <p>The map view adds renderer objects when it needs them to draw their contents, which might be prior to those contents appearing onscreen. It calls this method to let you know that the renderer is active and in use. By the time this method is called, the specified renderers have already been added to the map. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="renderers">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidChangeUserTrackingMode(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.MapKit.MKUserTrackingMode,System.Boolean)">
            <summary>
            (optional) Tells the delegate that the user tracking mode changed.
            <br></br>Equivalent to the native <c>mapView:didChangeUserTrackingMode:animated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view whose user tracking mode changed.</p>
                <em>mode</em>
                <p>The mode used to track the user’s location.</p>
                <em>animated</em>
                <p>If <c>true</c>, the change from the current mode to the new mode is animated; otherwise, it is not. This parameter affects only tracking mode changes. Changes to the user location or heading are always animated. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>setUserTrackingMode:animated:</c>
                    </li>
                    <li>
                        <c>– mapView:didUpdateUserLocation:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="mode">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidDeselect(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.MapKit.MKAnnotationView)">
            <summary>
            (optional) Tells the delegate that one of its annotation views was deselected.
            <br></br>Equivalent to the native <c>mapView:didDeselectAnnotationView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view containing the annotation view.</p>
                <em>view</em>
                <p>The annotation view that was deselected.</p>
                <b>Discussion</b>
                <p>You can use this method to track changes in the selection state of annotation views.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="view">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidFailToLocateUser(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Tells the delegate that an attempt to locate the user’s position failed.
            <br></br>Equivalent to the native <c>mapView:didFailToLocateUserWithError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that is tracking the user’s location. </p>
                <em>error</em>
                <p>An error object containing the reason why location tracking failed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidSelect(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.MapKit.MKAnnotationView)">
            <summary>
            (optional) Tells the delegate that one of its annotation views was selected.
            <br></br>Equivalent to the native <c>mapView:didSelectAnnotationView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view containing the annotation view.</p>
                <em>view</em>
                <p>The annotation view that was selected.</p>
                <b>Discussion</b>
                <p>You can use this method to track changes in the selection state of annotation views.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="view">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidUpdate(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.MapKit.MKUserLocation)">
            <summary>
            (optional) Tells the delegate that the location of the user was updated.
            <br></br>Equivalent to the native <c>mapView:didUpdateUserLocation:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that is tracking the user’s location. </p>
                <em>userLocation</em>
                <p>The location object representing the user’s latest location. This property may be <c>null</c>.</p>
                <b>Discussion</b>
                <p>While the <c>showsUserLocation</c> property is set to <c>true</c>, this method is called whenever a new location update is received by the map view. This method is also called if the map view’s user tracking mode is set to <c>MKUserTrackingModeFollowWithHeading</c> and the heading changes.</p>
                <p>This method is not called if the application is currently running in the background. If you want to receive location updates while running in the background, you must use the Core Location framework.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="userLocation">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.RegionDidChangeAnimated(U3DXT.iOS.Native.MapKit.MKMapView,System.Boolean)">
            <summary>
            (optional) Tells the delegate that the region displayed by the map view just changed.
            <br></br>Equivalent to the native <c>mapView:regionDidChangeAnimated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view whose visible region changed.</p>
                <em>animated</em>
                <p>If <c>true</c>, the change to the new region was animated. </p>
                <b>Discussion</b>
                <p>This method is called whenever the currently displayed map region changes. During scrolling, this method may be called many times to report updates to the map position. Therefore, your implementation of this method should be as lightweight as possible to avoid affecting scrolling performance.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.RegionWillChangeAnimated(U3DXT.iOS.Native.MapKit.MKMapView,System.Boolean)">
            <summary>
            (optional) Tells the delegate that the region displayed by the map view is about to change.
            <br></br>Equivalent to the native <c>mapView:regionWillChangeAnimated:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view whose visible region is about to change.</p>
                <em>animated</em>
                <p>If <c>true</c>, the change to the new region will be animated. If <c>false</c>, the change will be made immediately.</p>
                <b>Discussion</b>
                <p>This method is called whenever the currently displayed map region changes. During scrolling, this method may be called many times to report updates to the map position. Therefore, your implementation of this method should be as lightweight as possible to avoid affecting scrolling performance.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="animated">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.Renderer(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            (optional) Asks the delegate for a renderer object to use when drawing the specified overlay.
            <br></br>Equivalent to the native <c>mapView:rendererForOverlay:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that requested the renderer object.</p>
                <em>overlay</em>
                <p>The overlay object that is about to be displayed.</p>
                <b>Return Value</b>
                <p>The renderer to use when presenting the specified overlay on the map. If you return <c>null</c>, no content is drawn for the specified overlay object.</p>
                <b>Discussion</b>
                <p>You must implement this method and use it to provide an appropriate renderer object for your overlays. The renderer object is responsible for drawing the contents of your overlay when asked to do so by the map view. Map Kit supports many different types of standard renderer objects and you may also define your own custom renderers.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="overlay">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.View(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.MapKit.MKAnnotation)">
            <summary>
            (optional) Returns the view associated with the specified annotation object.
            <br></br>Equivalent to the native <c>mapView:viewForAnnotation:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that requested the annotation view.</p>
                <em>annotation</em>
                <p>The object representing the annotation that is about to be displayed. In addition to your custom annotations, this object could be an <c>MKUserLocation</c> object representing the user’s current location.</p>
                <b>Return Value</b>
                <p>The annotation view to display for the specified annotation or <c>null</c> if you want to display a standard annotation view.</p>
                <b>Discussion</b>
                <p>Rather than create a new view each time this method is called, you should use the <c>dequeueReusableAnnotationViewWithIdentifier:</c> method of the <c>MKMapView</c> class to see if an existing annotation view of the desired type already exists. If one does exist, you should update the view to reflect the attributes of the specified annotation and return it. If a view of the appropriate type does not exist, you should create one, configure it with the needed annotation data, and return it. </p>
                <p>If the object in the <em>annotation</em> parameter is an instance of the <c>MKUserLocation</c> class, you can provide a custom view to denote the user’s location. To display the user’s location using the default system view, return <c>null</c>.  </p>
                <p>If you do not implement this method, or if you return <c>null</c> from your implementation for annotations other than the user location annotation, the map view uses a standard pin annotation view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="annotation">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidFailLoading(U3DXT.iOS.Native.MapKit.MKMapView,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Tells the delegate that the specified view was unable to load the map data.
            <br></br>Equivalent to the native <c>mapViewDidFailLoadingMap:withError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that started the load operation.</p>
                <em>error</em>
                <p>The reason that the map data could not be loaded.</p>
                <b>Discussion</b>
                <p>This method might be called in situations where the device does not have access to the network or is unable to load the map data for some reason. It may also be called if a request for additional map tiles comes in while a previous request for tiles is still pending. You can use this message to notify the user that the map data is unavailable. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidFinishLoading(U3DXT.iOS.Native.MapKit.MKMapView)">
            <summary>
            (optional) Tells the delegate that the specified map view successfully loaded the needed map data.
            <br></br>Equivalent to the native <c>mapViewDidFinishLoadingMap:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that started the load operation.</p>
                <b>Discussion</b>
                <p>This method is called when the map tiles associated with the current request have been loaded. Map tiles are requested when a new visible area is scrolled into view and tiles are not already available. Map tiles may also be requested for portions of the map that are not currently visible. For example, the map view may load tiles immediately surrounding the currently visible area as needed to handle small pans by the user. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidFinishRendering(U3DXT.iOS.Native.MapKit.MKMapView,System.Boolean)">
            <summary>
            (optional) Tells the delegate that the map view has finished rendering all visible tiles.
            <br></br>Equivalent to the native <c>mapViewDidFinishRenderingMap:fullyRendered:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that was rendering its tiles.</p>
                <em>fullyRendered</em>
                <p>This parameter is set to <c>true</c> if the map view was able to render all tiles completely or <c>false</c> if errors prevented all tiles from being rendered. </p>
                <b>Discussion</b>
                <p>This method lets you know when the map view finishes rendering all of the currently visible tiles to the best of its ability. This method is called regardless of whether all tiles were rendered successfully. If there were errors loading one or more tiles that prevented map view from rendering them, the <em>fullyRendered</em> parameter is set to <c>false</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– mapViewWillStartRenderingMap:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
            <param name="fullyRendered">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.DidStopLocatingUser(U3DXT.iOS.Native.MapKit.MKMapView)">
            <summary>
            (optional) Tells the delegate that the map view stopped tracking the user’s location.
            <br></br>Equivalent to the native <c>mapViewDidStopLocatingUser:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that stopped tracking the user’s location. </p>
                <b>Discussion</b>
                <p>This method is called when the value of the <c>showsUserLocation</c> property changes to <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.WillStartLoading(U3DXT.iOS.Native.MapKit.MKMapView)">
            <summary>
            (optional) Tells the delegate that the specified map view is about to retrieve some map data.
            <br></br>Equivalent to the native <c>mapViewWillStartLoadingMap:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that began loading the data.</p>
                <b>Discussion</b>
                <p>This method is called whenever a new group of map tiles need to be downloaded from the server. This typically occurs whenever you expose portions of the map by panning or zooming the content. You can use this method to mark the time that it takes for the map view to load the data. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.WillStartLocatingUser(U3DXT.iOS.Native.MapKit.MKMapView)">
            <summary>
            (optional) Tells the delegate that the map view will start tracking the user’s position.
            <br></br>Equivalent to the native <c>mapViewWillStartLocatingUser:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that is tracking the user’s location. </p>
                <b>Discussion</b>
                <p>This method is called when the value of the <c>showsUserLocation</c> property changes to <c>true</c>.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMapViewDelegate.WillStartRendering(U3DXT.iOS.Native.MapKit.MKMapView)">
            <summary>
            (optional) Tells the delegate that the map view is about to start rendering some of its tiles.
            <br></br>Equivalent to the native <c>mapViewWillStartRenderingMap:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view that is about to start rendering.</p>
                <b>Discussion</b>
                <p>The map view calls this method when one or more tiles are revealed and require rendering. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– mapViewDidFinishRenderingMap:fullyRendered:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_annotationView_calloutAccessoryControlTapped__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_annotationView_calloutAccessoryControlTapped__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_annotationView_didChangeDragState_fromOldState__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_annotationView_didChangeDragState_fromOldState__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_didAddAnnotationViews__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_didAddAnnotationViews__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_didAddOverlayRenderers__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_didAddOverlayRenderers__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_didChangeUserTrackingMode_animated__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_didChangeUserTrackingMode_animated__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_didDeselectAnnotationView__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_didDeselectAnnotationView__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_didFailToLocateUserWithError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_didFailToLocateUserWithError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_didSelectAnnotationView__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_didSelectAnnotationView__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_didUpdateUserLocation__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_didUpdateUserLocation__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_regionDidChangeAnimated__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_regionDidChangeAnimated__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_regionWillChangeAnimated__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_regionWillChangeAnimated__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_rendererForOverlay__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_rendererForOverlay__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapView_viewForAnnotation__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapView_viewForAnnotation__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapViewDidFailLoadingMap_withError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapViewDidFailLoadingMap_withError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapViewDidFinishLoadingMap__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapViewDidFinishLoadingMap__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapViewDidFinishRenderingMap_fullyRendered__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapViewDidFinishRenderingMap_fullyRendered__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapViewDidStopLocatingUser__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapViewDidStopLocatingUser__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapViewWillStartLoadingMap__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapViewWillStartLoadingMap__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapViewWillStartLocatingUser__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapViewWillStartLocatingUser__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMapViewDelegate._mapViewWillStartRenderingMap__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_mapViewWillStartRenderingMap__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKMultiPoint">
            <summary>
            The <c>MKMultiPoint</c> class is an abstract superclass used to define shapes composed of multiple points. You should not create instances of this class directly. Instead, you should create instances of the <c>MKPolyline</c> or <c>MKPolygon</c> classes. However, you can use the method and properties of this class to access information about the specific points associated with the line or polygon.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMultiPoint.UP_MKMultiPoint_get_pointCount(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMultiPoint.UP_MKMultiPoint_get_points(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMultiPoint.UP_MKMultiPoint_getCoordinates_range_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMultiPoint.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMultiPoint.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMultiPoint.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKMultiPoint" /> class.
            <br></br>Equivalent to the native <c>[[MKMultiPoint alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMultiPoint.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMultiPoint.ClassExists">
            <summary>
            Returns whether the native MKMultiPoint class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMultiPoint.pointCount">
            <summary>
            The number of points associated with the shape. (read-only)
            <br></br>Equivalent to the native <c>pointCount</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKMultiPoint.points">
            <summary>
            The array of points associated with the shape. (read-only)
            <br></br>Equivalent to the native <c>points</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The number of points in the array is specified by the <c>pointCount</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKMultiPoint.GetCoordinates(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,U3DXT.iOS.Native.Foundation.NSRange)">
            <summary>
            Retrieves one or more points associated with the shape and converts them to coordinate values.
            <br></br>Equivalent to the native <c>getCoordinates:range:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coords</em>
                <p>On input, you must provide a C array of structures large enough to hold the desired number of coordinates. On output, this structure contains the requested coordinate data. </p>
                <em>range</em>
                <p>The range of points you want. The <c>location</c> field indicates the first point you are requesting, with <c>0</c> being the first point, <c>1</c> being the second point, and so on. The <c>length</c> field indicates the number of points you want. The array in <em>coords</em> must be large enough to accommodate the number of requested coordinates. </p>
                <b>Discussion</b>
                <p>This method converts the map points into coordinates before returning them to you. If you want the value of each point specified as a map point, you can access the values directly using the <c>points</c> property. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="coords">
            </param>
            <param name="range">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKOverlay">
            <summary>
            The <c>MKOverlay</c> protocol defines a specific type of annotation that represents both a point and an area on a map. Overlay objects are essentially data objects that contain the geographic data needed to represent the map area. For example, overlays can take the form of common shapes such as rectangles and circles. They can also describe polygons and other complex shapes.
            </summary>
            <remarks>
                <p>You use overlays to layer more sophisticated content on top of a map view. For example, you could use an overlay to show the boundaries of a national park or trace a bus route along city streets. The Map Kit framework defines several concrete classes that conform to this protocol and define standard shapes. </p>
                <p>Because overlays are also annotations, they have similar usage pattern to annotations. When added to a map view using the <c>addOverlay:</c> method, that view detects whenever the overlay’s defined region intersects the visible portion of the map. At that point, the map view asks its delegate to provide a special overlay view to draw the visual representation of the overlay. If you add an overlay to a map view as an annotation instead, it is treated as an annotation with a single point. </p>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay.UP_MKOverlay_set__get_boundingMapRect_handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay.UP_MKOverlay_set__get_coordinate_handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay.UP_MKOverlay_set__canReplaceMapContent_handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay.UP_MKOverlay_set__intersectsMapRect__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay.CanReplaceMapContent">
            <summary>
            (optional) Returns a Boolean indicating whether the overlay content replaces the underlying map content.
            <br></br>Equivalent to the native <c>canReplaceMapContent</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the map view can skip the loading and drawing of the underlying map tiles or <c>false</c> if the map tiles should still be drawn.</p>
                <b>Discussion</b>
                <p>The map view uses the return value of this method as a hint to determine whether it should load and render its tiles. If your overlay covers its designated region entirely with opaque content, and effectively replaces the content of underlying map tiles, implement this method and return <c>true</c>. Doing so alleviates the need for the map to render its tiles. </p>
                <p>If you do not implement this method, or if you return <c>false</c> from it, the map view continues to load and render its tiles.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlay.Intersects(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            (optional) Returns a Boolean indicating whether the specified rectangle intersects the receiver’s shape.
            <br></br>Equivalent to the native <c>intersectsMapRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The rectangle to intersect with the receiver’s area. </p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if any part of the map rectangle intersects the receiver’s shape or <c>false</c> if it does not.</p>
                <b>Discussion</b>
                <p>You can implement this method to provide more specific bounds checking for an overlay. If you do not implement it, the bounding rectangle is used to detect intersections. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlay.boundingMapRect">
            <summary>
            (optional) The projected rectangle that encompasses the overlay. (required) (read-only)
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property contains the smallest rectangle that completely encompasses the overlay. Implementers of this protocol must set this area when implementing their overlay class, and after setting it, you must not change it. The rectangle should be specified using projected coordinates—that is, coordinates obtained by projecting the globe onto a two-dimensional surface.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlay._get_boundingMapRect_handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_get_boundingMapRect_handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlay.coordinate">
            <summary>
            (optional) The approximate center point of the overlay area. (required) (read-only)
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This point is typically set to the center point of the map’s bounding rectangle. It is used as the anchor point for any callouts displayed for the annotation. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlay._get_coordinate_handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_get_coordinate_handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlay._canReplaceMapContent_handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_canReplaceMapContent_handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlay._intersectsMapRect__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_intersectsMapRect__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKOverlayLevel">
            <summary>
            Constants indicating the position of overlays relative to other content.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKOverlayLevel.Roads">
            <summary>
                <p>Place the overlay above roadways but below map labels, shields, or point-of-interest icons.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKOverlayLevelAboveRoads</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKOverlayLevel.Labels">
            <summary>
                <p>Place the overlay above map labels, shields, or point-of-interest icons but below annotations and 3D projections of buildings.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKOverlayLevelAboveLabels</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer">
            <summary>
            The <c>MKOverlayPathRenderer</c> class draws a map overlay whose shape is represented by a <c>CGPathRef</c> data type. The default drawing behavior of this class is to apply the object’s current fill attributes, fill the path, apply the current stroke attributes, and then stroke the path.
            </summary>
            <remarks>
                <p>You can use this class as-is or subclass to define additional drawing behaviors. If you subclass, you should override the <c>createPath</c> method and use that method to build the appropriate path object. To change the path, invalidate it and recreate the path using whatever new data your subclass has obtained.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_fillColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_fillColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_lineCap(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_lineCap(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_lineDashPattern(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_lineDashPattern(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_lineDashPhase(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_lineDashPhase(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_lineJoin(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_lineJoin(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_lineWidth(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_lineWidth(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_miterLimit(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_miterLimit(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_path(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_path(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_get_strokeColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_set_strokeColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_applyFillPropertiesToContext_atZoomScale_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_applyStrokePropertiesToContext_atZoomScale_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_createPath(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_fillPath_inContext_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_invalidatePath(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.UP_MKOverlayPathRenderer_strokePath_inContext_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer" /> class.
            <br></br>Equivalent to the native <c>[[MKOverlayPathRenderer alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.ClassExists">
            <summary>
            Returns whether the native MKOverlayPathRenderer class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.fillColor">
            <summary>
            The fill color to use for the path.
            <br></br>Equivalent to the native <c>fillColor</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.lineCap">
            <summary>
            The line cap style to apply to the open ends of the path.
            <br></br>Equivalent to the native <c>lineCap</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The line cap style is applied to the start and end points of any open subpaths. This property does not affect closed subpaths. The default line cap style is <c>kCGLineCapRound</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.lineDashPattern">
            <summary>
            An array of numbers specifying the dash pattern to use for the path.
            <br></br>Equivalent to the native <c>lineDashPattern</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The array contains one or more <c>double</c> objects that indicate the lengths (measured in points) of the line segments and gaps in the pattern. The values in the array alternate, starting with the first line segment length, followed by the first gap length, followed by the second line segment length, and so on.</p>
                <p>This property is set to <c>null</c> by default, which indicates no line dash pattern.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.lineDashPhase">
            <summary>
            The offset (in points) at which to start drawing the dash pattern.
            <br></br>Equivalent to the native <c>lineDashPhase</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Use this property to start drawing a dashed line partway through a segment or gap. For example, a phase value of <c>6</c> for the patter 5-2-3-2 would cause drawing to begin in the middle of the first gap. </p>
                <p>The default value of this property is <c>0</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.lineJoin">
            <summary>
            The line join style to apply to corners of the path.
            <br></br>Equivalent to the native <c>lineJoin</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default line join style is <c>kCGLineJoinRound</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.lineWidth">
            <summary>
            The stroke width to use for the path.
            <br></br>Equivalent to the native <c>lineWidth</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value of this property is 0.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.miterLimit">
            <summary>
            The limiting value that helps avoid spikes at junctions between connected line segments.
            <br></br>Equivalent to the native <c>miterLimit</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The miter limit helps you avoid spikes in paths that use the <c>kCGLineJoinMiter</c> join style. If the ratio of the miter length—that is, the diagonal length of the miter join—to the line thickness exceeds the miter limit, the joint is converted to a bevel join. The default miter limit is 10, which results in the conversion of miters whose angle at the joint is less than 11 degrees.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.path">
            <summary>
            The path representing the overlay’s shape.
            <br></br>Equivalent to the native <c>path</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Getting the value of this property causes the path to be created (using the <c>createPath</c> method) if it does not already exist. You can assign a path object to this property explicitly. When assigning a new path object to this property, the overlay renderer stores a strong reference to the path you provide.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.strokeColor">
            <summary>
            The stroke color to use for the path.
            <br></br>Equivalent to the native <c>strokeColor</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.ApplyFillPropertiesToContext(U3DXT.iOS.Native.CoreGraphics.CGContext,System.Single)">
            <summary>
            Applies the receiver’s current fill-related drawing properties to the specified graphics context.
            <br></br>Equivalent to the native <c>applyFillPropertiesToContext:atZoomScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>context</em>
                <p>The graphics context used to draw the view’s contents.</p>
                <em>zoomScale</em>
                <p>The current zoom scale used for drawing.</p>
                <b>Discussion</b>
                <p>This is a convenience method for applying all of the drawing properties used when filling a path. This method applies the current fill color to the specified graphics context.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="context">
            </param>
            <param name="zoomScale">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.ApplyStrokePropertiesToContext(U3DXT.iOS.Native.CoreGraphics.CGContext,System.Single)">
            <summary>
            Applies the receiver’s current stroke-related drawing properties to the specified graphics context.
            <br></br>Equivalent to the native <c>applyStrokePropertiesToContext:atZoomScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>context</em>
                <p>The graphics context used to draw the view’s contents.</p>
                <em>zoomScale</em>
                <p>The current zoom scale used for drawing.</p>
                <b>Discussion</b>
                <p>This is a convenience method for applying all of the drawing properties used when stroking a path. This method applies the stroke color, line width, line join, line cap, miter limit, line dash phase, and line dash attributes to the specified graphics context. This method applies the scale factor in the <em>zoomScale</em> parameter to the line width and line dash pattern automatically so that lines scale appropriately.</p>
                <p>This method does not save the current graphics state before applying the new attributes. If you want to preserve the existing state, you must save it yourself and restore it later when you finish drawing. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="context">
            </param>
            <param name="zoomScale">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.CreatePath">
            <summary>
            Creates the path for the overlay.
            <br></br>Equivalent to the native <c>createPath</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default implementation of this method does nothing. Subclasses should override it and use it to create the <c>CGPathRef</c> data type to be used for drawing. After creating the path, your implementation should assign it to the <c>path</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.FillPath(U3DXT.iOS.Native.CoreGraphics.CGPath,U3DXT.iOS.Native.CoreGraphics.CGContext)">
            <summary>
            Fills the area enclosed by the specified path.
            <br></br>Equivalent to the native <c>fillPath:inContext:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>The path to fill.</p>
                <em>context</em>
                <p>The graphics context in which to draw the path.</p>
                <b>Discussion</b>
                <p>You must set the current fill color before calling this method. Typically you do this by calling the <c>applyFillPropertiesToContext:atZoomScale:</c> method prior to drawing. If the <em>fillColor</em> property is currently <c>null</c>, this method does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyFillPropertiesToContext:atZoomScale:</c>
                    </li>
                </ul>
            </remarks>
            <param name="path">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.InvalidatePath">
            <summary>
            Updates the path associated with the overlay renderer.
            <br></br>Equivalent to the native <c>invalidatePath</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Call this method when a change in the path information would require you to recreate the overlay’s path. This method sets the <c>path</c> property to <c>null</c> and tells the overlay renderer to redisplay its contents. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.StrokePath(U3DXT.iOS.Native.CoreGraphics.CGPath,U3DXT.iOS.Native.CoreGraphics.CGContext)">
            <summary>
            Draws a line along the specified path.
            <br></br>Equivalent to the native <c>strokePath:inContext:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>The path to draw.</p>
                <em>context</em>
                <p>The graphics context in which to draw the path.</p>
                <b>Discussion</b>
                <p>You must set the current stroke color before calling this method. Typically you do this by calling the <c>applyStrokePropertiesToContext:atZoomScale:</c> method prior to drawing. If the <c>strokeColor</c> property is currently <c>null</c>, this method does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyStrokePropertiesToContext:atZoomScale:</c>
                    </li>
                </ul>
            </remarks>
            <param name="path">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKOverlayPathRenderer and initializes the object. Inherits from <c>MKOverlayRenderer</c>. Initializes and returns the overlay renderer and associates it with the specified overlay object.
            <br></br>Equivalent to the native <c>[[MKOverlayPathRenderer alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay content on the map. This object provides the data needed to draw the overlay’s shape. The overlay renderer stores a strong reference to this object.</p>
                <b>Return Value</b>
                <p>An initialized overlay renderer object.</p>
                <b>Discussion</b>
                <p>Initially, the overlay renderer assumes that the overlay is fully opaque and that it has a content scale factor of 1.0. You can change these values as needed using the <c>alpha</c> and <c>contentScaleFactor</c> properties.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayRenderer" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKOverlayPathView">
            <summary>
            The <c>MKOverlayPathView</c> class represents a generic overlay that draws its contents using a <c>CGPathRef</c> data type. You can use this class to implement simple path-based overlay views or subclass it to define additional drawing behaviors. The default drawing behavior of this class is to apply the object’s current fill attributes, fill the path, apply the current stroke attributes, and then stroke the path.
            </summary>
            <remarks>
                <p>If you subclass, you should override the <c>createPath</c> method and use that method to build the appropriate path for the overlay. You can invalidate this path as needed and force the path to be recreated using whatever new data your subclass has obtained. </p>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>In iOS 7 and later, use the <c>MKOverlayPathRenderer</c> class to display path-based overlays instead.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_fillColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_fillColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_lineCap(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_lineCap(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_lineDashPattern(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_lineDashPattern(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_lineDashPhase(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_lineDashPhase(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_lineJoin(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_lineJoin(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_lineWidth(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_lineWidth(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_miterLimit(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_miterLimit(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_path(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_path(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_get_strokeColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_set_strokeColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_applyFillPropertiesToContext_atZoomScale_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_applyStrokePropertiesToContext_atZoomScale_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_createPath(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_fillPath_inContext_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_invalidatePath(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.UP_MKOverlayPathView_strokePath_inContext_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKOverlayPathView" /> class.
            <br></br>Equivalent to the native <c>[[MKOverlayPathView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.ClassExists">
            <summary>
            Returns whether the native MKOverlayPathView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.fillColor">
            <summary>
            The fill color to use for the path. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>fillColor</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.lineCap">
            <summary>
            The line cap style to apply to the open ends of the path. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>lineCap</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The line cap style is applied to the start and end points of any open subpaths. This property does not affect closed subpaths. The default line cap style is <c>kCGLineCapButt</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.lineDashPattern">
            <summary>
            An array of numbers indicating the dash pattern for paths. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>lineDashPattern</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The array contains one or more <c>double</c> objects that indicate the lengths (measured in points) of the line segments and gaps in the pattern. The values in the array alternate, starting with the first line segment length, followed by the first gap length, followed by the second line segment length, and so on.</p>
                <p>This property is set to <c>null</c> by default, which indicates no line dash pattern.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.lineDashPhase">
            <summary>
            The offset (in points) at which to start drawing the dash pattern.  ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>lineDashPhase</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.lineJoin">
            <summary>
            The line join style to apply to corners of the path. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>lineJoin</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default line join style is <c>kCGLineJoinMiter</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.lineWidth">
            <summary>
            The stroke width to use for the path. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>lineWidth</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value of this property is 0.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.miterLimit">
            <summary>
            The limiting value that helps avoid spikes at junctions between connected line segments.  ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>miterLimit</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The miter limit helps you avoid spikes in paths that use the <c>kCGLineJoinMiter</c> join style. If the ratio of the miter length—that is, the diagonal length of the miter join—to the line thickness exceeds the miter limit, the joint is converted to a bevel join. The default miter limit is 10, which results in the conversion of miters whose angle at the joint is less than 11 degrees. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.path">
            <summary>
            The current path to use when drawing the overlay. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>path</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Getting the value of this property causes the path to be created (using the <c>createPath</c> method) if it does not already exist. You can also assign a path object to this property explicitly.</p>
                <p>When assigning a new path object to this property, the receiver retains the path you specify. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– createPath</c>
                    </li>
                    <li>
                        <c>– invalidatePath</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayPathView.strokeColor">
            <summary>
            The stroke color to use for the path. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>strokeColor</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.ApplyFillPropertiesToContext(U3DXT.iOS.Native.CoreGraphics.CGContext,System.Single)">
            <summary>
            Applies the receiver’s current fill-related drawing properties to the specified graphics context ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>applyFillPropertiesToContext:atZoomScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>context</em>
                <p>The graphics context used to draw the view’s contents.</p>
                <em>zoomScale</em>
                <p>The current zoom scale used for drawing.</p>
                <b>Discussion</b>
                <p>This is a convenience method for applying all of the drawing properties used when filling a path. This method applies the current fill color to the specified graphics context.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– fillPath:inContext:</c>
                    </li>
                </ul>
            </remarks>
            <param name="context">
            </param>
            <param name="zoomScale">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.ApplyStrokePropertiesToContext(U3DXT.iOS.Native.CoreGraphics.CGContext,System.Single)">
            <summary>
            Applies the receiver’s current stroke-related drawing properties to the specified graphics context. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>applyStrokePropertiesToContext:atZoomScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>context</em>
                <p>The graphics context used to draw the view’s contents.</p>
                <em>zoomScale</em>
                <p>The current zoom scale used for drawing.</p>
                <b>Discussion</b>
                <p>This is a convenience method for applying all of the drawing properties used when stroking a path. This method applies the stroke color, line width, line join, line cap, miter limit, line dash phase, and line dash attributes to the specified graphics context. This method applies the scale factor in the <em>zoomScale</em> parameter to the line width and line dash pattern automatically so that lines scale appropriately.</p>
                <p>This method does not save the current graphics state before applying the new attributes. You must save it yourself and restore it later when you are done drawing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– strokePath:inContext:</c>
                    </li>
                </ul>
            </remarks>
            <param name="context">
            </param>
            <param name="zoomScale">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.CreatePath">
            <summary>
            Creates the path for the overlay. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>createPath</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default implementation of this method does nothing. Subclasses should override it and use it to create the <c>CGPathRef</c> data type to be used for drawing. After creating the path, your implementation should then assign it to the <c>path</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.FillPath(U3DXT.iOS.Native.CoreGraphics.CGPath,U3DXT.iOS.Native.CoreGraphics.CGContext)">
            <summary>
            Fills the area enclosed by the specified path.  ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>fillPath:inContext:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>The path to fill.</p>
                <em>context</em>
                <p>The graphics context in which to draw the path.</p>
                <b>Discussion</b>
                <p>You must set the current fill color before calling this method. Typically you do this by calling the <c>applyFillPropertiesToContext:atZoomScale:</c> method prior to drawing. If the <c>fillColor</c> property is currently <c>null</c>, this method does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyFillPropertiesToContext:atZoomScale:</c>
                    </li>
                </ul>
            </remarks>
            <param name="path">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.InvalidatePath">
            <summary>
            Releases the path associated with the receiver. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>invalidatePath</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You can call this method at any time where a change in the path information would require you to recreate the path. This method sets the <c>path</c> property to <c>null</c>, which causes the cached path to be released.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.StrokePath(U3DXT.iOS.Native.CoreGraphics.CGPath,U3DXT.iOS.Native.CoreGraphics.CGContext)">
            <summary>
            Draws a line along the specified path.  ( Deprecated in iOS 7.0.  Use an <c>MKOverlayPathRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>strokePath:inContext:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>The path to draw. </p>
                <em>context</em>
                <p>The graphics context in which to draw the path.</p>
                <b>Discussion</b>
                <p>You must set the current stroke color before calling this method. Typically you do this by calling the <c>applyStrokePropertiesToContext:atZoomScale:</c> method prior to drawing. If the <c>strokeColor</c> property is currently <c>null</c>, this method does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyStrokePropertiesToContext:atZoomScale:</c>
                    </li>
                </ul>
            </remarks>
            <param name="path">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKOverlayPathView and initializes the object. Inherits from <c>MKOverlayView</c>. Initializes and returns the overlay view and associates it with the specified overlay object. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>[[MKOverlayPathView alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay on the map. This object provides the data needed to draw the overlay’s shape. This object is retained by the overlay view. </p>
                <b>Return Value</b>
                <p>An initialized overlay object.</p>
                <b>Discussion</b>
                <p>Upon initialization, the frame of the overlay view is set to <c>CGRectZero</c>. The map view sets the size and position of the view at display time, and you should not change those values yourself.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayView" />
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayPathView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native MKOverlayPathView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[MKOverlayPathView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKOverlayRenderer">
            <summary>
            The <c>MKOverlayRenderer</c> class defines the basic behavior associated with all map-based overlays. An overlay renderer draws the visual representation of an overlay object—that is, an object that conforms to the <c>MKOverlay</c> protocol. This class defines the drawing infrastructure used by the map view. Subclasses are expected to override the <c>drawMapRect:zoomScale:inContext:</c> method to draw the contents of the overlay.
            </summary>
            <remarks>
                <p>The Map Kit framework provides several concrete instances of overlay renderers. Specifically, it provides renderers for each of the concrete overlay objects. You can use one of these existing renderers or define your own subclasses if you want to draw the overlay contents differently.</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	You can subclass <c>MKOverlayRenderer</c> to create overlays based on custom shapes, content, or drawing techniques. The only method subclasses are expected to override is the <c>drawMapRect:zoomScale:inContext:</c> method. However, if your class contains content that may not be ready for drawing right away, you should also override the <c>canDrawMapRect:zoomScale:</c> method and use it to report when your class is ready and able to draw.</p>
                <p class="spaceabove">	The map view may tile large overlays and distribute the rendering of each tile to separate threads. Therefore, the implementation of your <c>drawMapRect:zoomScale:inContext:</c> method must be safe to run from background threads and from multiple threads simultaneously.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_get_alpha(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_set_alpha(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_get_contentScaleFactor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_get_overlay(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_canDrawMapRect_zoomScale_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_drawMapRect_zoomScale_inContext_(System.String,System.String,System.Single,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_alloc_initWithOverlay_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_mapPointForPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_mapRectForRect_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_pointForMapPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_rectForMapRect_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_setNeedsDisplay(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_setNeedsDisplayInMapRect_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.UP_MKOverlayRenderer_setNeedsDisplayInMapRect_zoomScale_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKOverlayRenderer" /> class.
            <br></br>Equivalent to the native <c>[[MKOverlayRenderer alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.ClassExists">
            <summary>
            Returns whether the native MKOverlayRenderer class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.alpha">
            <summary>
            The amount of transparency to apply to the overlay.
            <br></br>Equivalent to the native <c>alpha</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value in this property can be in the range <c>0.0</c> to <c>1.0</c>, where <c>0.0</c> represents total transparency and <c>1.0</c> represents total opacity. The default value of this property is <c>1.0</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.contentScaleFactor">
            <summary>
            The scale factor used to draw the overlay’s content. (read-only)
            <br></br>Equivalent to the native <c>contentScaleFactor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The scale factor determines how content is mapped from the logical coordinate space (measured in points) to the device coordinate space (measured in pixels). This value is typically either <c>1.0</c> or <c>2.0</c>. Higher scale factors indicate that each point is represented by more than one pixel on the screen. For example, if the scale factor is <c>2.0</c> and the drawing rectangle size is 50 x 50 points, the size of the underlying area is 100 x 100 pixels.</p>
                <p>When drawing the content for your overlays, you can use this value to determine how best to render your content.   </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.overlay">
            <summary>
            The overlay object containing the data for drawing. (read-only)
            <br></br>Equivalent to the native <c>overlay</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The overlay object contains the coordinate at which to draw the overlay and other information that your app provides.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.CanDrawMapRect(U3DXT.iOS.Native.MapKit.MKMapRect,System.Single)">
            <summary>
            Returns a Boolean value indicating whether the overlay view is ready to draw its content.
            <br></br>Equivalent to the native <c>canDrawMapRect:zoomScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The map rectangle that needs to be updated.</p>
                <em>zoomScale</em>
                <p>The current scale factor applied to the map.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if this overlay renderer is ready to draw its contents on the map or <c>false</c> if it is not.</p>
                <b>Discussion</b>
                <p>Overlay renderers can override this method in situations where they may depend on the availability of other information to draw their contents. For example, a renderer showing traffic information might want to delay drawing until it has all of the traffic data it needs. In such a case, it can return <c>false</c> from this method to indicate that it is not ready. An overlay renderer might also return <c>false</c> if it does not draw content in the specified rectangle.  </p>
                <p>If you return <c>false</c> from this method, your application is responsible for calling the <c>setNeedsDisplayInMapRect:zoomScale:</c> method when the overlay renderer subsequently becomes ready to draw its contents.</p>
                <p>The default implementation of this method returns <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="zoomScale">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.DrawMapRect(U3DXT.iOS.Native.MapKit.MKMapRect,System.Single,U3DXT.iOS.Native.CoreGraphics.CGContext)">
            <summary>
            Draws the overlay’s contents at the specified location on the map.
            <br></br>Equivalent to the native <c>drawMapRect:zoomScale:inContext:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The map rectangle that needs to be updated. Your drawing code should avoid drawing outside of this rectangle.</p>
                <em>zoomScale</em>
                <p>The current zoom factor applied to the map content. You can use this value for configuring the stroke width of lines or other attributes that might be affected by the scale of the map’s contents.</p>
                <em>context</em>
                <p>The graphics context to use for drawing the overlay’s contents.</p>
                <b>Discussion</b>
                <p>The default implementation of this method does nothing. Subclasses are expected to override this method and use it to draw the overlay’s contents.</p>
                <p>When determining where to draw content, make your initial calculations relative to the map itself. In other words, compute the position and size of any overlay content using map points and map rectangles, convert those values to regular <c>Vector2</c> and <c>Rect</c> types using the methods of this class, and then pass the converted points to any drawing primitives.</p>
                <p>It is recommended that you use Core Graphics to draw any content for your overlays. If you choose to draw using UIKit classes and methods instead, you must push the specified graphics context onto the context stack (using the <c>UIGraphicsPushContext</c> function) before making any drawing calls. When you are done drawing, you must similarly pop the graphics context off the stack using the <c>UIGraphicsPopContext</c>. Overlay drawing typically occurs on background threads to improve performance, so do not manipulate UIKit views or other objects that can only be manipulated on the app’s main thread. </p>
                <p>To improve drawing performance, the map view may divide your overlay into multiple tiles and render each one on a separate thread. Your implementation of this method must therefore be capable of safely running from multiple threads simultaneously. In addition, you should avoid drawing the entire contents of the overlay each time this method is called. Instead, always take the <em>mapRect</em> parameter into consideration and avoid drawing content outside that rectangle. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="zoomScale">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKOverlayRenderer and initializes the object. Initializes and returns the overlay renderer and associates it with the specified overlay object.
            <br></br>Equivalent to the native <c>[[MKOverlayRenderer alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay content on the map. This object provides the data needed to draw the overlay’s shape. The overlay renderer stores a strong reference to this object.</p>
                <b>Return Value</b>
                <p>An initialized overlay renderer object.</p>
                <b>Discussion</b>
                <p>Initially, the overlay renderer assumes that the overlay is fully opaque and that it has a content scale factor of 1.0. You can change these values as needed using the <c>alpha</c> and <c>contentScaleFactor</c> properties.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.MapPoint(UnityEngine.Vector2)">
            <summary>
            Returns the point on the map that corresponds to the specified point in the overlay renderer’s drawing area.
            <br></br>Equivalent to the native <c>mapPointForPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>The point in the overlay’s drawing area that you want to convert.</p>
                <b>Return Value</b>
                <p>The point on the two-dimensional map projection corresponding to the specified point.</p>
                <b>Discussion</b>
                <p>You may call this method safely from your view’s <c>drawMapRect:zoomScale:inContext:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.MapRect(UnityEngine.Rect)">
            <summary>
            Returns the rectangle on the map that corresponds to the specified rectangle in the overlay renderer’s drawing area.
            <br></br>Equivalent to the native <c>mapRectForRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle in the overlay’s drawing area that you want to convert.</p>
                <b>Return Value</b>
                <p>The rectangle on the two-dimensional map projection corresponding to the specified rectangle.</p>
                <b>Discussion</b>
                <p>You may call this method safely from your view’s <c>drawMapRect:zoomScale:inContext:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.Point(U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Returns the point in the overlay renderer’s drawing area corresponding to the specified point on the map.
            <br></br>Equivalent to the native <c>pointForMapPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapPoint</em>
                <p>A point on the two-dimensional map projection. If you have a coordinate value (latitude and longitude), you can use the <c>MKMapPointForCoordinate</c> function to convert that coordinate to a map point. </p>
                <b>Return Value</b>
                <p>The point in the overlay’s drawing area that corresponds to the map point.</p>
                <b>Discussion</b>
                <p>You may call this method safely from your view’s <c>drawMapRect:zoomScale:inContext:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapPoint">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.Rect(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the rectangle in the overlay renderer’s drawing area corresponding to the specified rectangle on the map.
            <br></br>Equivalent to the native <c>rectForMapRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>A rectangle on the two-dimensional map projection.</p>
                <b>Return Value</b>
                <p>The rectangle in the overlay’s drawing area that corresponds to the map rectangle.</p>
                <b>Discussion</b>
                <p>You may call this method safely from your view’s <c>drawMapRect:zoomScale:inContext:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.SetNeedsDisplay">
            <summary>
            Invalidates the entire contents of the overlay for all zoom scales.
            <br></br>Equivalent to the native <c>setNeedsDisplay</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This method causes the entire contents of the overlay to be redrawn during the next update cycle. This method invalidates the overlay regardless of the current zoom scale associated with the map.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.SetNeedsDisplayInMapRect(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Invalidates the specified portion of the overlay at all zoom scales
            <br></br>Equivalent to the native <c>setNeedsDisplayInMapRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The portion of the overlay to update. Specify this value using a map coordinates.</p>
                <b>Discussion</b>
                <p>Marking a rectangle as invalid causes that portion of the overlay to be redrawn during the next update cycle. This method invalidates the overlay regardless of the current zoom scale associated with the map.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayRenderer.SetNeedsDisplayInMapRect(U3DXT.iOS.Native.MapKit.MKMapRect,System.Single)">
            <summary>
            Invalidates the specified portion of the overlay but only at the specified zoom scale.
            <br></br>Equivalent to the native <c>setNeedsDisplayInMapRect:zoomScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The portion of the overlay to update. Specify this value using a map coordinates.</p>
                <em>zoomScale</em>
                <p>The zoom scale for which you want to invalidate the overlay.</p>
                <b>Discussion</b>
                <p>Marking a rectangle as invalid causes that portion of the overlay to be redrawn during the next update cycle. This method invalidates the overlay only at the specified zoom scale. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="zoomScale">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKOverlayView">
            <summary>
            The <c>MKOverlayView</c> class defines the basic behavior associated with all overlay views. An overlay view provides the visual representation of an overlay object—that is, an object that conforms to the <c>MKOverlay</c> protocol. This class defines the drawing infrastructure used by the map view but does not do any actual drawing. Subclasses are expected to override the <c>drawMapRect:zoomScale:inContext:</c> method in order to draw the contents of the overlay view.
            </summary>
            <remarks>
                <p>The Map Kit framework provides several concrete instances of overlay views. Specifically, it provides overlay views for each of the concrete overlay objects. You can use one of these existing overlay views or define your own subclass if you want to draw the overlay contents differently.</p>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>In iOS 7 and later, use the <c>MKOverlayRenderer</c> class to display overlays instead.</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	You can subclass <c>MKOverlayView</c> to create overlays based on custom shapes and content. The only method subclasses are expected to override is the <c>drawMapRect:zoomScale:inContext:</c> method. However, if your class contains content that may not be ready for drawing right away, you should also override the <c>canDrawMapRect:zoomScale:</c> method and use it to report when your class is ready and able to draw.</p>
                <p class="spaceabove">	The implementation of your <c>drawMapRect:zoomScale:inContext:</c> method must be safe to run from multiple threads simultaneously. To improve performance, the map view may tile overlays that are large enough and distribute the rendering of each tile to separate threads. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_get_overlay(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_canDrawMapRect_zoomScale_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_drawMapRect_zoomScale_inContext_(System.String,System.String,System.Single,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_alloc_initWithOverlay_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_mapPointForPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_mapRectForRect_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_pointForMapPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_rectForMapRect_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_setNeedsDisplayInMapRect_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_setNeedsDisplayInMapRect_zoomScale_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.UP_MKOverlayView_MKRoadWidthAtZoomScale(System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKOverlayView" /> class.
            <br></br>Equivalent to the native <c>[[MKOverlayView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayView.ClassExists">
            <summary>
            Returns whether the native MKOverlayView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.MKRoadWidthAtZoomScale(System.Single)">
            <summary>
            Returns the width (in screen points) of roads on a map at the specified zoom level.
            <br></br>Equivalent to the native <c>MKRoadWidthAtZoomScale</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>zoomScale</em>
                <p>The scale factor currently applied to the map view.</p>
                <b>Return Value</b>
                <p>The width of roads, measured in screen points. You can use the returned value to set the width of lines in drawing code that traces the path of a road. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="zoomScale">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKOverlayView.overlay">
            <summary>
            The overlay object containing the data for drawing. (read-only) ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>overlay</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.CanDrawMapRect(U3DXT.iOS.Native.MapKit.MKMapRect,System.Single)">
            <summary>
            Returns a Boolean value indicating whether the overlay view is ready to draw its content. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>canDrawMapRect:zoomScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The map rectangle that needs to be updated.</p>
                <em>zoomScale</em>
                <p>The current scale factor applied to the map.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if this view is ready to draw its contents or <c>false</c> if it is not.</p>
                <b>Discussion</b>
                <p>Overlay views can override this method in situations where they may depend on the availability of other information to draw their contents. For example, an overlay view showing traffic information might want to delay drawing until it has all of the traffic data it needs. In such a case, it can return <c>false</c> from this method to indicate that it is not ready. </p>
                <p>If you return <c>false</c> from this method, your application is responsible for calling the <c>setNeedsDisplayInMapRect:zoomScale:</c> method when the overlay view subsequently becomes ready to draw its contents.</p>
                <p>The default implementation of this method returns <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="zoomScale">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.DrawMapRect(U3DXT.iOS.Native.MapKit.MKMapRect,System.Single,U3DXT.iOS.Native.CoreGraphics.CGContext)">
            <summary>
            Draws the contents of the overlay view. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>drawMapRect:zoomScale:inContext:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The map rectangle that needs to be updated. You can use this rectangle to limit drawing to only the portion of the view that changed.  </p>
                <em>zoomScale</em>
                <p>The current scale factor applied to the map content. You can use this value for configuring the stroke width of lines or other attributes that might be affected by the scale of the view’s content. </p>
                <em>context</em>
                <p>The graphics context to use for drawing the view’s content.</p>
                <b>Discussion</b>
                <p>The default implementation of this method does nothing. Subclasses are expected to override this method (instead of the <c>drawRect:</c> method) and use it to draw the contents of the view. </p>
                <p>In your drawing code, you should specify the position of any rendered content relative to the map itself and not relative to the view’s bounds or frame. In other words, compute the position and size of any overlay content using map points and map rectangles, convert those values to <c>Vector2</c> and <c>Rect</c> types (using the methods of this class), and then use the converted points to build paths or specify the rendering location for items. </p>
                <p>You should also not make assumptions that the view’s frame matches the bounding rectangle of the overlay. The view’s frame is actually bigger than the bounding rectangle to allow you to draw lines for things like roads that might be located directly on the border of that rectangle. For some types of content, such as gradients, this also means that you might need to apply a clipping rectangle to <em>context</em> to ensure drawing is contained to the correct area.  </p>
                <p>It is recommended that you use Core Graphics to draw any content for your overlays. If you choose to use UIKit classes and methods for drawing instead, you must push the specified graphics context onto the context stack (using the <c>UIGraphicsPushContext</c> function) before making any drawing calls. When you are done drawing, you must similarly pop the graphics context off the stack using the <c>UIGraphicsPopContext</c>. During drawing, you may draw content normally but should avoid manipulating views and other classes that are safe to use only from the application’s main thread.</p>
                <p>To improve drawing performance, the map view may tile overlays that become large enough and render the tiles from separate threads. Your implementation of this method must therefore be capable of safely running from multiple threads simultaneously. In addition, you should avoid drawing the entire contents of the overlay each time this method is called. Instead, your implementation should always take the <em>mapRect</em> parameter into consideration and avoid drawing content outside that rectangle. Failure to do so could lead to performance problems.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– canDrawMapRect:zoomScale:</c>
                    </li>
                    <li>
                        <c>– pointForMapPoint:</c>
                    </li>
                    <li>
                        <c>– rectForMapRect:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="zoomScale">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKOverlayView and initializes the object. Initializes and returns the overlay view and associates it with the specified overlay object. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>[[MKOverlayView alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay on the map. This object provides the data needed to draw the overlay’s shape. This object is retained by the overlay view. </p>
                <b>Return Value</b>
                <p>An initialized overlay object.</p>
                <b>Discussion</b>
                <p>Upon initialization, the frame of the overlay view is set to <c>CGRectZero</c>. The map view sets the size and position of the view at display time, and you should not change those values yourself.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.MapPoint(UnityEngine.Vector2)">
            <summary>
            Returns the map point that corresponds to the specified point in the overlay view.  ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>mapPointForPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>The point in the view’s coordinate system that you want to convert. </p>
                <b>Return Value</b>
                <p>The point on the two-dimensional map projection corresponding to the specified point.</p>
                <b>Special Considerations</b>
                <p>Because the bounds and frame rectangles of an overlay view do not change after the view has been created, you may call this method from multiple threads simultaneously. Therefore, you may call this method safely from your view’s <c>drawMapRect:zoomScale:inContext:</c> method. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– pointForMapPoint:</c>
                    </li>
                </ul>
            </remarks>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.MapRect(UnityEngine.Rect)">
            <summary>
            Returns the map rectangle that corresponds to the rectangle in the overlay view’s coordinate system. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>mapRectForRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle specified in the receiver’s coordinate system.</p>
                <b>Return Value</b>
                <p>The rectangle on the two-dimensional map project that corresponds to the specified view rectangle.</p>
                <b>Special Considerations</b>
                <p>Because the bounds and frame rectangles of an overlay view do not change after the view has been created, you may call this method from multiple threads simultaneously. Therefore, you may call this method safely from your view’s <c>drawMapRect:zoomScale:inContext:</c> method. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– rectForMapRect:</c>
                    </li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.Point(U3DXT.iOS.Native.MapKit.MKMapPoint)">
            <summary>
            Returns the point in the overlay view that corresponds to specified point on the map. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>pointForMapPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapPoint</em>
                <p>A point on the two-dimensional map projection. If you have a coordinate value (latitude and longitude), you can use the <c>MKMapPointForCoordinate</c> function to convert that coordinate to a map point. </p>
                <b>Return Value</b>
                <p>The point in the receiver’s coordinate system that corresponds to the map point.</p>
                <b>Special Considerations</b>
                <p>Because the bounds and frame rectangles of an overlay view do not change after the view has been created, you may call this method from multiple threads simultaneously. Therefore, you may call this method safely from your view’s <c>drawMapRect:zoomScale:inContext:</c> method. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– mapPointForPoint:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapPoint">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.Rect(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Returns the rectangle in the overlay view that corresponds to the specified rectangle on the map. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>rectForMapRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>A rectangle on the two-dimensional map projection.</p>
                <b>Return Value</b>
                <p>The rectangle specified in the receiver’s coordinate system.</p>
                <b>Special Considerations</b>
                <p>Because the bounds and frame rectangles of an overlay view do not change after the view has been created, you may call this method from multiple threads simultaneously. Therefore, you may call this method safely from your view’s <c>drawMapRect:zoomScale:inContext:</c> method. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– mapRectForRect:</c>
                    </li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.SetNeedsDisplayInMapRect(U3DXT.iOS.Native.MapKit.MKMapRect)">
            <summary>
            Invalidates the view in the given map rectangle at all zoom scales. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>setNeedsDisplayInMapRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The portion of the overlay that needs to be updated. This value is specified using a map rectangle and not view coordinates. You can convert from a view rectangle to a map rectangle using the <c>mapRectForRect:</c> method.</p>
                <b>Discussion</b>
                <p>Marking a rectangle as invalid causes that portion of the view to be redrawn during the next update cycle. This method invalidates the overlay regardless of the current zoom scale associated with the map.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.SetNeedsDisplayInMapRect(U3DXT.iOS.Native.MapKit.MKMapRect,System.Single)">
            <summary>
            Invalidates the view in the given map rectangle but only at the specified zoom scale. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>setNeedsDisplayInMapRect:zoomScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapRect</em>
                <p>The portion of the overlay that needs to be updated. This value is specified using a map rectangle and not view coordinates. You can convert from a view rectangle to a map rectangle using the <c>mapRectForRect:</c> method.</p>
                <em>zoomScale</em>
                <p>The zoom scale for which you want to invalidate the overlay.</p>
                <b>Discussion</b>
                <p>Marking a rectangle as invalid causes that portion of the view to be redrawn during the next update cycle. This method invalidates the overlay only when it is drawn at the specified zoom scale.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="mapRect">
            </param>
            <param name="zoomScale">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKOverlayView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native MKOverlayView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[MKOverlayView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPinAnnotationColor">
            <summary>
            The supported colors for pin annotations.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKPinAnnotationColor.Green">
            <summary>
                <p>The head of the pin is green. Green pins indicate starting points on the map.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKPinAnnotationColorGreen</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKPinAnnotationColor.Purple">
            <summary>
                <p>The head of the pin is purple. Purple pins indicate user-specified points on the map.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKPinAnnotationColorPurple</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKPinAnnotationColor.Red">
            <summary>
                <p>The head of the pin is red. Red pins indicate destination points on the map.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKPinAnnotationColorRed</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPinAnnotationView">
            <summary>
            The <c>MKPinAnnotationView</c> class provides a concrete annotation view that displays a pin icon like the ones found in the Maps application. Using this class, you can configure the type of pin to drop and whether you want the pin to be animated into place.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.UP_MKPinAnnotationView_get_animatesDrop(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.UP_MKPinAnnotationView_set_animatesDrop(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.UP_MKPinAnnotationView_get_pinColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.UP_MKPinAnnotationView_set_pinColor(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPinAnnotationView" /> class.
            <br></br>Equivalent to the native <c>[[MKPinAnnotationView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.ClassExists">
            <summary>
            Returns whether the native MKPinAnnotationView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.animatesDrop">
            <summary>
            A Boolean value indicating whether the annotation view is animated onto the screen.
            <br></br>Equivalent to the native <c>animatesDrop</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is <c>true</c>, the map view animates the appearance of pin annotation views by making them appear to drop onto the map at the target point. This animation occurs whenever the view transitions from offscreen to onscreen.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.pinColor">
            <summary>
            The color of the pin head.
            <br></br>Equivalent to the native <c>pinColor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The Maps application uses different pin colors for different types of map annotations. Your own map annotation should use the available pin colors in the same way. For a description of when to use each type of pin, see the constants of <c>“MKPinAnnotationColor”</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.#ctor(U3DXT.iOS.Native.MapKit.MKAnnotation,System.String)">
            <summary>
            Creates an instance of the native MKPinAnnotationView and initializes the object. Inherits from <c>MKAnnotationView</c>. Initializes and returns a new annotation view.
            <br></br>Equivalent to the native <c>[[MKPinAnnotationView alloc] initWithAnnotation:reuseIdentifier:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>annotation</em>
                <p>The annotation object to associate with the new view.</p>
                <em>reuseIdentifier</em>
                <p>If you plan to reuse the annotation view for similar types of annotations, pass a string to identify it. Although you can pass <c>null</c> if you do not intend to reuse the view, reusing annotation views is generally recommended.</p>
                <b>Return Value</b>
                <p>The initialized annotation view or <c>null</c> if there was a problem initializing the object.</p>
                <b>Discussion</b>
                <p>The reuse identifier provides a way for you to improve performance by recycling annotation views as they are scrolled on and off of the map. As views are no longer needed, they are moved to a reuse queue by the map view. When a new annotation becomes visible, your application can request a view for that annotation by passing the appropriate reuse identifier string to the <c>dequeueReusableAnnotationViewWithIdentifier:</c> method of <c>MKMapView</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="annotation">
            </param>
            <param name="reuseIdentifier">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKAnnotationView" />
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPinAnnotationView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native MKPinAnnotationView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[MKPinAnnotationView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPlacemark">
            <summary>
            A <c>MKPlacemark</c> object stores placemark data for a given latitude and longitude. Placemark data includes information such as the country, state, city, and street address associated with the specified coordinate. You can initialize a placemark using the <c>initWithPlacemark:</c> inherited method or the <c>initWithCoordinate:addressDictionary:</c> method specifying a coordinate and address dictionary.
            </summary>
            <remarks>
                <p>A placemark is also an annotation and conforms to the <c>MKAnnotation</c> protocol, whose properties and methods include the placemark coordinate and other information. Because they are annotations, you can add them directly to the map view. </p>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPlacemark.UP_MKPlacemark_get_countryCode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPlacemark.UP_MKPlacemark_alloc_initWithCoordinate_addressDictionary_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPlacemark.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPlacemark.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPlacemark.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPlacemark" /> class.
            <br></br>Equivalent to the native <c>[[MKPlacemark alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPlacemark.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPlacemark.ClassExists">
            <summary>
            Returns whether the native MKPlacemark class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPlacemark.countryCode">
            <summary>
            The abbreviated country name. (read-only)
            <br></br>Equivalent to the native <c>countryCode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This string is the standard abbreviation used to refer to the country. For example, if the placemark location was Apple’s headquarters, the value for this property would be the string “US”. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPlacemark.#ctor(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            Creates an instance of the native MKPlacemark and initializes the object. Initializes and returns a placemark object using the specified coordinate and Address Book dictionary.
            <br></br>Equivalent to the native <c>[[MKPlacemark alloc] initWithCoordinate:addressDictionary:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>The map coordinate to associate with the placemark.</p>
                <em>addressDictionary</em>
                <p>A dictionary containing keys and values from an Address Book record. For a list of strings that you can use for the keys of this dictionary, see the “Address Property” constants in <em>ABPerson Reference</em>. All of the keys in should be at the top level of the dictionary. </p>
                <b>Return Value</b>
                <p>An initialized <c>MKPlacemark</c> object. </p>
                <b>Discussion</b>
                <p>You can create placemark objects manually for entities for which you already have address information, such as contacts in the Address Book. Creating a placemark object explicitly avoids the need to query the reverse geocoder object for the same information.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
            <param name="addressDictionary">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPlacemark.#ctor(U3DXT.iOS.Native.CoreLocation.CLPlacemark)">
            <summary>
            Creates an instance of the native MKPlacemark and initializes the object. Inherits from <c>CLPlacemark</c>. Initializes and returns a placemark object from another placemark object.
            <br></br>Equivalent to the native <c>[[MKPlacemark alloc] initWithPlacemark:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>placemark</em>
                <p>The placemark object to use as the source of the data for the new object.</p>
                <b>Return Value</b>
                <p>A new placemark object.</p>
                <b>Discussion</b>
                <p>You can use this method to transfer information from one placemark object to another placemark object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="placemark">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.CoreLocation.CLPlacemark" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPointAnnotation">
            <summary>
            The <c>MKPointAnnotation</c> class defines a concrete annotation object located at a specified point. You can use this class, rather than define your own, in situations where all you want to do is associate a point on the map with a title.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPointAnnotation.UP_MKPointAnnotation_get_coordinate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPointAnnotation.UP_MKPointAnnotation_set_coordinate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPointAnnotation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPointAnnotation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPointAnnotation.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPointAnnotation" /> class.
            <br></br>Equivalent to the native <c>[[MKPointAnnotation alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPointAnnotation.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPointAnnotation.ClassExists">
            <summary>
            Returns whether the native MKPointAnnotation class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPointAnnotation.coordinate">
            <summary>
            The coordinate point of the annotation, specified as a latitude and longitude.
            <br></br>Equivalent to the native <c>coordinate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPolygon">
            <summary>
            The <c>MKPolygon</c> class represents a shape consisting of one or more points that define a closed polygon. The points are connected end-to-end in the order they are provided. The first and last points are connected to each other to create the closed shape.
            </summary>
            <remarks>
                <p>When creating a polygon, you can mask out portions of the polygon by specifying one or more interior polygons. For the polygons you specify, this class uses the even-odd fill rule to determine the final occupied area. When applied to overlapping polygons, this rule can cause specific regions to be masked out (and thereby removed) from the total occupied area. For more information about how fill rules are applied to paths, see  “Paths”  in <em>Quartz 2D Programming Guide</em>. </p>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.UP_MKPolygon_polygonWithCoordinates_count_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.UP_MKPolygon_polygonWithCoordinates_count_interiorPolygons_(System.String,System.UInt32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.UP_MKPolygon_polygonWithPoints_count_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.UP_MKPolygon_polygonWithPoints_count_interiorPolygons_(System.String,System.UInt32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.UP_MKPolygon_get_interiorPolygons(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPolygon" /> class.
            <br></br>Equivalent to the native <c>[[MKPolygon alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolygon.ClassExists">
            <summary>
            Returns whether the native MKPolygon class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.Polygon(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.UInt32)">
            <summary>
            Creates and returns an <c>MKPolygon</c> object from the specified set of coordinates.
            <br></br>Equivalent to the native <c>polygonWithCoordinates:count:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coords</em>
                <p>The array of coordinates defining the shape. The data in this array is copied to the new object. </p>
                <em>count</em>
                <p>The number of items in the <em>coords</em> array.</p>
                <b>Return Value</b>
                <p>A new polygon object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="coords">
            </param>
            <param name="count">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.Polygon(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.UInt32,System.Object[])">
            <summary>
            Creates and returns an <c>MKPolygon</c> object from the specified set of coordinates and interior polygons.
            <br></br>Equivalent to the native <c>polygonWithCoordinates:count:interiorPolygons:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coords</em>
                <p>The array of coordinates defining the shape. The data in this array is copied to the new object. </p>
                <em>count</em>
                <p>The number of items in the <em>coords</em> array.</p>
                <em>interiorPolygons</em>
                <p>An array of <c>MKPolygon</c> objects that define one or more cutout regions for the receiver’s polygon. </p>
                <b>Return Value</b>
                <p>A new polygon object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="coords">
            </param>
            <param name="count">
            </param>
            <param name="interiorPolygons">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.Polygon(U3DXT.iOS.Native.MapKit.MKMapPoint,System.UInt32)">
            <summary>
            Creates and returns an <c>MKPolygon</c> object from the specified set of map points.
            <br></br>Equivalent to the native <c>polygonWithPoints:count:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>points</em>
                <p>The array of map points defining the shape. The data in this array is copied to the new object. </p>
                <em>count</em>
                <p>The number of items in the <em>points</em> array.</p>
                <b>Return Value</b>
                <p>A new polygon object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="points">
            </param>
            <param name="count">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygon.Polygon(U3DXT.iOS.Native.MapKit.MKMapPoint,System.UInt32,System.Object[])">
            <summary>
            Creates and returns an <c>MKPolygon</c> object from the specified set of map points and interior polygons.
            <br></br>Equivalent to the native <c>polygonWithPoints:count:interiorPolygons:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>points</em>
                <p>The array of map points defining the shape. The data in this array is copied to the new object. </p>
                <em>count</em>
                <p>The number of items in the <em>points</em> array.</p>
                <em>interiorPolygons</em>
                <p>An array of <c>MKPolygon</c> objects that define one or more cutout regions for the receiver’s polygon. </p>
                <b>Return Value</b>
                <p>A new polygon object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="points">
            </param>
            <param name="count">
            </param>
            <param name="interiorPolygons">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolygon.interiorPolygons">
            <summary>
            The array of polygons nested inside the receiver. (read-only)
            <br></br>Equivalent to the native <c>interiorPolygons</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When a polygon is rendered on screen, the area occupied by any interior polygons is masked out and not considered part of the polygon.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPolygonRenderer">
            <summary>
            The <c>MKPolygonRenderer</c> class provides the visual representation for an <c>MKPolygon</c> overlay object. This renderer fills and strokes the polygon represented by first filling the shape and then stroking its outline. You can change the color and other drawing attributes of the polygon by modifying the properties inherited from the parent class. You typically use this class as is and do not subclass it.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.UP_MKPolygonRenderer_get_polygon(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.UP_MKPolygonRenderer_alloc_initWithPolygon_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPolygonRenderer" /> class.
            <br></br>Equivalent to the native <c>[[MKPolygonRenderer alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.ClassExists">
            <summary>
            Returns whether the native MKPolygonRenderer class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.polygon">
            <summary>
            The polygon object that contains the information used to draw the overlay’s contents. (read-only)
            <br></br>Equivalent to the native <c>polygon</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKPolygon)">
            <summary>
            Creates an instance of the native MKPolygonRenderer and initializes the object. Initializes and returns a new renderer that handles drawing for the specified polygon overlay object.
            <br></br>Equivalent to the native <c>[[MKPolygonRenderer alloc] initWithPolygon:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>polygon</em>
                <p>The polygon overlay containing information about the area to be drawn. This object must have at least three points defining the polygon to draw. This parameter must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized polygon renderer object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="polygon">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKPolygonRenderer and initializes the object. Inherits from <c>MKOverlayRenderer</c>. Initializes and returns the overlay renderer and associates it with the specified overlay object.
            <br></br>Equivalent to the native <c>[[MKPolygonRenderer alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay content on the map. This object provides the data needed to draw the overlay’s shape. The overlay renderer stores a strong reference to this object.</p>
                <b>Return Value</b>
                <p>An initialized overlay renderer object.</p>
                <b>Discussion</b>
                <p>Initially, the overlay renderer assumes that the overlay is fully opaque and that it has a content scale factor of 1.0. You can change these values as needed using the <c>alpha</c> and <c>contentScaleFactor</c> properties.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayRenderer" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPolygonView">
            <summary>
            The <c>MKPolygonView</c> class provides the visual representation for an <c>MKPolygon</c> annotation object. This view fills and strokes the area represented by the annotation. You can change the color and other drawing attributes of the polygon by modifying the properties inherited from the <c>MKOverlayPathView</c> class. This class is typically used as is and not subclassed.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>In iOS 7 and later, use the <c>MKPolygonRenderer</c> class to display polygon overlays instead.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.UP_MKPolygonView_get_polygon(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.UP_MKPolygonView_alloc_initWithPolygon_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPolygonView" /> class.
            <br></br>Equivalent to the native <c>[[MKPolygonView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolygonView.ClassExists">
            <summary>
            Returns whether the native MKPolygonView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolygonView.polygon">
            <summary>
            The polygon overlay object that contains the information used to draw the overlay. (read-only) ( Deprecated in iOS 7.0.  Use an <c>MKPolygonRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>polygon</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.#ctor(U3DXT.iOS.Native.MapKit.MKPolygon)">
            <summary>
            Creates an instance of the native MKPolygonView and initializes the object. Initializes and returns a new overlay view using the specified polygon overlay object. ( Deprecated in iOS 7.0.  Use an <c>MKPolygonRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>[[MKPolygonView alloc] initWithPolygon:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>polygon</em>
                <p>The polygon overlay containing the information about the area to be drawn. This object must have at least three points defining the polygon in order for this view to draw the corresponding path.  </p>
                <b>Return Value</b>
                <p>A new polygon overlay view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="polygon">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKPolygonView and initializes the object. Inherits from <c>MKOverlayView</c>. Initializes and returns the overlay view and associates it with the specified overlay object. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>[[MKPolygonView alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay on the map. This object provides the data needed to draw the overlay’s shape. This object is retained by the overlay view. </p>
                <b>Return Value</b>
                <p>An initialized overlay object.</p>
                <b>Discussion</b>
                <p>Upon initialization, the frame of the overlay view is set to <c>CGRectZero</c>. The map view sets the size and position of the view at display time, and you should not change those values yourself.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayView" />
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolygonView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native MKPolygonView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[MKPolygonView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPolyline">
            <summary>
            The <c>MKPolyline</c> class represents a shape consisting of one or more points that define connecting line segments. The points are connected end-to-end in the order they are provided. The first and last points are not connected to each other.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolyline.UP_MKPolyline_polylineWithCoordinates_count_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolyline.UP_MKPolyline_polylineWithPoints_count_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolyline.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolyline.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolyline.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPolyline" /> class.
            <br></br>Equivalent to the native <c>[[MKPolyline alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolyline.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolyline.ClassExists">
            <summary>
            Returns whether the native MKPolyline class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolyline.Polyline(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.UInt32)">
            <summary>
            Creates and returns an <c>MKPolyline</c> object from the specified set of coordinates.
            <br></br>Equivalent to the native <c>polylineWithCoordinates:count:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coords</em>
                <p>The array of coordinates defining the shape. The data in this array is copied to the new object. </p>
                <em>count</em>
                <p>The number of items in the <em>coords</em> array.</p>
                <b>Return Value</b>
                <p>A new polyline object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="coords">
            </param>
            <param name="count">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolyline.Polyline(U3DXT.iOS.Native.MapKit.MKMapPoint,System.UInt32)">
            <summary>
            Creates and returns an <c>MKPolyline</c> object from the specified set of map points.
            <br></br>Equivalent to the native <c>polylineWithPoints:count:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>points</em>
                <p>The array of map points defining the shape. The data in this array is copied to the new object. </p>
                <em>count</em>
                <p>The number of items in the <em>points</em> array.</p>
                <b>Return Value</b>
                <p>A new polyline object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="points">
            </param>
            <param name="count">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPolylineRenderer">
            <summary>
            The <c>MKPolylineRenderer</c> class provides the visual representation for an <c>MKPolyline</c> overlay object. This renderer strokes the line only; it does not fill it. You can change the color and other drawing attributes of the polygon by modifying the properties inherited from the parent class. You typically use this class as is and do not subclass it.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.UP_MKPolylineRenderer_get_polyline(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.UP_MKPolylineRenderer_alloc_initWithPolyline_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPolylineRenderer" /> class.
            <br></br>Equivalent to the native <c>[[MKPolylineRenderer alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.ClassExists">
            <summary>
            Returns whether the native MKPolylineRenderer class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.polyline">
            <summary>
            The polyline overlay object that contains the information used to draw the overlay. (read-only)
            <br></br>Equivalent to the native <c>polyline</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKPolyline)">
            <summary>
            Creates an instance of the native MKPolylineRenderer and initializes the object. Initializes and returns a new overlay view using the specified polyline overlay object
            <br></br>Equivalent to the native <c>[[MKPolylineRenderer alloc] initWithPolyline:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>polyline</em>
                <p>The polyline overlay containing information about the area to be drawn. This object must have at least two points defining the line segment to draw. This parameter must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized polyline renderer object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="polyline">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKPolylineRenderer and initializes the object. Inherits from <c>MKOverlayRenderer</c>. Initializes and returns the overlay renderer and associates it with the specified overlay object.
            <br></br>Equivalent to the native <c>[[MKPolylineRenderer alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay content on the map. This object provides the data needed to draw the overlay’s shape. The overlay renderer stores a strong reference to this object.</p>
                <b>Return Value</b>
                <p>An initialized overlay renderer object.</p>
                <b>Discussion</b>
                <p>Initially, the overlay renderer assumes that the overlay is fully opaque and that it has a content scale factor of 1.0. You can change these values as needed using the <c>alpha</c> and <c>contentScaleFactor</c> properties.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayRenderer" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKPolylineView">
            <summary>
            The <c>MKPolylineView</c> class provides the visual representation for an <c>MKPolyline</c> annotation object. This view strokes the path represented by the annotation. (This class does not fill the area enclosed by the path.) You can change the color and other drawing attributes of the path by modifying the properties inherited from the <c>MKOverlayPathView</c> class. This class is typically used as is and not subclassed.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>In iOS 7 and later, use the <c>MKPolylineRenderer</c> class to display polyline overlays instead.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.UP_MKPolylineView_get_polyline(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.UP_MKPolylineView_alloc_initWithPolyline_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKPolylineView" /> class.
            <br></br>Equivalent to the native <c>[[MKPolylineView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolylineView.ClassExists">
            <summary>
            Returns whether the native MKPolylineView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKPolylineView.polyline">
            <summary>
            The polyline overlay object that contains the information used to draw the overlay. (read-only) ( Deprecated in iOS 7.0.  Use an <c>MKPolylineRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>polyline</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.#ctor(U3DXT.iOS.Native.MapKit.MKPolyline)">
            <summary>
            Creates an instance of the native MKPolylineView and initializes the object. Initializes and returns a new overlay view using the specified polyline overlay object ( Deprecated in iOS 7.0.  Use an <c>MKPolylineRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>[[MKPolylineView alloc] initWithPolyline:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>polyline</em>
                <p>The polyline overlay object containing the information about the path to be stroked. This object must have at least two points defined in order for this view to draw the corresponding path.</p>
                <b>Return Value</b>
                <p>A new polyline overlay view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="polyline">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKPolylineView and initializes the object. Inherits from <c>MKOverlayView</c>. Initializes and returns the overlay view and associates it with the specified overlay object. ( Deprecated in iOS 7.0.  Use an <c>MKOverlayRenderer</c> object instead.)
            <br></br>Equivalent to the native <c>[[MKPolylineView alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay on the map. This object provides the data needed to draw the overlay’s shape. This object is retained by the overlay view. </p>
                <b>Return Value</b>
                <p>An initialized overlay object.</p>
                <b>Discussion</b>
                <p>Upon initialization, the frame of the overlay view is set to <c>CGRectZero</c>. The map view sets the size and position of the view at display time, and you should not change those values yourself.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayView" />
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKPolylineView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native MKPolylineView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[MKPolylineView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKReverseGeocoder">
            <summary>
            The <c>MKReverseGeocoder</c> class provides services for converting a map coordinate (specified as a latitude/longitude pair) into information about that coordinate, such as the country, city, or street. A reverse geocoder object is a single-shot object that works with a network-based map service to look up placemark information for its specified coordinate value.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>The Google terms of service require that the reverse geocoding service be used in conjunction with a Google map; take this into account when designing your application's user interface.</p>
                <p>Each Map Kit application has a limited amount of reverse geocoding capacity, so it is to your advantage to use reverse geocode requests sparingly. Here are some rules of thumb for using this class most effectively:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Send at most one reverse-geocoding request for any one user action.</p>
                    </li>
                    <li class="li">
                        <p>If the user performs multiple actions that involve reverse-geocoding the same location, reuse the results from the initial reverse-geocoding request instead of starting individual requests for each action.</p>
                    </li>
                    <li class="li">
                        <p>When you want to update the location automatically (such as when the user is moving), reissue the reverse-geocoding request only when the user's location has moved a significant distance and after a reasonable amount of time has passed. For example, in a typical situation, you should not send more than one reverse-geocode request per minute.</p>
                    </li>
                    <li class="li">
                        <p>Do not start a reverse-geocoding request at a time when the user will not see the results immediately. For example, do not start a request if your application recently resigned the active state (possibly because of an interruption such as a phone call) and is waiting to become active again.</p>
                    </li>
                </ul>
                <p>An iOS-based device must have access to the network in order for the reverse geocoder object to return valid information. The reverse geocoder returns information through its associated delegate object, which is an object that conforms to the <c>MKReverseGeocoderDelegate</c> protocol. If the reverse geocoder is unable to retrieve the requested information, it similarly reports the error to its delegate object. For more information on this protocol, see <em>MKReverseGeocoderDelegate Protocol Reference</em>. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.UP_MKReverseGeocoder_get_coordinate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.UP_MKReverseGeocoder_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.UP_MKReverseGeocoder_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.UP_MKReverseGeocoder_get_placemark(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.UP_MKReverseGeocoder_get_querying(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.UP_MKReverseGeocoder_cancel(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.UP_MKReverseGeocoder_alloc_initWithCoordinate_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.UP_MKReverseGeocoder_start(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKReverseGeocoder" /> class.
            <br></br>Equivalent to the native <c>[[MKReverseGeocoder alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.ClassExists">
            <summary>
            Returns whether the native MKReverseGeocoder class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.coordinate">
            <summary>
            The coordinate whose placemark data you want to retrieve. (read-only) ( Deprecated in iOS 5.0.  Use the <c>CLGeocoder</c> class instead.)
            <br></br>Equivalent to the native <c>coordinate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                    <li>Deprecated in iOS 5.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.Delegate">
            <summary>
            The reverse geocoder’s delegate object. ( Deprecated in iOS 5.0.  Use the <c>CLGeocoder</c> class instead.)
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A reverse-geocoder object sends messages to its delegate regarding the successful (or unsuccessful) acquisition of placemark data. You must provide a delegate object to receive this data. </p>
                <p>For more information about the <c>MKReverseGeocoderDelegate</c> protocol, see <em>MKReverseGeocoderDelegate Protocol Reference</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                    <li>Deprecated in iOS 5.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.placemark">
            <summary>
            The result of the reverse-geocoding operation. (read-only) ( Deprecated in iOS 5.0.  Use the <c>CLGeocoder</c> class instead. Note that placemarks in <c>CLGeocoder</c> always come back to the coordinate of the place, not the requested coordinate.)
            <br></br>Equivalent to the native <c>placemark</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is <c>null</c> by default. After a successful reverse-geocoding operation, it is set to the placemark object that was generated.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.2 and later.</li>
                    <li>Deprecated in iOS 5.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.querying">
            <summary>
            A Boolean value indicating whether the receiver is in the middle of reverse-geocoding its coordinate. (read-only) ( Deprecated in iOS 5.0.  Use the <c>CLGeocoder</c> class instead.)
            <br></br>Equivalent to the native <c>querying</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property contains YES if the process is ongoing or NO if the process is done or has not yet been initiated.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                    <li>Deprecated in iOS 5.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.Cancel">
            <summary>
            Cancels a pending reverse-geocoding request. ( Deprecated in iOS 5.0.  Use the <c>CLGeocoder</c> class instead.)
            <br></br>Equivalent to the native <c>cancel</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You can use this method to cancel a pending request and free up the resources associated with that request. If the request has already returned or has not yet begun, calling this method has no effect.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                    <li>Deprecated in iOS 5.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.#ctor(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            Creates an instance of the native MKReverseGeocoder and initializes the object. Initializes the reverse geocoder with the specified coordinate value. ( Deprecated in iOS 5.0.  Use the <c>CLGeocoder</c> class instead.)
            <br></br>Equivalent to the native <c>[[MKReverseGeocoder alloc] initWithCoordinate:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>The map coordinate whose placemark information you want to retrieve. </p>
                <b>Return Value</b>
                <p>An initialized <c>MKReverseGeocoder</c> object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                    <li>Deprecated in iOS 5.0.</li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoder.Start">
            <summary>
            Starts the reverse-geocoding process asynchronously. ( Deprecated in iOS 5.0.  Use the <c>CLGeocoder</c> class instead.)
            <br></br>Equivalent to the native <c>start</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You should call this method only once to begin the reverse-geocoding process. This method submits the coordinate value to the map server asynchronously and returns. Once the process is complete, the results are delivered to the associated delegate object. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                    <li>Deprecated in iOS 5.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKReverseGeocoderDelegate">
            <summary>
            The <c>MKReverseGeocoderDelegate</c> protocol defines the interface for receiving messages from an <c>MKReverseGeocoder</c> object. You use this protocol to receive the placemark information for a given coordinate or to retrieve any errors that occurred during the reverse-geocoding process.
            </summary>
            <remarks>
                <p>Delegates must implement both methods of this protocol.</p>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
                <p>The Google terms of service require that the reverse geocoding service be used in conjunction with a Google map; take this into account when designing your application's user interface.</p>
                <p>Each Map Kit application has a limited amount of reverse geocoding capacity, so it is to your advantage to use reverse geocode requests sparingly. For more information about when to initiate reverse-geocoding requests, see <em>MKReverseGeocoder Class Reference</em>.</p>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoderDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoderDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKReverseGeocoderDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKRoute">
            <summary>
            The <c>MKRoute</c> class defines a single route that the user can follow between a requested start and end point. The route object defines the geometry for the route and includes information you can display to the user in association with that route, such as the name of the route, its distance, and the expected travel time.
            </summary>
            <remarks>
                <p>You do not create instances of this class directly. Instead, you receive route objects when you request directions from the Maps app. For more information about requesting directions, see <em>MKDirections Class Reference</em>. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.UP_MKRoute_get_advisoryNotices(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.UP_MKRoute_get_distance(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.UP_MKRoute_get_expectedTravelTime(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.UP_MKRoute_get_name(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.UP_MKRoute_get_polyline(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.UP_MKRoute_get_steps(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.UP_MKRoute_get_transportType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKRoute" /> class.
            <br></br>Equivalent to the native <c>[[MKRoute alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRoute.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRoute.ClassExists">
            <summary>
            Returns whether the native MKRoute class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRoute.advisoryNotices">
            <summary>
            An array of advisory notice strings for the route. (read-only)
            <br></br>Equivalent to the native <c>advisoryNotices</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property contains an array of <c>String</c> objects. Each string is localized according to the user’s language preferences. The strings contain additional information that is important for the user to know about the route. For example, a string might note that a portion of the route is closed during the winter or after big storms. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRoute.distance">
            <summary>
            The route distance in meters. (read-only)
            <br></br>Equivalent to the native <c>distance</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property reflects the distance that the user covers while traversing the path of the route. It is not a direct distance between the start and end points of the route. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRoute.expectedTravelTime">
            <summary>
            The expected travel time in seconds. (read-only)
            <br></br>Equivalent to the native <c>expectedTravelTime</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This expected travel time reflects the time it takes to traverse the route under ideal conditions. The actual amount of time may vary based on conditions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRoute.name">
            <summary>
            The name assigned to the route. (read-only)
            <br></br>Equivalent to the native <c>name</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The string in this property is localized according to the user’s language preferences. You can display this string to the user from your app’s user interface so that the user can distinguish one route from another. </p>
                <p>The string itself describes the route using one of the route’s significant features. For example, a route that uses a major highway for a significant portion of the route might use that highway for its name.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRoute.polyline">
            <summary>
            The detailed route geometry. (read-only)
            <br></br>Equivalent to the native <c>polyline</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The polyline object in this property reflects the complete path of the route, including all of its steps. You can use the polyline object as an overlay in a map view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRoute.steps">
            <summary>
            The array of steps that comprise the overall route. (read-only)
            <br></br>Equivalent to the native <c>steps</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The array contains one or more <c>MKRouteStep</c> objects representing distinct portions of the route. Each step corresponds to a single direction that must be followed along the route. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRoute.transportType">
            <summary>
            The overall route transport type. (read-only)
            <br></br>Equivalent to the native <c>transportType</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property reflects the primary transport type used for the route. Individual steps of the route might use different transport types. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKRouteStep">
            <summary>
            An <c>MKRouteStep</c> object represents one part of an overall route. Each step in a route corresponds to a single instruction that would need to be followed by the user. For example, a step might involve following a single road until a turn is required.
            </summary>
            <remarks>
                <p>You do not create instances of this class directly. Instead, you receive route steps as part of an overall <c>MKRoute</c> object when you request directions from the Maps app. For more information about requesting directions, see <em>MKDirections Class Reference</em>. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.UP_MKRouteStep_get_distance(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.UP_MKRouteStep_get_instructions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.UP_MKRouteStep_get_notice(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.UP_MKRouteStep_get_polyline(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.UP_MKRouteStep_get_transportType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKRouteStep" /> class.
            <br></br>Equivalent to the native <c>[[MKRouteStep alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKRouteStep.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRouteStep.ClassExists">
            <summary>
            Returns whether the native MKRouteStep class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRouteStep.distance">
            <summary>
            The step distance in meters. (read-only)
            <br></br>Equivalent to the native <c>distance</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property reflects the distance that the user covers while traversing the path of the step. It is not a direct distance between the start and end points of the step. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRouteStep.instructions">
            <summary>
            The written instructions for following the path represented by this step. (read-only)
            <br></br>Equivalent to the native <c>instructions</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The string in this property is localized according to the user’s language preferences. You can present this string to the user from your app’s interface. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRouteStep.notice">
            <summary>
            Additional notices that apply to the step. (read-only)
            <br></br>Equivalent to the native <c>notice</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Notices may include legal information or warning notices that apply to the step. For example, if the step crosses railroad tracks, it might contain a notice that warns the user not to cross the tracks when the lights are flashing. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRouteStep.polyline">
            <summary>
            The detailed step geometry. (read-only)
            <br></br>Equivalent to the native <c>polyline</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The polyline object in this property contains the geometry for this step. You can use the polyline object as an overlay in a map view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKRouteStep.transportType">
            <summary>
            The transport type of the step. (read-only)
            <br></br>Equivalent to the native <c>transportType</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property reflects the transport type employed by the step and may differ from the transport type of the overall route.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKShape">
            <summary>
            The <c>MKShape</c> class is an abstract class that defines the basic properties for all shape-based annotation objects. This class must be subclassed and cannot be used as is. Subclasses are responsible for defining the geometry of the shape and providing an appropriate value for the <c>coordinate</c> property inherited from the <c>MKAnnotation</c> protocol.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKShape.UP_MKShape_get_subtitle(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKShape.UP_MKShape_set_subtitle(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKShape.UP_MKShape_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKShape.UP_MKShape_set_title(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKShape.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKShape.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKShape.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKShape" /> class.
            <br></br>Equivalent to the native <c>[[MKShape alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKShape.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKShape.ClassExists">
            <summary>
            Returns whether the native MKShape class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKShape.subtitle">
            <summary>
            The subtitle of the shape annotation.
            <br></br>Equivalent to the native <c>subtitle</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This string is displayed in the callout for the associated annotation view. The default value of this property is <c>null</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKShape.title">
            <summary>
            The title of the shape annotation.
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This string is displayed in the callout for the associated annotation view. The default value of this property is <c>null</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKTileOverlay">
            <summary>
            The <c>MKTileOverlay</c> class implements an overlay that is optimized for covering an area of the map using individual bitmap tiles. You can use tile overlay objects to represent your own tile-based content and to coordinate the display of that content in a map view. Your tiles can supplement the underlying map content or replace it completely. A tile overlay object coordinates the loading and management of the tiles while a corresponding <c>MKTileOverlayRenderer</c> object handles the actual drawing of the tiles on the map.
            </summary>
            <remarks>
                <p>You can use a single tile overlay object to represent all of the tiles at a one or more zoom levels of the map. The default tile overlay object uses a template string to build URLs so that it can locate the map tiles it needs. Each URL incorporates the x and y index of the map tile, the zoom level it is intended for, and the scale factor corresponding to the screen resolution on which to display the tile. The default class lets you specify map tiles whose indexes start in either the upper-left corner or lower-left corner of the map. If you use a different indexing scheme for your tiles, you can also subclass and override the <c>URLForTilePath:</c> or <c>loadTileAtPath:result:</c> methods to map between the requested tile and your custom indexing scheme.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_get_canReplaceMapContent(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_set_canReplaceMapContent(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_get_geometryFlipped(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_set_geometryFlipped(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_get_maximumZ(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_set_maximumZ(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_get_minimumZ(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_set_minimumZ(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_get_tileSize(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_set_tileSize(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_get_URLTemplate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_alloc_initWithURLTemplate_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_loadTileAtPath_result_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.UP_MKTileOverlay_URLForTilePath_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlay" /> class.
            <br></br>Equivalent to the native <c>[[MKTileOverlay alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKTileOverlay.ClassExists">
            <summary>
            Returns whether the native MKTileOverlay class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKTileOverlay.canReplaceMapContent">
            <summary>
            A Boolean indicating whether the tile content fully covers the underlying map content.
            <br></br>Equivalent to the native <c>canReplaceMapContent</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the tile content you provide can cover the entire drawing area with opaque content, set this property to <c>true</c>. Doing so serves as a hint to the map view that it does not need to draw any additional content underneath your tiles. Set this property to <c>false</c> if your tiles contain any transparency.</p>
                <p>The default value for this property is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKTileOverlay.geometryFlipped">
            <summary>
            A Boolean indicating the orientation of tile indexes along the y axis.
            <br></br>Equivalent to the native <c>geometryFlipped</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value of this property is <c>false</c>. When set to <c>false</c>, tile indexes start in the upper-left corner of the map and proceed down and to the right. Thus, the tile at <c>(0, 0)</c>is in the upper-left corner of the map, the tile at <c>(1, 0)</c> is to its immediate right and the tile at <c>(0, 1)</c> is immediately below it. Setting this property to <c>true</c> causes the map to start indexes at the lower-left corner of the map and proceed up and to the right.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKTileOverlay.maximumZ">
            <summary>
            The maximum zoom level supported by the tiles of this overlay object.
            <br></br>Equivalent to the native <c>maximumZ</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you use different overlay objects to represent different tiles at different zoom levels, use this property to specify the maximum zoom level supported by this overlay’s tiles. At zoom level 0, tiles cover the entire world map; at zoom level 1, tiles cover 1/4 of the world; at zoom level 2, tiles cover 1/16 of the world, and so on. The map never tries to load tiles for a zoom level greater than the value specified by this property.</p>
                <p>The default value of this property is 21. Setting the value of this property to a number greater than the default does not guarantee the use of those extra zoom levels.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKTileOverlay.minimumZ">
            <summary>
            The minimum zoom level supported by the tiles of this overlay object.
            <br></br>Equivalent to the native <c>minimumZ</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you use different overlay objects to represent different tiles at different zoom levels, use this property to specify the minimum zoom level supported by this overlay’s tiles. At zoom level 0, tiles cover the entire world map; at zoom level 1, tiles cover 1/4 of the world; at zoom level 2, tiles cover 1/16 of the world, and so on. The map never tries to load tiles for a zoom level less than the value specified by this property. </p>
                <p>The default value of this property is <c>0</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKTileOverlay.tileSize">
            <summary>
            The size (in pixels) of your tile images.
            <br></br>Equivalent to the native <c>tileSize</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default tile size is set to 256 x 256 pixels. On Retina displays, the images are rendered pixel for pixel and are not scaled. This means that if the tile size is 256 x 256 pixels and the scale factor is <c>2.0</c>, the image would be rendered as if it were 128 x 128 points in size. This behavior causes the tile to appear smaller but preserves the original image data.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKTileOverlay.URLTemplate">
            <summary>
            The template for generating tile image URLs. (read-only)
            <br></br>Equivalent to the native <c>URLTemplate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You specify this string at initialization time. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.#ctor(System.String)">
            <summary>
            Creates an instance of the native MKTileOverlay and initializes the object. Initializes and returns a tile overlay object using the specified tile-access template.
            <br></br>Equivalent to the native <c>[[MKTileOverlay alloc] initWithURLTemplate:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>URLTemplate</em>
                <p>A string that can be used to build a URL to access your tile images. The string you specify can point to a local file or to an image on a remote server. To facilitate retrieving multiple tiles using the string, use the placeholder values <c>{x}</c>, <c>{y}</c>, <c>{z}</c>, and <c>{scale}</c> as stand-ins for the x and y tile indexes, the zoom level, and the resolution of the tile image. If this parameter is <c>null</c>, you must provide custom implementations for the tile-loading methods of this class.</p>
                <b>Return Value</b>
                <p>An initialized tile overlay object.</p>
                <b>Discussion</b>
                <p>The default tile overlay object uses the template string you specify to request tiles. This template string should incorporate the <c>{x}</c>, <c>{y}</c>, <c>{z}</c>, and <c>{scale}</c> placeholder strings to facilitate the creation of a URL for requesting the appropriate tile. For example, if you have a server that vends tiles when you provide a URL of the form <c>http://myserver/tile?x=0&amp;y=0&amp;z=0&amp;scale=1.0</c>, you would specify a template string of <c>http://myserver/tile?x={x}&amp;y={y}&amp;z={z}&amp;scale={scale}</c>. The tile overlay object substitutes actual index values in for your template’s placeholders before requesting the actual tile.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="URLTemplate">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.LoadTileAtPath(U3DXT.iOS.Native.MapKit.MKTileOverlayPath,System.Action{U3DXT.iOS.Native.Foundation.NSData,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the specified tile asynchronously.
            <br></br>Equivalent to the native <c>loadTileAtPath:result:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>The path structure that identifies the specific tile you want. This structure incorporates the tile’s X-Y coordinate at a given zoom level and scale factor. </p>
                <em>result</em>
                <p>The completion block to call when the tile data is available. This block is executed on your app’s main thread and takes the following parameters:</p>
                <ul class="termdef">
                    <li class="termdef">
                        <p>The <em>tileData</em> parameter contains the raw data loaded from the corresponding image file. You can use this data to initialize an image object. If an error occurred, this parameter is <c>null</c>.</p>
                    </li>
                    <li class="termdef">
                        <p>The <em>error</em> parameter contains an error object if there was a problem loading the tile image. If no errors occurred, this parameter is <c>null</c>.  </p>
                    </li>
                </ul>
                <b>Discussion</b>
                <p>The default implementation of this method uses the <c>URLForTilePath:</c> method to retrieve the URL for the specified tile and then loads that tile into memory asynchronously using an <c>NSURLConnection</c> object. The specified tile may be located either on the local file system or on a remote server. Subclasses may override this method and implement their own custom tile-loading behavior. </p>
                <p>When a tile overlay renderer needs to display tiles, it uses this method to request the data for each tile. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="path">
            </param>
            <param name="result"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlay.URL(U3DXT.iOS.Native.MapKit.MKTileOverlayPath)">
            <summary>
            Returns the URL to use to access the specified tile.
            <br></br>Equivalent to the native <c>URLForTilePath:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>The path structure that identifies the specific tile you want. This structure incorporates the tile’s X-Y coordinate at a given zoom level and scale factor. </p>
                <b>Return Value</b>
                <p>The URL to use to retrieve the tile. </p>
                <b>Discussion</b>
                <p>The default implementation of this method uses the template string you provided at initialization time to build a URL to the specified tile image. Subclasses can override this method and use a different scheme to provide URLs for tiles. Tiles can be located either on a local file system or on a remote server.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="path">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath">
            <summary>
            Use this structure to specify the index values for a single tile.
            </summary>
            <remarks>
                <b>Fields</b>
                <p>
                </p>
                <c>x</c>
                <p>The index of the tile along the x axis of the map.</p>
                <c>y</c>
                <p>The index of the tile along the y axis of the map.</p>
                <c>z</c>
                <p>The zoom level number for the tile. At level 0, the map displays the entire world; at level 1, the map displays 1/4 of the world; at level 2, the map displays 1/16 of the world, and so on.</p>
                <c>contentScaleFactor</c>
                <p>The screen scale factor for which the tile is intended. This value is either <c>1.0</c> (for standard resolution displays) or <c>2.0</c> (for Retina displays).  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.x">
            <summary> The x.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.y">
            <summary> The y.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.z">
            <summary> The z.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.contentScaleFactor">
            <summary> The contentScaleFactor.</summary>;</member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.#ctor(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" /> struct.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayPath._Serialize">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayPath._Deserialize(System.Object)">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
            <param name="json">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" />.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" /> object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" />.
            </summary>
            <param name="other">
            The <see cref="T:System.Object" /> to compare with the current <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.op_Equality(U3DXT.iOS.Native.MapKit.MKTileOverlayPath,U3DXT.iOS.Native.MapKit.MKTileOverlayPath)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" /> is equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayPath.op_Inequality(U3DXT.iOS.Native.MapKit.MKTileOverlayPath,U3DXT.iOS.Native.MapKit.MKTileOverlayPath)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" /> is not equal to another specified <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayPath" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer">
            <summary>
            An <c>MKTileOverlayRenderer</c> object handles the drawing of tiles managed by an <c>MKTileOverlay</c> object. You create instances of this class when tile overlays become visible on the map view. A renderer works closely with its associated tile overlay object to coordinate the loading and drawing of tiles at appropriate times.
            </summary>
            <remarks>
                <p>For information about how to specify the tiles to display on the map, see <em>MKTileOverlay Class Reference</em>.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.UP_MKTileOverlayRenderer_alloc_initWithTileOverlay_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.UP_MKTileOverlayRenderer_reloadData(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer" /> class.
            <br></br>Equivalent to the native <c>[[MKTileOverlayRenderer alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.ClassExists">
            <summary>
            Returns whether the native MKTileOverlayRenderer class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKTileOverlay)">
            <summary>
            Creates an instance of the native MKTileOverlayRenderer and initializes the object. Initializes and returns a tile renderer with the specified overlay object.
            <br></br>Equivalent to the native <c>[[MKTileOverlayRenderer alloc] initWithTileOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The tile overlay object whose contents you want to draw.</p>
                <b>Return Value</b>
                <p>An initialized tile renderer object.</p>
                <b>Discussion</b>
                <p>The returned renderer object works with the tile overlay object to coordinate the loading and display of its map tiles.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.ReloadData">
            <summary>
            Forces tiles to be reloaded and displayed.
            <br></br>Equivalent to the native <c>reloadData</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Use this method to remove the overlay’s existing tile images and reload them from the original source. This method automatically causes the renderer to redraw the new tiles as soon as they are loaded into memory.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKTileOverlayRenderer.#ctor(U3DXT.iOS.Native.MapKit.MKOverlay)">
            <summary>
            Creates an instance of the native MKTileOverlayRenderer and initializes the object. Inherits from <c>MKOverlayRenderer</c>. Initializes and returns the overlay renderer and associates it with the specified overlay object.
            <br></br>Equivalent to the native <c>[[MKTileOverlayRenderer alloc] initWithOverlay:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>overlay</em>
                <p>The overlay object to use when drawing the overlay content on the map. This object provides the data needed to draw the overlay’s shape. The overlay renderer stores a strong reference to this object.</p>
                <b>Return Value</b>
                <p>An initialized overlay renderer object.</p>
                <b>Discussion</b>
                <p>Initially, the overlay renderer assumes that the overlay is fully opaque and that it has a content scale factor of 1.0. You can change these values as needed using the <c>alpha</c> and <c>contentScaleFactor</c> properties.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="overlay">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.MapKit.MKOverlayRenderer" />
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKTypes">
            <summary>
            Constants belonging to MKTypes.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKTypes.MKErrorDomain">
            <summary>
                <p>The Map Kit error domain.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKErrorDomain</c> constant.
            </summary>
            <remarks>
            The error domain for Map Kit.
            <p></p><p></p>This is a constant for "Error Domain".
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKUserLocation">
            <summary>
            The <c>MKUserLocation</c> class defines a specific type of annotation that identifies the user’s current location. You do not create instances of this class directly. Instead, you retrieve an existing <c>MKUserLocation</c> object from the <c>userLocation</c> property of the map view displayed in your application.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.UP_MKUserLocation_get_heading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.UP_MKUserLocation_get_location(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.UP_MKUserLocation_get_subtitle(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.UP_MKUserLocation_set_subtitle(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.UP_MKUserLocation_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.UP_MKUserLocation_set_title(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.UP_MKUserLocation_get_updating(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKUserLocation" /> class.
            <br></br>Equivalent to the native <c>[[MKUserLocation alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserLocation.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKUserLocation.ClassExists">
            <summary>
            Returns whether the native MKUserLocation class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKUserLocation.heading">
            <summary>
            The heading of the user location. (read-only)
            <br></br>Equivalent to the native <c>heading</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is <c>null</c> if the user location tracking mode is not <c>MKUserTrackingModeFollowWithHeading</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKUserLocation.location">
            <summary>
            The current location of the device. (read-only)
            <br></br>Equivalent to the native <c>location</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property contains <c>null</c> if the map view is not currently showing the user location or if the user’s location has not yet been determined.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKUserLocation.subtitle">
            <summary>
            The subtitle to display for the user location annotation.
            <br></br>Equivalent to the native <c>subtitle</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKUserLocation.title">
            <summary>
            The title to display for the user location annotation.
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKUserLocation.updating">
            <summary>
            A Boolean value indicating whether the user’s location is currently being updated. (read-only)
            <br></br>Equivalent to the native <c>updating</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem">
            <summary>
            A<c>MKUserTrackingBarButtonItem</c> object is a specialized bar button item that allows the user to toggle through the user tracking modes. For example, when the user taps the button, the map view toggles between tracking the user with and without heading. The button also reflects the current user tracking mode if set elsewhere. This bar button item is associated to a single map view.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> In iOS 5.1 and earlier, the Map Kit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at  http://code.google.com/apis/maps/iphone/terms.html . </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.UP_MKUserTrackingBarButtonItem_get_mapView(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.UP_MKUserTrackingBarButtonItem_set_mapView(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.UP_MKUserTrackingBarButtonItem_alloc_initWithMapView_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem" /> class.
            <br></br>Equivalent to the native <c>[[MKUserTrackingBarButtonItem alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.ClassExists">
            <summary>
            Returns whether the native MKUserTrackingBarButtonItem class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.mapView">
            <summary>
            The map view associated with this bar button item.
            <br></br>Equivalent to the native <c>mapView</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.MapKit.MKUserTrackingBarButtonItem.#ctor(U3DXT.iOS.Native.MapKit.MKMapView)">
            <summary>
            Creates an instance of the native MKUserTrackingBarButtonItem and initializes the object. Initializes a newly created bar button item with the specified map view.
            <br></br>Equivalent to the native <c>[[MKUserTrackingBarButtonItem alloc] initWithMapView:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>mapView</em>
                <p>The map view used by this bar button item.</p>
                <b>Return Value</b>
                <p>The initialized bar button item.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="mapView">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.MapKit.MKUserTrackingMode">
            <summary>
            The mode used to track the user location on the map.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKUserTrackingMode.Follow">
            <summary>
                <p>The map follows the user location.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKUserTrackingModeFollow</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKUserTrackingMode.FollowWithHeading">
            <summary>
                <p>The map follows the user location and rotates when the heading changes.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKUserTrackingModeFollowWithHeading</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.MapKit.MKUserTrackingMode.None">
            <summary>
                <p>The map does not follow the user location.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>MKUserTrackingModeNone</c> enum constant.
            </summary>
        </member>
    </members>
</doc>
