<?xml version="1.0"?>
<doc>
    <assembly>
        <name>U3DXTSpriteKit</name>
    </assembly>
    <members>
        <member name="T:U3DXT.iOS.Native.CoreGraphics.CGVector">
            <summary>
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreGraphics.CGVector.dx">
            <summary> The dx.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.CoreGraphics.CGVector.dy">
            <summary> The dy.</summary>;</member>
        <member name="M:U3DXT.iOS.Native.CoreGraphics.CGVector.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" /> struct.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreGraphics.CGVector._Serialize">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreGraphics.CGVector._Deserialize(System.Object)">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
            <param name="json">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreGraphics.CGVector.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" />.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreGraphics.CGVector.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" /> object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreGraphics.CGVector.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" />.
            </summary>
            <param name="other">
            The <see cref="T:System.Object" /> to compare with the current <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreGraphics.CGVector.op_Equality(U3DXT.iOS.Native.CoreGraphics.CGVector,U3DXT.iOS.Native.CoreGraphics.CGVector)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" /> is equal to another specified <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreGraphics.CGVector.op_Inequality(U3DXT.iOS.Native.CoreGraphics.CGVector,U3DXT.iOS.Native.CoreGraphics.CGVector)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" /> is not equal to another specified <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.CoreGraphics.CGVector" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.NSEvent">
            <summary>
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.NSEvent.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.NSEvent.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.NSEvent.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.NSEvent" /> class.
            <br></br>Equivalent to the native <c>[[NSEvent alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.NSEvent.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.NSEvent.ClassExists">
            <summary>
            Returns whether the native NSEvent class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKAction">
            <summary>
            An <c>SKAction</c> object is an action that is executed by a node in the scene (<c>SKScene</c>). Actions are most often used to change the structure and content of the node to which they are attached, but can also make other changes to the scene. When the scene processes its nodes,  actions associated with those nodes are evaluated.
            </summary>
            <remarks>
                <p>To create an action, call the class method for the action you are interested in. Then, configure the action’s properties. Finally, to execute the action, call a node object’s <c>runAction:</c> method (or a similar method on the <c>SKNode</c> class) and pass it the action object.</p>
                <p>Most actions allow you to change a node’s properties, such as its position, rotation, or scale. Some actions specifically apply only to <c>SKSpriteNode</c> objects, allowing you to animate a sprite’s color or texture properties. Many of these actions are animated by Sprite Kit, meaning that they change the properties of the associated node over more than one frame of animation rendered by the scene. When an action is animated, the <c>duration</c> property states how long that action takes to complete in seconds and its <c>timingMode</c> property defines the rate at which the animation executes. The action’s <c>speed</c> property allows you to adjust the timing of the animation by increasing or decreasing its playback speed.</p>
                <p>Many actions can be <strong>reversed</strong>, allowing you to create another action object that reverses the effect of that action. For example, if an action object moves a node <c>20</c> points to the right of its current position, the reversed action moves the node <c>20</c> points to the left. To create a reversed action object, call an action object’s <c>reversedAction</c> method.</p>
                <p>Some actions include other actions as children:</p>
                <ul class="ul">
                    <li class="li">
                        <p>A <em>sequence action</em> has multiple child actions. Each action in the sequence begins after the previous action ends.</p>
                    </li>
                    <li class="li">
                        <p>A <em>group action</em> has multiple child actions. All actions stored in the group begin executing at the same time.</p>
                    </li>
                    <li class="li">
                        <p>A <em>repeating action</em> stores a single child action. When the child action completes, it is restarted.</p>
                    </li>
                </ul>
                <p>Groups, sequences, and repeating actions can be nested. The ability to combine actions together allows you to add very sophisticated behaviors to a node.</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	You never subclass <c>SKAction</c> directly. Instead, create actions that call methods on arbitrary objects or execute blocks of code. See  “Creating Custom Actions.” </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_animateWithTextures_timePerFrame_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_animateWithTextures_timePerFrame_resize_restore_(System.String,System.Double,System.Boolean,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_colorizeWithColor_colorBlendFactor_duration_(System.String,System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_colorizeWithColorBlendFactor_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_customActionWithDuration_actionBlock_(System.Double,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_fadeAlphaBy_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_fadeAlphaTo_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_fadeInWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_fadeOutWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_followPath_asOffset_orientToPath_duration_(System.String,System.Boolean,System.Boolean,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_followPath_duration_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_group_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_moveByX_y_duration_(System.Single,System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_moveTo_duration_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_moveToX_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_moveToY_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_playSoundFileNamed_waitForCompletion_(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_removeFromParent">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_repeatAction_count_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_repeatActionForever_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_resizeByWidth_height_duration_(System.Single,System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_resizeToHeight_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_resizeToWidth_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_resizeToWidth_height_duration_(System.Single,System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_rotateByAngle_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_rotateToAngle_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_rotateToAngle_duration_shortestUnitArc_(System.Single,System.Double,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_runAction_onChildWithName_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_scaleBy_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_scaleTo_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_scaleXBy_y_duration_(System.Single,System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_scaleXTo_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_scaleXTo_y_duration_(System.Single,System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_scaleYTo_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_sequence_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_setTexture_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_speedBy_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_speedTo_duration_(System.Single,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_waitForDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_waitForDuration_withRange_(System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_get_duration(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_set_duration(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_get_speed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_set_speed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_get_timingMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_set_timingMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.UP_SKAction_reversedAction(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKAction" /> class.
            <br></br>Equivalent to the native <c>[[SKAction alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKAction.ClassExists">
            <summary>
            Returns whether the native SKAction class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.Animate(System.Object[],System.Double)">
            <summary>
            Creates an action that animates changes to a sprite’s texture.
            <br></br>Equivalent to the native <c>animateWithTextures:timePerFrame:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>textures</em>
                <p>An array of textures to use when animating a sprite.</p>
                <em>sec</em>
                <p>The amount of time that each texture is displayed. </p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by an <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>texture</c> property animates through the array of textures. The sprite’s <c>texture</c> property is changed to the next texture in the array. The action then pauses for the specified time before continuing. The action continues until it has finished animating through all of the textures in the array. The total duration of the action is the number of textures multiplied by the frame interval.</p>
                <p>This action is reversible; the resulting action animates through the same textures from last to first.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="textures">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.Animate(System.Object[],System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates an action that animates changes to a sprite’s texture, possibly resizing the sprite.
            <br></br>Equivalent to the native <c>animateWithTextures:timePerFrame:resize:restore:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>textures</em>
                <p>An array of textures to use when animating a sprite.</p>
                <em>sec</em>
                <p>The time that each texture is displayed. </p>
                <em>resize</em>
                <p>If <c>true</c>, the sprite is resized to match each new texture. If <c>false</c>, the size of the sprite remains at a constant size.</p>
                <em>restore</em>
                <ul class="termdef">
                    <li class="termdef">
                        <p>If <c>true</c>:</p>
                        <p>When the action completes, the sprite’s texture is restored to the texture it had before the action completed. (If the resize parameter is <c>true</c>, the sprite is resized to match the size of the original texture.</p>
                    </li>
                    <li class="termdef">
                        <p> If <c>false</c>:</p>
                        <p>When the action completes the sprite’s texture remains set to the final texture in the array.</p>
                    </li>
                </ul>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by an <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>texture</c> property animates through the array of textures. The sprite’s <c>texture</c> property is changed to the next texture in the array. The action then pauses for the specified time before continuing. The action continues until it has finished animating through all of the textures in the array. The total duration of the action is the number of textures multiplied by the frame interval.</p>
                <p>
                    <strong>Note:</strong> If the <em>restore</em> parameter is <c>true</c> and this action is removed from a node before it completes, then the node’s texture is still restored. This differs from the default behavior of removing an action.</p>
                <p>
                </p>
                <p>This action is reversible; the resulting action animates through the same textures from last to first.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="textures">
            </param>
            <param name="sec">
            </param>
            <param name="resize">
            </param>
            <param name="restore">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.Colorize(U3DXT.iOS.Native.UIKit.UIColor,System.Single,System.Double)">
            <summary>
            Creates an animation that animates a sprite’s color and blend factor.
            <br></br>Equivalent to the native <c>colorizeWithColor:colorBlendFactor:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>color</em>
                <p>The new color for the sprite.</p>
                <em>colorBlendFactor</em>
                <p>The new blend factor for the sprite.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by an <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>color</c> and <c>colorBlendFactor</c> properties are animated to their new values.</p>
                <p>This action is not reversible; the reverse of this action does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="color">
            </param>
            <param name="colorBlendFactor">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.Colorize(System.Single,System.Double)">
            <summary>
            Creates an animation that animates a sprite’s blend factor.
            <br></br>Equivalent to the native <c>colorizeWithColorBlendFactor:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>colorBlendFactor</em>
                <p>The new blend factor for the sprite.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by an <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>colorBlendFactor</c> property animates to the new value.</p>
                <p>This action is not reversible; the reverse of this action does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="colorBlendFactor">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.CustomAction(System.Double,System.Action{U3DXT.iOS.Native.SpriteKit.SKNode,System.Single})">
            <summary>
            Creates an action that executes a block over a duration.
            <br></br>Equivalent to the native <c>customActionWithDuration:actionBlock:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>seconds</em>
                <p>The duration of the action, in seconds.</p>
                <em>block</em>
                <p>The block to run. The block takes the following parameters:</p>
                <p>
                </p>
                <em>node</em>
                <p>The node on which the action is running.</p>
                <em>elapsedTime</em>
                <p>The amount of time that has passed in the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the block is called repeatedly until the action’s duration expires. The elapsed time is computed and passed to the block whenever the block is called.</p>
                <p>This action is not reversible; the reverse action executes the same block.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="seconds">
            </param>
            <param name="block"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.FadeAlphaBy(System.Single,System.Double)">
            <summary>
            Creates an action that adjusts the alpha value of a node by a relative value.
            <br></br>Equivalent to the native <c>fadeAlphaBy:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>factor</em>
                <p>The amount to add to the node’s alpha value.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>alpha</c> property animates to its new value.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction fadeAlphaBy: -factor duration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="factor">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.FadeAlphaTo(System.Single,System.Double)">
            <summary>
            Creates an action that adjusts the alpha value of a node to a new value.
            <br></br>Equivalent to the native <c>fadeAlphaTo:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>alpha</em>
                <p>The new value of the node’s alpha.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>alpha</c> property animates to its new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="alpha">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.FadeIn(System.Double)">
            <summary>
            Creates an action that changes the alpha value of the node to <c>1.0</c>.
            <br></br>Equivalent to the native <c>fadeInWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>alpha</c> property animates from its current value to <c>1.0</c>.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction fadeOutWithDuration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.FadeOut(System.Double)">
            <summary>
            Creates an action that changes the alpha value of the node to <c>0.0</c>.
            <br></br>Equivalent to the native <c>fadeOutWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>alpha</c> property animates from its current value to <c>0.0</c>. This causes the node to disappear.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction fadeInWithDuration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.FollowPath(U3DXT.iOS.Native.CoreGraphics.CGPath,System.Boolean,System.Boolean,System.Double)">
            <summary>
            Creates an action that moves the node along a path.
            <br></br>Equivalent to the native <c>followPath:asOffset:orientToPath:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>A path to follow.</p>
                <em>offset</em>
                <p>If <c>true</c>, the points in the path are relative offsets to the node’s starting position. If <c>false</c>, the points in the node are absolute coordinate values.</p>
                <em>orient</em>
                <p>If <c>true</c>, the node’s <c>zRotation</c> property animates so that the node turns to follow the path. If <c>false</c>, the <c>zRotation</c> property of the node is unchanged.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>position</c> and <c>zRotation</c> properties are animated along the provided path.</p>
                <p>This action is reversible; the resulting action creates a reversed path and then follows it, with the same duration.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>+ followPath:duration:</c>
                    </li>
                </ul>
            </remarks>
            <param name="path">
            </param>
            <param name="offset">
            </param>
            <param name="orient">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.FollowPath(U3DXT.iOS.Native.CoreGraphics.CGPath,System.Double)">
            <summary>
            Creates an action that moves the node along a relative path, orienting the node to the path.
            <br></br>Equivalent to the native <c>followPath:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>A Core Graphics path whose coordinates are relative to the node’s current position.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>Calling this method is equivalent to calling the <c>followPath:asOffset:orientToPath:duration:</c> method, passing in <c>true</c> to both the <c>offset</c> and <c>orient</c> parameters.</p>
                <p>This action is reversible; the resulting action creates and then follows a reversed path with the same duration.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>+ followPath:asOffset:orientToPath:duration:</c>
                    </li>
                </ul>
            </remarks>
            <param name="path">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.Group(System.Object[])">
            <summary>
            Creates an action that runs a collection of actions in parallel.
            <br></br>Equivalent to the native <c>group:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>actions</em>
                <p>An array of <c>SKAction</c> objects.</p>
                <b>Return Value</b>
                <p>A group action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the actions that comprise the group all start immediately and run in parallel. The duration of the group action is the longest duration among the collection of actions. If an action in the group has a duration less than the group’s duration, the action completes, then idles until the group completes the remaining actions. This matters most when creating a repeating action that repeats a group.</p>
                <p>This action is reversible; it creates a new group action that contains the reverse of each action specified in the group. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="actions">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.MoveByX(System.Single,System.Single,System.Double)">
            <summary>
            Creates an action that moves a node relative to its current position.
            <br></br>Equivalent to the native <c>moveByX:y:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>deltaX</em>
                <p>The x-value, in points, to add to the node’s position.</p>
                <em>deltaY</em>
                <p>The y-value, in points, to add to the node’s position.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new move action.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>position</c> property animates from its current position to its new position.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction moveByX: -deltaX y: -deltaY duration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="deltaX">
            </param>
            <param name="deltaY">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.MoveTo(UnityEngine.Vector2,System.Double)">
            <summary>
            Creates an action that moves a node to a new position.
            <br></br>Equivalent to the native <c>moveTo:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>location</em>
                <p>The coordinates for the node’s new position.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>position</c> property animates from its current position to its new position.</p>
                <p>This action is not reversible; the reverse of this action has the same duration but does not move the node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="location">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.MoveToX(System.Single,System.Double)">
            <summary>
            Creates an action that moves a node horizontally.
            <br></br>Equivalent to the native <c>moveToX:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>x</em>
                <p>The x-value for the node’s new position.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>position</c> property animates from its current position to its new position.</p>
                <p>This action is not reversible; the reverse of this action has the same duration but does not move the node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="x">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.MoveToY(System.Single,System.Double)">
            <summary>
            Creates an action that moves a node vertically.
            <br></br>Equivalent to the native <c>moveToY:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>y</em>
                <p>The y-value for the node’s new position.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>position</c> property animates from its current position to its new position.</p>
                <p>This action is not reversible; the reverse of this action has the same duration but does not move the node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="y">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.PlaySoundFileNamed(System.String,System.Boolean)">
            <summary>
            Creates an action that plays a sound.
            <br></br>Equivalent to the native <c>playSoundFileNamed:waitForCompletion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>soundFile</em>
                <p>The name of a sound file in the app’s bundle.</p>
                <em>wait</em>
                <p>If <c>true</c>, then the duration of this action is the same as the length of the audio playback. If <c>false</c>, the action is considered to have completed immediately.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action is not reversible; the reversed action is identical to the original action.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="soundFile">
            </param>
            <param name="wait">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.RemoveFromParent">
            <summary>
            Creates an action that removes the node from its parent.
            <br></br>Equivalent to the native <c>removeFromParent</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node is immediately removed from its parent.</p>
                <p>This action is not reversible; the reverse of this action is the same action.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.RepeatAction(U3DXT.iOS.Native.SpriteKit.SKAction,System.UInt32)">
            <summary>
            Creates an action that repeats another action a specified number of times.
            <br></br>Equivalent to the native <c>repeatAction:count:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>action</em>
                <p>The action to execute.</p>
                <em>count</em>
                <p>The number of times to execute the action.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the associated action runs to completion and then repeats, until the count is reached.</p>
                <p>This action is reversible; it creates a new action that is the reverse of the specified action and then repeats it the same number of times.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="action">
            </param>
            <param name="count">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.RepeatAction(U3DXT.iOS.Native.SpriteKit.SKAction)">
            <summary>
            Creates an action that repeats another action forever.
            <br></br>Equivalent to the native <c>repeatActionForever:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>action</em>
                <p>The action to execute.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the associated action runs to completion and then repeats.</p>
                <p>This action is reversible; it creates a new action that is the reverse of the specified action and then repeats it forever.</p>
                <p>
                    <strong>Note:</strong> The action to be repeated must have a non-instantaneous duration.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="action">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ResizeByWidth(System.Single,System.Single,System.Double)">
            <summary>
            Creates an action that adjusts the size of a sprite.
            <br></br>Equivalent to the native <c>resizeByWidth:height:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>width</em>
                <p>The amount to add to the sprite’s width.</p>
                <em>height</em>
                <p>The amount to add to the sprite’s height.</p>
                <em>duration</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by a <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>size</c> property animates to its new value.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction resizeByWidth: -width height: -height duration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="width">
            </param>
            <param name="height">
            </param>
            <param name="duration">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ResizeToHeight(System.Single,System.Double)">
            <summary>
            Creates an action that changes the height of a sprite to a new absolute value.
            <br></br>Equivalent to the native <c>resizeToHeight:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>height</em>
                <p>The new height of the sprite.</p>
                <em>duration</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by an <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>size</c> property animates to its new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="height">
            </param>
            <param name="duration">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ResizeToWidth(System.Single,System.Double)">
            <summary>
            Creates an action that changes the width of a sprite to a new absolute value.
            <br></br>Equivalent to the native <c>resizeToWidth:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>width</em>
                <p>The new width of the sprite.</p>
                <em>duration</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by an <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>size</c> property animates to its new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="width">
            </param>
            <param name="duration">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ResizeToWidth(System.Single,System.Single,System.Double)">
            <summary>
            Creates an action that changes the width and height of a sprite to a new absolute value.
            <br></br>Equivalent to the native <c>resizeToWidth:height:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>width</em>
                <p>The new width of the sprite.</p>
                <em>height</em>
                <p>The new height of the sprite.</p>
                <em>duration</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by an <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>size</c> property animates to its new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="width">
            </param>
            <param name="height">
            </param>
            <param name="duration">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.RotateByAngle(System.Single,System.Double)">
            <summary>
            Creates an action that rotates the node by a relative value.
            <br></br>Equivalent to the native <c>rotateByAngle:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>radians</em>
                <p>The amount to rotate the node, in radians.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>zRotation</c> property animates to the new angle.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction rotateByAngle: -radians duration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="radians">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.RotateToAngle(System.Single,System.Double)">
            <summary>
            Creates an action that rotates the node counterclockwise to an absolute angle.
            <br></br>Equivalent to the native <c>rotateToAngle:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>radians</em>
                <p>The angle to rotate the node to, in radians.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>zRotation</c> property is interpolated to the new angle.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="radians">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.RotateToAngle(System.Single,System.Double,System.Boolean)">
            <summary>
            Creates an action that rotates the node to an absolute value.
            <br></br>Equivalent to the native <c>rotateToAngle:duration:shortestUnitArc:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>radians</em>
                <p>The angle to rotate the node to, in radians.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <em>shortestUnitArc</em>
                <p>If <c>true</c>, then the rotation is performed in whichever direction results in the smallest rotation. If <c>false</c>, then the rotation is interpolated.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>zRotation</c> property is animated to the new angle.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="radians">
            </param>
            <param name="sec">
            </param>
            <param name="shortestUnitArc">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.RunAction(U3DXT.iOS.Native.SpriteKit.SKAction,System.String)">
            <summary>
            Creates an action that runs an action on a named child object.
            <br></br>Equivalent to the native <c>runAction:onChildWithName:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>action</em>
                <p>The action to execute.</p>
                <em>name</em>
                <p>The name of a child object. See the <c>name</c> property on the <c>SKNode</c> object.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action has an instantaneous duration, although the action executed on the child may have a duration of its own. When the action executes, it looks up an appropriate child node and calls its <c>runAction:</c> method, passing in the action to execute. </p>
                <p>This action is reversible; it tells the child to execute the reverse of the action specified by the <em>action</em> parameter.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="action">
            </param>
            <param name="name">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ScaleBy(System.Single,System.Double)">
            <summary>
            Creates an action that changes the x and y scale values of a node by a relative value.
            <br></br>Equivalent to the native <c>scaleBy:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scale</em>
                <p>The amount to add to the node’s x and y scale values.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>xScale</c> and <c>yScale</c> properties are animated to the new value.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction scaleBy: -scale duration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="scale">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ScaleTo(System.Single,System.Double)">
            <summary>
            Creates an action that changes the x and y scale values of a node.
            <br></br>Equivalent to the native <c>scaleTo:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scale</em>
                <p>The new value for the node’s x and y scale values.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>xScale</c> and <c>yScale</c> properties are animated to the new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="scale">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ScaleXBy(System.Single,System.Single,System.Double)">
            <summary>
            Creates an action that adds relative values to the x and y scale values of a node.
            <br></br>Equivalent to the native <c>scaleXBy:y:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>xScale</em>
                <p>The amount to add to the node’s x scale value.</p>
                <em>yScale</em>
                <p>The amount to add to the node’s y scale value.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>xScale</c> and <c>yScale</c> properties are animated to the new value.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction scaleXBy: -xScale y: -yScale duration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="xScale">
            </param>
            <param name="yScale">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ScaleXTo(System.Single,System.Double)">
            <summary>
            Creates an action that changes the x scale value of a node to a new value.
            <br></br>Equivalent to the native <c>scaleXTo:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scale</em>
                <p>The new value for the node’s x scale value.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>xScale</c> property animates to the new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="scale">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ScaleXTo(System.Single,System.Single,System.Double)">
            <summary>
            Creates an action that changes the x and y scale values of a node.
            <br></br>Equivalent to the native <c>scaleXTo:y:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>xScale</em>
                <p>The new value for the node’s x scale value.</p>
                <em>yScale</em>
                <p>The new value for the node’s y scale value.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>xScale</c> and <c>yScale</c> properties are animated to the new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="xScale">
            </param>
            <param name="yScale">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ScaleYTo(System.Single,System.Double)">
            <summary>
            Creates an action that changes the y scale value of a node to a new value.
            <br></br>Equivalent to the native <c>scaleYTo:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scale</em>
                <p>The new value for the node’s y scale value.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>yScale</c> property animates to the new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="scale">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.Sequence(System.Object[])">
            <summary>
            Creates an action that runs a collection of actions sequentially.
            <br></br>Equivalent to the native <c>sequence:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>actions</em>
                <p>An array of <c>SKAction</c> objects.</p>
                <b>Return Value</b>
                <p>A sequence action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the first action in the sequence starts and runs to completion. Subsequent actions in the sequence run in a similar fashion until all of the actions in the sequence have executed. The duration of the sequence action is the sum of the durations of the actions in the sequence.</p>
                <p>This action is reversible; it creates a new sequence action that reverses the order of the actions. Each action in the reversed sequence is itself reversed. For example, if an action sequence is <c>{1,2,3}</c>, the reversed sequence would be <c>{3R,2R,1R}</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="actions">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.SetTexture(U3DXT.iOS.Native.SpriteKit.SKTexture)">
            <summary>
            Creates an action that changes a sprite’s texture.
            <br></br>Equivalent to the native <c>setTexture:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>texture</em>
                <p>The new texture to use on the sprite.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>This action can only be executed by an <c>SKSpriteNode</c> object. When the action executes, the sprite’s <c>texture</c> property changes immediately to the new texture.</p>
                <p>This action is not reversible; the reverse of this action does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="texture">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.SpeedBy(System.Single,System.Double)">
            <summary>
            Creates an action that changes how fast the node executes actions by a relative value.
            <br></br>Equivalent to the native <c>speedBy:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>speed</em>
                <p>The amount to add to the node’s speed.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>speed</c> property animates to the new value.</p>
                <p>This action is reversible; the reverse is created as if the following code were executed:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>[SKAction speedBy: -speed duration: sec];  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="speed">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.SpeedTo(System.Single,System.Double)">
            <summary>
            Creates an action that changes how fast the node executes actions.
            <br></br>Equivalent to the native <c>speedTo:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>speed</em>
                <p>The new value for the node’s speed.</p>
                <em>sec</em>
                <p>The duration of the animation.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the node’s <c>speed</c> property animates to the new value.</p>
                <p>This action is not reversible; the reverse of this action has the same duration, but does not change anything.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="speed">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.Wait(System.Double)">
            <summary>
            Creates an action that idles for a specified period of time.
            <br></br>Equivalent to the native <c>waitForDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The amount of time to wait.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the action waits for the specified amount of time, then ends. This is typically used as part of a sequence of actions to insert a delay between two other actions. You might also use it in conjunction with the <c>runAction:completion:</c> method to trigger code that needs to run at a later time.</p>
                <p>This action is not reversible; the reverse of this action is the same action.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.Wait(System.Double,System.Double)">
            <summary>
            Creates an action that idles for a randomized period of time.
            <br></br>Equivalent to the native <c>waitForDuration:withRange:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The average amount of time to wait.</p>
                <em>durationRange</em>
                <p>The range of possible values for the duration.</p>
                <b>Return Value</b>
                <p>A new action object.</p>
                <b>Discussion</b>
                <p>When the action executes, the action waits for the specified amount of time, then ends. This is typically used as part of a sequence of actions to insert a delay between two other actions. However, you might also use it in conjunction with the <c>runAction:completion:</c> method to trigger code that needs to run at a later time.</p>
                <p>Each time the action is executed, the action computes a new random value for the duration. The duration may vary in either direction by up to half of the value of the <em>durationRange</em> parameter.</p>
                <p>This action is not reversible; the reverse of this action is the same action.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
            <param name="durationRange">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKAction.duration">
            <summary>
            The duration required to complete an action.
            <br></br>Equivalent to the native <c>duration</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This is the expected duration of an action’s animation. The actual time an action takes to complete is modified by the <c>speed</c> property of the action and the <c>speed</c> property of the node on which it executes.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKAction.speed">
            <summary>
            A speed factor that modifies how fast an action runs.
            <br></br>Equivalent to the native <c>speed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The speed factor adjusts how fast an action’s animation runs. For example, a speed factor of <c>2.0</c> means the animation runs twice as fast.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKAction.timingMode">
            <summary>
            The timing mode used to execute an action.
            <br></br>Equivalent to the native <c>timingMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The possible values for this property are listed in <c>“Action Timing Modes”</c>. The default value is <c>SKActionTimingLinear</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKAction.ReversedAction">
            <summary>
            Creates an action that reverses the behavior of another action.
            <br></br>Equivalent to the native <c>reversedAction</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A new action that reverses an action’s behavior.</p>
                <b>Discussion</b>
                <p>This method always returns an action object; however, not all actions are reversible. When reversed, some actions return an object that either does nothing or that performs the same action as the original action. For details on how an action is reversed, see the description of the class method used to create that action.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKActionTimingMode">
            <summary>
            The modes that an action can use to adjust the apparent timing of the action.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKActionTimingMode.Linear">
            <summary>
                <p>Specifies linear pacing. Linear pacing causes an animation to occur evenly over its duration.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKActionTimingLinear</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKActionTimingMode.EaseOut">
            <summary>
                <p>Specifies ease-out pacing. Ease-out pacing causes the animation to begin quickly, and then slow as it completes.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKActionTimingEaseOut</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKActionTimingMode.EaseIn">
            <summary>
                <p>Specifies ease-in pacing. Ease-in pacing causes the animation to begin slowly, and then speed up as it progresses.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKActionTimingEaseIn</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKActionTimingMode.EaseInEaseOut">
            <summary>
                <p>Specifies ease-in ease-out pacing. An ease-in ease-out animation begins slowly, accelerates through the middle of its duration, and then slows again before completing.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKActionTimingEaseInEaseOut</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKBlendMode">
            <summary>
            The modes that describe how the source and destination pixel colors are used to calculate the new destination color.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKBlendMode.Subtract">
            <summary>
                <p>The source color is subtracted from the destination color.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKBlendModeSubtract</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKBlendMode.Replace">
            <summary>
                <p>The source color replaces the destination color.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKBlendModeReplace</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKBlendMode.Alpha">
            <summary>
                <p>Blends the source and destination colors by multiplying the source alpha value.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKBlendModeAlpha</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKBlendMode.Multiply">
            <summary>
                <p>The source color is multiplied by the destination color.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKBlendModeMultiply</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKBlendMode.Add">
            <summary>
                <p>The source and destination colors are added together.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKBlendModeAdd</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKBlendMode.MultiplyX2">
            <summary>
                <p>The source color is multiplied by the destination color and then doubled.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKBlendModeMultiplyX2</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKBlendMode.Screen">
            <summary>
                <p>The source color is added to the destination color times the inverted source color.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKBlendModeScreen</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKCropNode">
            <summary>
            An <c>SKCropNode</c> crops the pixels drawn by its children so that only some of the pixels are rendered to the parent’s framebuffer.
            </summary>
            <remarks>
                <p>To use a crop node, you add child nodes as you would for any other node. Then you set the crop node’s <c>maskNode</c> property to point to another node. When rendered, the crop mask renders its mask node and uses the resulting values to determine which pixels of its children should be rendered to the parent’s framebuffer.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKCropNode.UP_SKCropNode_get_maskNode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKCropNode.UP_SKCropNode_set_maskNode(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKCropNode.UP_SKCropNode_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKCropNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKCropNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKCropNode.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKCropNode" /> class.
            <br></br>Equivalent to the native <c>[[SKCropNode alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKCropNode.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKCropNode.ClassExists">
            <summary>
            Returns whether the native SKCropNode class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKCropNode.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKCropNode.maskNode">
            <summary>
            The node used to determine the crop node’s mask.
            <br></br>Equivalent to the native <c>maskNode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The node supplied to the crop node must not be a child of another node; however it may have children of its own.</p>
                <p>When the crop node’s contents are rendered, the crop node first draws its mask into a private buffer. Then, it renders its children. When rendering its children, each pixel is verified against the corresponding pixel in the mask. If the pixel in the mask has an alpha value of less than 0.05, the image pixel is masked out. Any pixel not rendered by the mask node is automatically masked out.</p>
                <p>The default value of this property is <c>null</c>, which indicates that the child nodes should not be cropped.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKEffectNode">
            <summary>
            An <c>SKEffectNode</c> object applies a Core Image filter to its rendered output, allowing you to incorporate sophisticated special effects in a scene.
            </summary>
            <remarks>
                <p>To use an effect node, set the effect node’s <c>filter</c> property to point to a Core Image filter and then enable the filter by setting the <c>shouldEnableEffects</c> property to <c>true</c>. When effects are enabled, the effect node renders its children to an image, applies the filter to it, and then blends the filtered image into the parent’s framebuffer.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_get_blendMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_set_blendMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_get_filter(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_set_filter(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_get_shouldCenterFilter(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_set_shouldCenterFilter(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_get_shouldEnableEffects(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_set_shouldEnableEffects(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_get_shouldRasterize(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_set_shouldRasterize(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.UP_SKEffectNode_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKEffectNode" /> class.
            <br></br>Equivalent to the native <c>[[SKEffectNode alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEffectNode.ClassExists">
            <summary>
            Returns whether the native SKEffectNode class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEffectNode.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEffectNode.blendMode">
            <summary>
            The blend mode used to draw the filtered image into the parent’s framebuffer.
            <br></br>Equivalent to the native <c>blendMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>SKBlendModeAlpha</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEffectNode.filter">
            <summary>
            The Core Image filter to apply.
            <br></br>Equivalent to the native <c>filter</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The Core Image filter must have a single <em>inputImage</em> parameter and produce a single <em>outputImage</em> parameter. The default value is <c>null</c>. If the value is <c>null</c> and the effect node is enabled, no filtering takes place. However, its children are still rendered in a separate pass and blended to the parent’s framebuffer.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property shouldEnableEffects</c></li>
                    <li>    <c>@property blendMode</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEffectNode.shouldCenterFilter">
            <summary>
            A Boolean value that determines whether the effect node automatically sets the filter’s image center.
            <br></br>Equivalent to the native <c>shouldCenterFilter</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>true</c> and the filter has an <em>inputCenter</em> parameter, then the effect node automatically sets the filter’s input center to the effect node’s origin. The default value is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEffectNode.shouldEnableEffects">
            <summary>
            A Boolean value that determines whether the effect node applies the filter to its children as they are drawn.
            <br></br>Equivalent to the native <c>shouldEnableEffects</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>true</c>, then the effect node applies the filter and blends the results. If the value is <c>false</c>, then the effect node is ignored and its children are rendered normally. The default value is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEffectNode.shouldRasterize">
            <summary>
            A Boolean value that indicates whether the results of rendering the child nodes should be cached.
            <br></br>Equivalent to the native <c>shouldRasterize</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>true</c>, the effect node caches the filtered image for use in future frames. If the value is <c>false</c>, then Sprite Kit discards the rendered image and redraws it from scratch the next time the node is rendered. The default value is <c>false</c>. Caching the rendered image uses more memory and may take more time to render. However, if the effect node’s descendants rarely change, caching can improve performance.</p>
                <p>When caching is enabled, changes to the effect node’s children automatically update the cached image in the next frame of animation. However, changing the filter’s properties does not.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKEmitterNode">
            <summary>
            A <c>SKEmitterNode</c> object is a node that automatically creates and renders small particle sprites. Particle sprites privately owned by Sprite Kit—your game cannot access the generated sprites. For example, this means you cannot add physics shapes to particles. Emitter nodes are often used to create smoke, fire, sparks, and other particle effects.
            </summary>
            <remarks>
                <p>A particle is a textured and colored node whose contents are blended into the framebuffer. Although there is no visible class representing particles added by the emitter node, you can think of a particle as having properties like any other object. When you configure the emitter, you set the birth rate of new particles and provide starting values for a particle’s properties. These properties include:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Position</p>
                    </li>
                    <li class="li">
                        <p>Velocity</p>
                    </li>
                    <li class="li">
                        <p>The amount that a particle is rotated and scaled</p>
                    </li>
                    <li class="li">
                        <p>A particle color and the blending factor used to blend the color with the particle’s texture</p>
                    </li>
                    <li class="li">
                        <p>An alpha value and blend mode used to blend a particle into the parent’s framebuffer</p>
                    </li>
                    <li class="li">
                        <p>The lifetime of a particle</p>
                    </li>
                </ul>
                <p>For each property, you configure the average starting value and a range of acceptable values. The emitter node chooses a random value that lies within this range. </p>
                <p>Some properties also allow you to specify a speed or acceleration property that modifies the value of that property over a particle’s lifetime. For example, if the emitter creates particles with an initial alpha of <c>1.0</c> and an alpha speed of <c>-0.2</c>, then a particle’s alpha decreases from <c>1.0</c> to <c>0.0</c> over a period of five seconds, creating a particle that fades from view. You can also use keyframe sequence objects to specify more complex changes over the lifetime of the particle.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_emissionAngle(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_emissionAngle(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_emissionAngleRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_emissionAngleRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_numParticlesToEmit(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_numParticlesToEmit(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleAction(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleAction(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleAlpha(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleAlpha(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleAlphaRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleAlphaRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleAlphaSequence(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleAlphaSequence(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleAlphaSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleAlphaSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleBirthRate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleBirthRate(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleBlendMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleBlendMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorAlphaRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorAlphaRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorAlphaSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorAlphaSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorBlendFactor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorBlendFactor(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorBlendFactorRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorBlendFactorRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorBlendFactorSequence(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorBlendFactorSequence(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorBlendFactorSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorBlendFactorSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorBlueRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorBlueRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorBlueSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorBlueSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorGreenRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorGreenRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorGreenSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorGreenSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorRedRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorRedRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorRedSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorRedSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleColorSequence(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleColorSequence(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleLifetime(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleLifetime(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleLifetimeRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleLifetimeRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particlePosition(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particlePosition(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particlePositionRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particlePositionRange(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleRotation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleRotation(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleRotationRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleRotationRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleRotationSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleRotationSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleScale(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleScale(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleScaleRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleScaleRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleScaleSequence(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleScaleSequence(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleScaleSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleScaleSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleSize(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleSize(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleSpeed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleSpeed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleSpeedRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleSpeedRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleTexture(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleTexture(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleZPosition(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleZPosition(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_particleZPositionRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_particleZPositionRange(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_targetNode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_targetNode(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_xAcceleration(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_xAcceleration(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_get_yAcceleration(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_set_yAcceleration(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_advanceSimulationTime_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_resetSimulation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.UP_SKEmitterNode_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKEmitterNode" /> class.
            <br></br>Equivalent to the native <c>[[SKEmitterNode alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.ClassExists">
            <summary>
            Returns whether the native SKEmitterNode class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.emissionAngle">
            <summary>
            The average initial direction of a particle, expressed as an angle in radians.
            <br></br>Equivalent to the native <c>emissionAngle</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property emissionAngleRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.emissionAngleRange">
            <summary>
            The range of allowed random values for a particle’s initial speed, expressed as an angle in radians.
            <br></br>Equivalent to the native <c>emissionAngleRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the emission angle of each particle is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property emissionAngle</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.numParticlesToEmit">
            <summary>
            The number of particles the emitter should emit before stopping.
            <br></br>Equivalent to the native <c>numParticlesToEmit</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0</c>, which indicates that emitter creates an endless stream of particles. If a non-zero value is provided, then the emitter stops generating particles after it has created the specified number of particles.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleAction">
            <summary>
            Specifies an action executed by new particles.
            <br></br>Equivalent to the native <c>particleAction</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Adding complex actions to particles can severely impact the performance of the particle emitter. Also, because the particles do not exist as an explicit node that you can manipulate, you cannot remove the actions from existing particles.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleAlpha">
            <summary>
            The average starting alpha value for a particle.
            <br></br>Equivalent to the native <c>particleAlpha</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The particle alpha value is equivalent to the <c>alpha</c> property of the <c>SKNode</c> class. The alpha component of the color that results from the texture and color blending state is multiplied by a particle’s alpha value. The resulting particle color is then blended with the parent’s framebuffer. The default value is <c>1.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleAlphaRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleAlphaRange">
            <summary>
            The range of allowed random values for a particle’s starting alpha value.
            <br></br>Equivalent to the native <c>particleAlphaRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the initial alpha value of each particle is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleAlpha</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleAlphaSequence">
            <summary>
            The sequence used to specify the alpha value of a particle over its lifetime.
            <br></br>Equivalent to the native <c>particleAlphaSequence</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>null</c>. If a non-<c>null</c> value is specified, then the <c>particleAlpha</c>, <c>particleAlphaRange</c>, and <c>particleAlphaSpeed</c> properties are ignored. Instead, the sequence is used to specify the alpha value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleAlphaSpeed">
            <summary>
            The rate at which the alpha value of a particle changes per second.
            <br></br>Equivalent to the native <c>particleAlphaSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleBirthRate">
            <summary>
            The rate at which new particles are created.
            <br></br>Equivalent to the native <c>particleBirthRate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The number of particles generated by the emitter every second. The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleBlendMode">
            <summary>
            The blending mode used to blend particles into the framebuffer.
            <br></br>Equivalent to the native <c>particleBlendMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>SKBlendModeAlpha</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColor">
            <summary>
            The average initial color for a particle.
            <br></br>Equivalent to the native <c>particleColor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>[UIColor clearColor]</c>.</p>
                <p>A particle’s color is blended with the texture using its blend color factor. See  “Determining How the Particle Texture Is Blended with the Particle Color.” </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleColorAlphaRange</c></li>
                    <li>    <c>@property particleColorRedRange</c></li>
                    <li>    <c>@property particleColorGreenRange</c></li>
                    <li>    <c>@property particleColorBlueRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorAlphaRange">
            <summary>
            The range of allowed random values for the alpha component of a particle’s initial color.
            <br></br>Equivalent to the native <c>particleColorAlphaRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the starting alpha component of a particle’s color is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleColor</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorAlphaSpeed">
            <summary>
            The rate at which the alpha component of a particle’s color changes per second.
            <br></br>Equivalent to the native <c>particleColorAlphaSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorBlendFactor">
            <summary>
            The average starting value for the color blend factor.
            <br></br>Equivalent to the native <c>particleColorBlendFactor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>, which means that the texture is used as is, ignoring the particle’s color. Otherwise, the texture is blended with the color.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleColorBlendFactorRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorBlendFactorRange">
            <summary>
            The range of allowed random values for a particle’s starting color blend factor.
            <br></br>Equivalent to the native <c>particleColorBlendFactorRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the initial color blend factor of each particle is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleColorBlendFactor</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorBlendFactorSequence">
            <summary>
            The sequence used to specify the color blend factor of a particle over its lifetime.
            <br></br>Equivalent to the native <c>particleColorBlendFactorSequence</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>null</c>. If a non-<c>null</c> value is specified, then the <c>particleColorBlendFactor</c>, <c>particleColorBlendFactorRange</c>, and <c>particleColorBlendFactorSpeed</c> properties are ignored. Instead, the sequence is used to specify the color blend factor.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorBlendFactorSpeed">
            <summary>
            The rate at which the color blend factor changes per second.
            <br></br>Equivalent to the native <c>particleColorBlendFactorSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorBlueRange">
            <summary>
            The range of allowed random values for the blue component of a particle’s initial color.
            <br></br>Equivalent to the native <c>particleColorBlueRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the starting blue component of a particle’s color is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleColor</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorBlueSpeed">
            <summary>
            The rate at which the blue component of a particle’s color changes per second.
            <br></br>Equivalent to the native <c>particleColorBlueSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorGreenRange">
            <summary>
            The range of allowed random values for the green component of a particle’s initial color.
            <br></br>Equivalent to the native <c>particleColorGreenRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the starting green component of a particle’s color is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleColor</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorGreenSpeed">
            <summary>
            The rate at which the green component of a particle’s color changes per second.
            <br></br>Equivalent to the native <c>particleColorGreenSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorRedRange">
            <summary>
            The range of allowed random values for the red component of a particle’s initial color.
            <br></br>Equivalent to the native <c>particleColorRedRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the starting red component of a particle’s color is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleColor</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorRedSpeed">
            <summary>
            The rate at which the red component of a particle’s color changes per second.
            <br></br>Equivalent to the native <c>particleColorRedSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleColorSequence">
            <summary>
            The sequence used to specify the color components of a particle over its lifetime.
            <br></br>Equivalent to the native <c>particleColorSequence</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>null</c>. If a non-<c>null</c> value is specified, then the <c>particleColor</c>, <c>particleColorAlphaRange</c>, <c>particleColorRedRange</c>, <c>particleColorGreenRange</c>, <c>particleColorBlueRange</c>, <c>particleColorAlphaSpeed</c>, <c>particleColorRedSpeed</c>, <c>particleColorGreenSpeed</c>, and <c>particleColorBlueSpeed</c> properties are ignored. Instead, the sequence is used to specify the particle color.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleLifetime">
            <summary>
            The average lifetime of a particle, in seconds.
            <br></br>Equivalent to the native <c>particleLifetime</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleLifetimeRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleLifetimeRange">
            <summary>
            The range of allowed random values for a particle’s lifetime.
            <br></br>Equivalent to the native <c>particleLifetimeRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the lifetime of each particle is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleLifetime</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particlePosition">
            <summary>
            The average starting position for a particle.
            <br></br>Equivalent to the native <c>particlePosition</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>(0.0,0.0)</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particlePositionRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particlePositionRange">
            <summary>
            The range of allowed random values for a particle’s position.
            <br></br>Equivalent to the native <c>particlePositionRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>(0.0,0.0)</c>. If a component is non-zero, the same component of a particle’s position is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particlePosition</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleRotation">
            <summary>
            The average initial rotation of a particle, expressed as an angle in radians.
            <br></br>Equivalent to the native <c>particleRotation</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleRotationRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleRotationRange">
            <summary>
            The range of allowed random values for a particle’s initial rotation, expressed as an angle in radians.
            <br></br>Equivalent to the native <c>particleRotationRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the initial rotation of each particle is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleRotation</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleRotationSpeed">
            <summary>
            The speed at which a particle rotates, expressed in radians per second.
            <br></br>Equivalent to the native <c>particleRotationSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This is uniform for all particles generated by the emitter. The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleScale">
            <summary>
            The average initial scale factor of a particle.
            <br></br>Equivalent to the native <c>particleScale</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>1.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleScaleRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleScaleRange">
            <summary>
            The range of allowed random values for a particle’s initial scale.
            <br></br>Equivalent to the native <c>particleScaleRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the initial scale of each particle is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleScale</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleScaleSequence">
            <summary>
            The sequence used to specify the scale factor of a particle over its lifetime.
            <br></br>Equivalent to the native <c>particleScaleSequence</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>null</c>. If a non-<c>null</c> value is specified, then the <c>particleScale</c>, <c>particleScaleRange</c>, and <c>particleScaleSpeed</c> properties are ignored. Instead, the sequence is used to specify the scale factor.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleScaleSpeed">
            <summary>
            The rate at which a particle’s scale factor changes per second.
            <br></br>Equivalent to the native <c>particleScaleSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleSize">
            <summary>
            The starting size of each particle.
            <br></br>Equivalent to the native <c>particleSize</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>CGSizeZero</c>. If set to the default, the size of the texture stored in the <c>particleTexture</c> property is used to determine the size of a particle. If a texture has not been assigned, you must set this property to a non-empty size.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleTexture</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleSpeed">
            <summary>
            The average initial speed of a new particle in points per second.
            <br></br>Equivalent to the native <c>particleSpeed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleSpeedRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleSpeedRange">
            <summary>
            The range of allowed random values for a particle’s initial speed.
            <br></br>Equivalent to the native <c>particleSpeedRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the speed of each particle is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleSpeed</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleTexture">
            <summary>
            The texture to use to render a particle.
            <br></br>Equivalent to the native <c>particleTexture</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A particle is rendered as if it were a <c>SKSpriteNode</c> object. The default value is <c>null</c>, which means a colored rectangle is used to draw the particle. If a non-<c>null</c> value is specified, then the texture is colorized and used to draw particles.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleSize</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleZPosition">
            <summary>
            The average starting depth of a particle.
            <br></br>Equivalent to the native <c>particleZPosition</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particleZPositionRange</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.particleZPositionRange">
            <summary>
            The range of allowed random values for a particle’s depth.
            <br></br>Equivalent to the native <c>particleZPositionRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. If non-zero, the z position of each particle is randomly determined and may vary by plus or minus half of the range value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property particlePosition</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.targetNode">
            <summary>
            The target node which renders the emitter’s particles.
            <br></br>Equivalent to the native <c>targetNode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>null</c>, which means that particles are treated as if they were children of the emitter node. In future frames of animation, the particle positions are affected by the emitter node’s properties. If you specify a different target node, the initial properties of new particles are calculated based on the emitter node’s properties, but in future frames of animation the particles are treated as if they were children of the target node.</p>
                <p>For example, assume you have an emitter node as a child of the scene node and the node is being rotated by changing its <c>zRotation</c> property. The behavior of the emitter node changes based on the value of the target node:</p>
                <ul class="ul">
                    <li class="li">
                        <p>If the <c>targetNode</c> property is <c>null</c>, then the positions of both previously generated and new particles are rotated.</p>
                    </li>
                    <li class="li">
                        <p>If the <c>targetNode</c> property points to the scene node, then new particles are adjusted when the emitter node rotates, but previously generated particles are not.</p>
                    </li>
                </ul>
                <p>By spawning the particles inside the scene node, they have behavior independent of the emitter’s properties.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.xAcceleration">
            <summary>
            The acceleration to apply to a particle’s horizontal velocity.
            <br></br>Equivalent to the native <c>xAcceleration</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is useful for simulating wind, gravity and other effects. It is uniformly applied to all particles generated by the emitter.</p>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.yAcceleration">
            <summary>
            The acceleration to apply to a particle’s vertical velocity.
            <br></br>Equivalent to the native <c>yAcceleration</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is useful for simulating wind, gravity and other effects. It is uniformly applied to all particles generated by the emitter.</p>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.AdvanceSimulationTime(System.Double)">
            <summary>
            Advances the emitter particle simulation.
            <br></br>Equivalent to the native <c>advanceSimulationTime:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The number of seconds to simulate.</p>
                <b>Discussion</b>
                <p>Once added to a scene, an emitter node automatically creates new particles in new animation frames. This method allows you to artificially advance an emitter’s simulation, causing it to generate new particles and advance any existing particles. The most common use for this method is to prepopulate an emitter node with particles after it is first added to a scene.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKEmitterNode.ResetSimulation">
            <summary>
            Removes all existing particles and restarts the simulation.
            <br></br>Equivalent to the native <c>resetSimulation</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Resetting the simulation clears the internal state of the simulation.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKInterpolationMode">
            <summary>
            The modes used to interpolate between keyframes in the sequence.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKInterpolationMode.Spline">
            <summary>
                <p>Values between two keyframes using a spline curve.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKInterpolationModeSpline</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKInterpolationMode.Step">
            <summary>
                <p>Values between two keyframes are not interpolated. Instead, the value is that of the most recent keyframe.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKInterpolationModeStep</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKInterpolationMode.Linear">
            <summary>
                <p>Values between two keyframes are interpolated linearly.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKInterpolationModeLinear</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence">
            <summary>
            An <c>SKKeyframeSequence</c> object specifies values for keyframes so that when a particle in an emitter node is simulated, that particle gets its keyframe values from the keyframe sequence (instead of from the normal emitter properties controlling that particle). The sequence specifies the values for these keyframes.
            </summary>
            <remarks>
                <p>The value objects stored in a keyframe sequence vary depending on which particle property is being animated.  Table 1  lists the particle emitter properties and the corresponding class for the data that must be stored in the sequence. All value objects stored in the sequence must have the same class.</p>
                <table class="graybox" border="0" cellspacing="0" cellpadding="5">
                    <caption class="tablecaption">
                        <strong class="caption_number">Table 1</strong>  Emitter properties for keyframe sequences</caption>
                    <tr>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>
                                <c>SKEmitterNode</c> property</p>
                        </th>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>Value class</p>
                        </th>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>particleColorSequence</c>
                            </p>
                        </td>
                        <td>
                            <p>
                                <c>UIColor</c>
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>particleColorBlendFactorSequence</c>
                            </p>
                        </td>
                        <td>
                            <p>
                                <c>double</c> containing a floating point value.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>particleScaleSequence</c>
                            </p>
                        </td>
                        <td>
                            <p>
                                <c>double</c> containing a floating point value.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>particleAlphaSequence</c>
                            </p>
                        </td>
                        <td>
                            <p>
                                <c>double</c> containing a floating point value.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>
                                    <!--a target="_self" -->particleRotationSequence<!--/a--></c>
                            </p>
                        </td>
                        <td>
                            <p>
                                <c>double</c> containing a floating point value.</p>
                        </td>
                    </tr>
                </table>
                <p>The time values stored in the sequence are specified in a normalized range of <c>0.0</c> to <c>1.0</c>, where <c>0</c> is the time when the particle was created and <c>1.0</c> is the time when the particle dies. You can provide keyframe values for the entire lifetime of the particle or for a subset of the particle’s lifetime. If you choose to cover only a subset of the particle’s lifetime, the <c>repeatMode</c> property determines how samples are determined for time values that lie outside the specified range. </p>
                <p>The <c>interpolationMode</c> property determines how samples between the keyframe values are calculated.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_get_interpolationMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_set_interpolationMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_get_repeatMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_set_repeatMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_addKeyframeValue_time_(System.String,System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_count(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_getKeyframeTimeForIndex_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_getKeyframeValueForIndex_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_alloc_initWithCapacity_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_alloc_initWithKeyframeValues_times_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_removeKeyframeAtIndex_(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_removeLastKeyframe(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_sampleAtTime_(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_setKeyframeTime_forIndex_(System.String,System.Single,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_setKeyframeValue_forIndex_(System.String,System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.UP_SKKeyframeSequence_setKeyframeValue_time_forIndex_(System.String,System.String,System.Single,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence" /> class.
            <br></br>Equivalent to the native <c>[[SKKeyframeSequence alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.ClassExists">
            <summary>
            Returns whether the native SKKeyframeSequence class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.interpolationMode">
            <summary>
            The mode used to determine how values for times between the keyframes are calculated.
            <br></br>Equivalent to the native <c>interpolationMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The possible values are defined in  “Interpolation Modes.”  The default value is <c>SKInterpolationModeLinear</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.repeatMode">
            <summary>
            The mode used to determine how the keyframe sequence repeats.
            <br></br>Equivalent to the native <c>repeatMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The possible values are defined in  “Repeat Modes.”  The default value is <c>SKRepeatModeClamp</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.AddKeyframeValue(System.Object,System.Single)">
            <summary>
            Adds a keyframe to the sequence.
            <br></br>Equivalent to the native <c>addKeyframeValue:time:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>value</em>
                <p>An object that defines the value to add. It must have the same class as other value objects stored in the sequence.</p>
                <em>time</em>
                <p>The corresponding time.</p>
                <b>Discussion</b>
                <p>The new keyframe is appended to the end of the array.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="value">
            </param>
            <param name="time">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.Count">
            <summary>
            The number of keyframes in the sequence.
            <br></br>Equivalent to the native <c>count</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The number of keyframes in the sequence.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.GetKeyframeTime(System.UInt32)">
            <summary>
            Gets the time for a keyframe in the sequence.
            <br></br>Equivalent to the native <c>getKeyframeTimeForIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>index</em>
                <p>The index of the keyframe.</p>
                <b>Return Value</b>
                <p>The time value for the keyframe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.GetKeyframeValue(System.UInt32)">
            <summary>
            Gets the value for a keyframe in the sequence.
            <br></br>Equivalent to the native <c>getKeyframeValueForIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>index</em>
                <p>The index of the keyframe.</p>
                <b>Return Value</b>
                <p>The value object for the keyframe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.#ctor(System.UInt32)">
            <summary>
            Creates an instance of the native SKKeyframeSequence and initializes the object. Initializes a new keyframe sequence.
            <br></br>Equivalent to the native <c>[[SKKeyframeSequence alloc] initWithCapacity:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>numItems</em>
                <p>The initial capacity of the new sequence.</p>
                <b>Return Value</b>
                <p>A newly initialized empty sequence.</p>
                <b>Discussion</b>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="numItems">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.#ctor(System.Object[],System.Object[])">
            <summary>
            Creates an instance of the native SKKeyframeSequence and initializes the object. Initializes a keyframe sequence with an initial set of values and times.
            <br></br>Equivalent to the native <c>[[SKKeyframeSequence alloc] initWithKeyframeValues:times:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>values</em>
                <p>An array of value objects that define the keyframe values for the sequence.</p>
                <em>times</em>
                <p>An array of <c>double</c> objects containing floating-point values that specify the time values for the keyframes.</p>
                <b>Return Value</b>
                <p>A newly initialized sequence.</p>
                <b>Discussion</b>
                <p>The two arrays must have an identical number of elements. The keyframes in the new sequence are stored in the same order as the input arrays.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="values">
            </param>
            <param name="times">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.RemoveKeyframeAtIndex(System.UInt32)">
            <summary>
            Removes a keyframe from the sequence.
            <br></br>Equivalent to the native <c>removeKeyframeAtIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>index</em>
                <p>The index of the keyframe value to remove.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.RemoveLastKeyframe">
            <summary>
            Removes the last value in the sequence.
            <br></br>Equivalent to the native <c>removeLastKeyframe</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.SampleAtTime(System.Single)">
            <summary>
            Calculates the sample at a particular time.
            <br></br>Equivalent to the native <c>sampleAtTime:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>time</em>
                <p>The time value to sample.</p>
                <b>Return Value</b>
                <p>An object that contains the interpolated sample. The class of this object matches the class of the values stored in the keyframe sequence.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="time">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.SetKeyframeTime(System.Single,System.UInt32)">
            <summary>
            Changes the time for a specific keyframe.
            <br></br>Equivalent to the native <c>setKeyframeTime:forIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>time</em>
                <p>The new time value for the keyframe.</p>
                <em>index</em>
                <p>The index of the keyframe to change.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="time">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.SetKeyframeValue(System.Object,System.UInt32)">
            <summary>
            Changes the value for a specific keyframe.
            <br></br>Equivalent to the native <c>setKeyframeValue:forIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>value</em>
                <p>The new value for the keyframe.</p>
                <em>index</em>
                <p>The index of the keyframe to change.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="value">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKKeyframeSequence.SetKeyframeValue(System.Object,System.Single,System.UInt32)">
            <summary>
            Replaces a keyframe in the sequence with a new keyframe.
            <br></br>Equivalent to the native <c>setKeyframeValue:time:forIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>value</em>
                <p>The new value for the keyframe.</p>
                <em>time</em>
                <p>The new time for the keyframe.</p>
                <em>index</em>
                <p>The index of the keyframe to change.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="value">
            </param>
            <param name="time">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKLabelHorizontalAlignmentMode">
            <summary>
            Options for aligning text horizontally.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKLabelHorizontalAlignmentMode.Center">
            <summary>
                <p>Centers the text horizontally on the node’s origin.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKLabelHorizontalAlignmentModeCenter</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKLabelHorizontalAlignmentMode.Left">
            <summary>
                <p>Positions the text so that that the left side of the text is on the node’s origin.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKLabelHorizontalAlignmentModeLeft</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKLabelHorizontalAlignmentMode.Right">
            <summary>
                <p>Positions the text so that that the right side of the text is on the node’s origin.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKLabelHorizontalAlignmentModeRight</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKLabelNode">
            <summary>
            An <c>SKLabelNode</c> is a node that draws a string.
            </summary>
            <remarks>
                <p>To use a label node, create a new label node by calling the <c>labelNodeWithFontNamed:</c> class method. Then configure the other label properties, especially the <c>text</c> property.</p>
                <p>The size of a label node is determined implicitly by the label node’s <c>fontName</c>, <c>fontSize</c>, and <c>text</c> properties. By default, the text label is centered horizontally on the label node’s origin, with the font’s baseline passing through the origin. The <c>verticalAlignmentMode</c> and <c>horizontalAlignmentMode</c> properties can be used to adjust the label’s position relative to the origin.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_blendMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_blendMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_color(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_color(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_colorBlendFactor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_colorBlendFactor(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_fontColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_fontColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_fontName(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_fontName(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_fontSize(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_fontSize(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_horizontalAlignmentMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_horizontalAlignmentMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_text(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_text(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_get_verticalAlignmentMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_set_verticalAlignmentMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_alloc_initWithFontNamed_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.UP_SKLabelNode_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKLabelNode" /> class.
            <br></br>Equivalent to the native <c>[[SKLabelNode alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.ClassExists">
            <summary>
            Returns whether the native SKLabelNode class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.blendMode">
            <summary>
            The blend mode used to draw the label into the parent’s framebuffer.
            <br></br>Equivalent to the native <c>blendMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>SKBlendModeAlpha</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.color">
            <summary>
            The label’s blend color.
            <br></br>Equivalent to the native <c>color</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property colorBlendFactor</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.colorBlendFactor">
            <summary>
            A floating-point value that describes how the color is blended with the font color.
            <br></br>Equivalent to the native <c>colorBlendFactor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value must be a number between <c>0.0</c> and <c>1.0</c>, inclusive. The default value (<c>0.0</c>) indicates that color property is ignored and that the label’s font color should be used unmodified. For values greater than <c>0.0</c>, the font color is blended first with the blend color.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property color</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.fontColor">
            <summary>
            The color of the label.
            <br></br>Equivalent to the native <c>fontColor</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.fontName">
            <summary>
            The font used for the text in the label.
            <br></br>Equivalent to the native <c>fontName</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.fontSize">
            <summary>
            The size of the font used in the label.
            <br></br>Equivalent to the native <c>fontSize</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.horizontalAlignmentMode">
            <summary>
            The horizontal position of the text relative to the node’s position.
            <br></br>Equivalent to the native <c>horizontalAlignmentMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The possible values for this property are listed in <c>“Text Horizontal Alignment Modes”</c>. The default value of this property is <c>SKLabelHorizontalAlignmentModeCenter</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.text">
            <summary>
            The string that the label node displays.
            <br></br>Equivalent to the native <c>text</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKLabelNode.verticalAlignmentMode">
            <summary>
            The vertical position of the text relative to the node’s position.
            <br></br>Equivalent to the native <c>verticalAlignmentMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The possible values for this property are listed in <c>“Text Vertical Alignment Modes”</c>. The default value of this property is <c>SKLabelVerticalAlignmentModeBaseline</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKLabelNode.#ctor(System.String)">
            <summary>
            Creates an instance of the native SKLabelNode and initializes the object. Initializes a new label object.
            <br></br>Equivalent to the native <c>[[SKLabelNode alloc] initWithFontNamed:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>fontName</em>
                <p>The name of the font used by the label.</p>
                <b>Return Value</b>
                <p>An initialized label object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="fontName">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKLabelVerticalAlignmentMode">
            <summary>
            Options for aligning text vertically.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKLabelVerticalAlignmentMode.Baseline">
            <summary>
                <p>Positions the text so that the font’s baseline lies on the node’s origin.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKLabelVerticalAlignmentModeBaseline</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKLabelVerticalAlignmentMode.Center">
            <summary>
                <p>Centers the text vertically on the node’s origin.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKLabelVerticalAlignmentModeCenter</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKLabelVerticalAlignmentMode.Bottom">
            <summary>
                <p>Positions the text so that the bottom of the text is on the node’s origin.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKLabelVerticalAlignmentModeBottom</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKLabelVerticalAlignmentMode.Top">
            <summary>
                <p>Positions the text so that the top of the text is on the node’s origin.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKLabelVerticalAlignmentModeTop</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKNode">
            <summary>
            The <c>SKNode</c> class is the fundamental building block of most Sprite Kit content. All visual elements in a Sprite Kit-based game are drawn using predefined <c>SKNode</c> subclasses.
            </summary>
            <remarks>
                <p> Table 1  describes the node subclasses provided in Sprite Kit.</p>
                <table class="graybox" border="0" cellspacing="0" cellpadding="5">
                    <caption class="tablecaption">
                        <strong class="caption_number">Table 1</strong>  Node subclasses</caption>
                    <tr>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>Class</p>
                        </th>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>Description</p>
                        </th>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKSpriteNode</c>
                            </p>
                        </td>
                        <td>
                            <p>A node that draws a textured sprite.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKVideoNode</c>
                            </p>
                        </td>
                        <td>
                            <p>A node that plays video content.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKLabelNode</c>
                            </p>
                        </td>
                        <td>
                            <p>A node that renders a text string.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKShapeNode</c>
                            </p>
                        </td>
                        <td>
                            <p>A node that renders a shape based on a Core Graphics path.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKEmitterNode</c>
                            </p>
                        </td>
                        <td>
                            <p>A node that creates and renders particles.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKCropNode</c>
                            </p>
                        </td>
                        <td>
                            <p>A node that crops its child nodes using a mask.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKEffectNode</c>
                            </p>
                        </td>
                        <td>
                            <p>A node that applies a Core Image filter to its child nodes.</p>
                        </td>
                    </tr>
                </table>
                <b>Characteristics of Nodes</b>
                <p>Nodes are organized hierarchically into node trees, similar to how views and subviews work. Most commonly, a node tree is defined with a scene node (<c>SKScene</c>) as the root node and other content nodes as descendants. The scene node runs an animation loop that processes actions on the nodes, simulates physics, and then renders the contents of the node tree for display.</p>
                <p>Every node in a node tree provides a coordinate system to its children. After a child is added to the node tree, it is positioned inside its parent’s coordinate system by setting its <c>position</c> properties. A node’s coordinate system can be scaled and rotated by changing its <c>xScale</c>, <c>yScale</c>, and <c>zRotation</c> properties. When a node’s coordinate system is scaled or rotated, this transformation is applied both to the node’s own content and that of its descendants.</p>
                <p>The <c>SKNode</c> class does not perform any drawing of its own. However, many <c>SKNode</c> subclasses render visual content and so the <c>SKNode</c> class understands some visual concepts:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The <c>frame</c> property provides the bounding rectangle for a node’s visual content, modified by the scale and rotation properties. The frame is non-empty if the node’s class draws content. Each node subclass determines the size of this content differently. In some subclasses, the size of the node’s content is declared explicitly, such as in the <c>SKSpriteNode</c> class. In other subclasses, the content size is calculated implicitly by the class using other object properties. For example, a <c>SKLabelNode</c> object determines its content size using the label’s message text and font characteristics.</p>
                    </li>
                    <li class="li">
                        <p>A node’s accumulated frame, retrieved by calling the <c>calculateAccumulatedFrame</c> method, is the largest rectangle that includes the frame of the node and the frames of all its descendants.</p>
                    </li>
                    <li class="li">
                        <p> Other properties, such as the <c>alpha</c> and <c>hidden</c> properties, affect how the node and its descendants are drawn.</p>
                    </li>
                </ul>
                <p>All nodes are responder objects that can respond directly to user interaction with the node onscreen. You can also convert between coordinate systems and perform hit testing to determine which nodes a point lies in. You can also perform intersections between nodes in the tree to determine if their physical areas overlap.</p>
                <p>Any node in the tree may run <strong>actions</strong>, which are used to animate the properties of a node, add or remove nodes, play sounds or other custom tasks. Actions are the heart of the animation system in Sprite Kit.</p>
                <p>A node can support a physics body, which is an object that simulates the physical properties of the object. When a node has a physics body, the physics simulation automatically computes a new position for the physics body and then moves and rotates the node to match that position.</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	When you subclass <c>SKNode</c> or any of its subclasses, if you add properties to the class that need to be archived, you must implement the <c>NSCoding</c> protocol on your subclasses. See <em>Archives and Serializations Programming Guide</em>.</p>
                <p class="spaceabove">	Unlike views, you cannot create <c>SKNode</c> subclasses that perform custom drawing. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_alpha(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_alpha(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_children(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_frame(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_hidden(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_hidden(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_name(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_name(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_parent(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_paused(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_paused(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_physicsBody(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_physicsBody(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_position(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_position(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_scene(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_speed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_speed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_userData(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_userData(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_userInteractionEnabled(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_userInteractionEnabled(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_xScale(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_xScale(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_yScale(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_yScale(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_zPosition(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_zPosition(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_get_zRotation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_set_zRotation(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_actionForKey_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_addChild_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_calculateAccumulatedFrame(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_childNodeWithName_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_containsPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_convertPoint_fromNode_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_convertPoint_toNode_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_enumerateChildNodesWithName_usingBlock_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_hasActions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_inParentHierarchy_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_insertChild_atIndex_(System.String,System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_intersectsNode_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_nodeAtPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_nodesAtPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_removeActionForKey_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_removeAllActions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_removeAllChildren(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_removeChildrenInArray_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_removeFromParent(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_runAction_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_runAction_completion_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_runAction_withKey_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.UP_SKNode_setScale_(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKNode" /> class.
            <br></br>Equivalent to the native <c>[[SKNode alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.ClassExists">
            <summary>
            Returns whether the native SKNode class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.alpha">
            <summary>
            The transparency value applied to the node’s contents.
            <br></br>Equivalent to the native <c>alpha</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>1.0</c>.</p>
                <p>The <c>SKNode</c> class does not perform drawing, but many of its subclasses do. When a node or any of its descendants are drawn, the alpha component of each pixel is multiplied by the node’s <c>alpha</c> property and then clamped to the range <c>0.0</c>-<c>1.0</c>. This modified alpha value is used to blend the pixel into the framebuffer. Subclasses that render content define properties that determine the blending operations used in conjunction with the alpha value to blend pixels into the parent’s framebuffer.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.children">
            <summary>
            The node’s children. (read-only)
            <br></br>Equivalent to the native <c>children</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The objects in this array are all <c>SKNode</c> objects.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.frame">
            <summary>
            A rectangle in the parent’s coordinate system that contains the node’s content, ignoring the node’s children. (read-only)
            <br></br>Equivalent to the native <c>frame</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The frame is the smallest rectangle that contains the node’s content, taking into account the node’s <c>xScale</c>, <c>yScale</c>, and <c>zRotation</c> properties. Not all nodes contain content of their own.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– calculateAccumulatedFrame</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.hidden">
            <summary>
            A Boolean value that determines whether a node and its descendants are rendered.
            <br></br>Equivalent to the native <c>hidden</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When hidden, a node and its descendants are not rendered. However, they still exist in the scene and continue to interact in other ways. For example, the node’s actions still run and the node can still be intersected with other nodes. The default value is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property paused</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.name">
            <summary>
            The node’s assignable name.
            <br></br>Equivalent to the native <c>name</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Used to assign a name to a node for later reference. When choosing a name for a node, you should decide whether each node gets a unique name or whether some nodes will share a common name. If you give the node a unique name, you can find the node later by calling the <c>childNodeWithName:</c> method. If a name is shared by multiple nodes, the name usually means that these are all a similar object type in your game. In this case, you can iterate over those objects by calling the <c>enumerateChildNodesWithName:usingBlock:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– childNodeWithName:</c>
                    </li>
                    <li>
                        <c>– enumerateChildNodesWithName:usingBlock:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.parent">
            <summary>
            The node’s parent node. (read-only)
            <br></br>Equivalent to the native <c>parent</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the node is not in a node tree, the value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.paused">
            <summary>
            A Boolean value that determines whether actions on the node and its descendants are processed.
            <br></br>Equivalent to the native <c>paused</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value is <c>true</c>, the node (and all of its descendants) are skipped when a scene processes actions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.physicsBody">
            <summary>
            The physics body associated with the node.
            <br></br>Equivalent to the native <c>physicsBody</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>null</c>, which indicates that the node does not participate in the physics simulation at all. If a physics body is provided, then when the scene’s physics are simulated, the physics body updates the node’s position and rotates the node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.position">
            <summary>
            The position of the node in its parent's coordinate system.
            <br></br>Equivalent to the native <c>position</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>(0.0,0.0)</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.scene">
            <summary>
            The scene node that contains the node. (read-only)
            <br></br>Equivalent to the native <c>scene</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the node is not embedded in a scene, the value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.speed">
            <summary>
            A speed modifier applied to all actions executed by a node and its descendants.
            <br></br>Equivalent to the native <c>speed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>1.0</c>, which means that all actions run at their normal speed. If you set a different speed, time appears to run faster or slower for all actions executed on the node and its descendants. For example, if you set a speed value of <c>2.0</c>, actions run twice as fast.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.userData">
            <summary>
            A dictionary containing arbitrary data.
            <br></br>Equivalent to the native <c>userData</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You use this property to store your own data in a node. For example, you might store game-specific data about each node to use inside your game logic. This can be a useful alternative to creating your own node subclasses to hold game data.</p>
                <p>Sprite Kit does not do anything with the data stored in the node. However, the data is archived when the node is archived.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.userInteractionEnabled">
            <summary>
            A Boolean value that indicates whether the node receives touch events.
            <br></br>Equivalent to the native <c>userInteractionEnabled</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.xScale">
            <summary>
            A scaling factor that multiplies the width of a node and its children.
            <br></br>Equivalent to the native <c>xScale</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>xScale</c> property scales the width of the node and all of its descendants. The scale value affects how a node’s frame is calculated, its hit test area, how it is drawn, and other similar characteristics. The default value is <c>1.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property frame</c></li>
                    <li>
                        <c>– calculateAccumulatedFrame</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.yScale">
            <summary>
            A scaling factor that multiplies the height of a node and its children.
            <br></br>Equivalent to the native <c>yScale</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>yScale</c> property scales the height of the node and all of its descendants. The scale value affects how a node’s frame is calculated, its hit test area, how it is drawn, and other similar characteristics. The default value is <c>1.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property frame</c></li>
                    <li>
                        <c>– calculateAccumulatedFrame</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.zPosition">
            <summary>
            The height of the node.
            <br></br>Equivalent to the native <c>zPosition</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>. The +z axis is projected towards the viewer so that nodes with larger z values are closer to the viewer. When a node tree is rendered, all nodes in the tree are rendered from smallest z value to largest z value. If multiple nodes share the same z position, those nodes are sorted so that parent nodes are drawn before their children, and siblings are rendered in the order that they appear in their parent’s <c>children</c> array. Hit testing is processed in the opposite order.</p>
                <p>The <c>SKView</c> class’s <c>ignoresSiblingOrder</c> property controls whether node sorting is enabled.</p>
                <p>
                    <strong>Important:</strong> Descendants of a <c>SKCropNode</c> or a <c>SKEffectNode</c> are not rendered with other nodes in the same tree. An effect node renders its children into a private framebuffer as a separate pass, then the composited image is rendered as part of the tree contains the effect node. A crop node works similarly when rendering both the mask and its descendants</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property children</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKNode.zRotation">
            <summary>
            The Euler rotation about the z axis (in radians).
            <br></br>Equivalent to the native <c>zRotation</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>, which indicates no rotation. A positive value indicates a counterclockwise rotation. When the coordinate system is rotated, it affects the node and its descendants. The rotation affects the node’s <c>frame</c> property, hit testing, rendering, and other similar characteristics.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property frame</c></li>
                    <li>
                        <c>– calculateAccumulatedFrame</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.Action(System.String)">
            <summary>
            Returns an action associated with a specific key.
            <br></br>Equivalent to the native <c>actionForKey:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>key</em>
                <p>A string that uniquely identifies a action.</p>
                <b>Return Value</b>
                <p>If an action exists that matches the key, the action object is returned. Otherwise, <c>null</c> is returned.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– runAction:withKey:</c>
                    </li>
                </ul>
            </remarks>
            <param name="key">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.AddChild(U3DXT.iOS.Native.SpriteKit.SKNode)">
            <summary>
            Adds a node to the end of the receiver’s list of child nodes.
            <br></br>Equivalent to the native <c>addChild:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>node</em>
                <p>The node to add.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property children</c></li>
                </ul>
            </remarks>
            <param name="node">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.CalculateAccumulatedFrame">
            <summary>
            Calculates a rectangle in the parent’s coordinate system that contains the content of the node and all of its descendants.
            <br></br>Equivalent to the native <c>calculateAccumulatedFrame</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The frame takes into the account the cumulative effect of the <c>xScale</c>, <c>yScale</c>, and <c>zRotation</c> properties of each node in the subtree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property frame</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.ChildNode(System.String)">
            <summary>
            Searches the children of the receiving node for a node with a specific name.
            <br></br>Equivalent to the native <c>childNodeWithName:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>name</em>
                <p>The name to search for.</p>
                <b>Return Value</b>
                <p>If a node object with that name is found, the method returns the node object. Otherwise, it returns <c>null</c>.</p>
                <b>Discussion</b>
                <p>If more than one child share the same name, the earliest node in the child array is returned.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property name</c></li>
                </ul>
            </remarks>
            <param name="name">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.ContainsPoint(UnityEngine.Vector2)">
            <summary>
            Returns a Boolean value that indicates whether a point lies inside the node’s bounding box.
            <br></br>Equivalent to the native <c>containsPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>p</em>
                <p>A point in the node’s coordinate system.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the point lies inside the node’s bounding box; otherwise <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="p">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.ConvertPointFromNode(UnityEngine.Vector2,U3DXT.iOS.Native.SpriteKit.SKNode)">
            <summary>
            Converts a point from the coordinate system of another node in the node tree to the coordinate system of this node.
            <br></br>Equivalent to the native <c>convertPoint:fromNode:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>A point in the other node’s coordinate system.</p>
                <em>node</em>
                <p>Another node in the same node tree as this node.</p>
                <b>Return Value</b>
                <p>The same point converted to this node’s coordinate system.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
            <param name="node">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.ConvertPointToNode(UnityEngine.Vector2,U3DXT.iOS.Native.SpriteKit.SKNode)">
            <summary>
            Converts a point in this node’s coordinate system to the coordinate system of another node in the node tree.
            <br></br>Equivalent to the native <c>convertPoint:toNode:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>A point in this node’s coordinate system.</p>
                <em>node</em>
                <p>Another node in the same node tree as this node.</p>
                <b>Return Value</b>
                <p>The same point converted to the other node’s coordinate system.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
            <param name="node">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.EnumerateChildNodes(System.String,System.Action{U3DXT.iOS.Native.SpriteKit.SKNode,System.Boolean})">
            <summary>
            Search the children of the receiving node to perform processing for nodes which share a name.
            <br></br>Equivalent to the native <c>enumerateChildNodesWithName:usingBlock:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>name</em>
                <p>The name to search for.</p>
                <em>block</em>
                <p>A block to execute on nodes that match the <em>name</em> parameter. The block takes the following arguments:</p>
                <p>
                </p>
                <em>node</em>
                <p>A node that matches the name.</p>
                <em>stop</em>
                <p>A pointer to a Boolean variable. Your block can set this to <c>true</c> to terminate the enumeration.</p>
                <b>Discussion</b>
                <p>This method enumerates the child array in order, searching for nodes whose name matches the search parameter. The block is called once for each node that matches the name parameter.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property name</c></li>
                </ul>
            </remarks>
            <param name="name">
            </param>
            <param name="block"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.HasActions">
            <summary>
            Returns a Boolean value that indicates whether the node is executing actions.
            <br></br>Equivalent to the native <c>hasActions</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the node has any executing actions, otherwise <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.InParentHierarchy(U3DXT.iOS.Native.SpriteKit.SKNode)">
            <summary>
            Returns a Boolean value that indicates whether the node is a descendant of the target node.
            <br></br>Equivalent to the native <c>inParentHierarchy:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>parent</em>
                <p>An <c>SKNode</c> object to test against.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the node is a descendant of the <em>parent</em> node, otherwise <c>false</c>.</p>
                <b>Discussion</b>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="parent">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.InsertChild(U3DXT.iOS.Native.SpriteKit.SKNode,System.Int32)">
            <summary>
            Inserts a child into a specific position in the receiver’s list of child nodes.
            <br></br>Equivalent to the native <c>insertChild:atIndex:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>node</em>
                <p>The node to add.</p>
                <em>index</em>
                <p>The position in the array to insert the node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property children</c></li>
                </ul>
            </remarks>
            <param name="node">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.IntersectsNode(U3DXT.iOS.Native.SpriteKit.SKNode)">
            <summary>
            Returns a Boolean value that indicates whether this node intersects the specified node.
            <br></br>Equivalent to the native <c>intersectsNode:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>node</em>
                <p>Another node in the same node tree.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the two nodes intersect; otherwise <c>false</c>.</p>
                <b>Discussion</b>
                <p>The two nodes are considered to intersect if their frames intersect. The children of both nodes are ignored in this test.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="node">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.NodeAtPoint(UnityEngine.Vector2)">
            <summary>
            Returns the deepest descendant that intersects a point.
            <br></br>Equivalent to the native <c>nodeAtPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>p</em>
                <p>A point in the node’s coordinate system.</p>
                <b>Return Value</b>
                <p>A descendant in the subtree that intersects the point, or the receiver if no nodes intersect the point. If multiple descendants intersect the point, then the deepest node in the tree is returned. If multiple nodes are at the same level, the intersecting node with the smallest z position is returned.</p>
                <b>Discussion</b>
                <p>A point is considered to be in a node if it lies inside the rectangle returned by the <c>calculateAccumulatedFrame</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="p">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.NodesAtPoint(UnityEngine.Vector2)">
            <summary>
            Returns an array of all descendants that intersect a point.
            <br></br>Equivalent to the native <c>nodesAtPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>p</em>
                <p>A point in the node’s coordinate system.</p>
                <b>Return Value</b>
                <p>An array of all <c>SKNode</c> objects in the subtree that intersect the point. If no nodes intersect the point, an empty array is returned.</p>
                <b>Discussion</b>
                <p>A point is considered to be in a node if it lies inside the rectangle returned by the <c>calculateAccumulatedFrame</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="p">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.RemoveAction(System.String)">
            <summary>
            Removes an action associated with a specific key.
            <br></br>Equivalent to the native <c>removeActionForKey:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>key</em>
                <p>A string that uniquely identifies an action.</p>
                <b>Discussion</b>
                <p>If an action is found that matches the key, it is removed from the node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="key">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.RemoveAllActions">
            <summary>
            Ends and removes all actions from the node.
            <br></br>Equivalent to the native <c>removeAllActions</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When an action is removed from the node, any remaining animation the action would perform is skipped; however, previous changes are not reverted. It is possible that an action may make a final change to the scene when removed; if so, it is documented for the specific action in <em>SKAction Class Reference</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.RemoveAllChildren">
            <summary>
            Removes all of the node’s children.
            <br></br>Equivalent to the native <c>removeAllChildren</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property children</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.RemoveChildrenInArray(System.Object[])">
            <summary>
            Removes a list of children from the receiving node.
            <br></br>Equivalent to the native <c>removeChildrenInArray:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>nodes</em>
                <p>An array of <c>SKNode</c> objects that are all children of the receiving node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property children</c></li>
                </ul>
            </remarks>
            <param name="nodes">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.RemoveFromParent">
            <summary>
            Removes the receiving node from its parent.
            <br></br>Equivalent to the native <c>removeFromParent</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property parent</c></li>
                    <li>    <c>@property children</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.RunAction(U3DXT.iOS.Native.SpriteKit.SKAction)">
            <summary>
            Adds an action to the list of actions executed by the node.
            <br></br>Equivalent to the native <c>runAction:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>action</em>
                <p>The action to perform.</p>
                <b>Discussion</b>
                <p>The new action is processed the next time the scene’s animation loop is processed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="action">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.RunAction(U3DXT.iOS.Native.SpriteKit.SKAction,System.Action)">
            <summary>
            Adds an action to the list of actions executed by the node. Your block is called when the action completes.
            <br></br>Equivalent to the native <c>runAction:completion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>action</em>
                <p>The action to perform.</p>
                <em>block</em>
                <p>A completion block called when the action completes.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="action">
            </param>
            <param name="block"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.RunAction(U3DXT.iOS.Native.SpriteKit.SKAction,System.String)">
            <summary>
            Adds an identifiable action to the list of actions executed by the node.
            <br></br>Equivalent to the native <c>runAction:withKey:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>action</em>
                <p>The action to perform.</p>
                <em>key</em>
                <p>A unique key used to identify the action.</p>
                <b>Discussion</b>
                <p>This method is identical to <c>runAction:</c>, but the action is stored so that it can be retrieved later. If an action using the same key is already running, it is removed before the new action is added.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– actionForKey:</c>
                    </li>
                </ul>
            </remarks>
            <param name="action">
            </param>
            <param name="key">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKNode.SetScale(System.Single)">
            <summary>
            Sets the <c>xScale</c> and <c>yScale</c> properties of the node.
            <br></br>Equivalent to the native <c>setScale:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scale</em>
                <p>The new value to use for the node’s <c>xScale</c> and <c>yScale</c> properties.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="scale">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody">
            <summary>
            An <c>SKPhysicsBody</c> object is used to add physics simulation to a node. When a scene processes a new frame, it performs physics calculations on physics bodies attached to nodes in the scene. These calculations include gravity, friction, and collisions with other bodies. You can also apply your own forces and impulses to a body. After the scene completes these calculations, it updates the positions and orientations of the node objects.
            </summary>
            <remarks>
                <p>To add physics to a node, create and configure an <c>SKPhysicsBody</c> object and then assign it to the <c>physicsBody</c> property of the <c>SKNode</c> object. A physics body must be associated with a node object before you apply forces or impulses to it.</p>
                <p>Sprite Kit supports two kinds of physics bodies, <strong>volume-based bodies</strong> and <strong>edge-based bodies</strong>. When you create a physics body, its kind, size, and shape are determined by the constructor method you call. An edge-based body does not have mass or volume, and is unaffected by forces or impulses in the system. Edge-based bodies are used to represent volume-less boundaries or hollow spaces in your physics simulation. In contrast, volume-based bodies are used to represent objects with mass and volume. By default, a volume-based body is affected by gravity, friction, collisions with other objects, and forces or impulses you directly apply to the object. The <c>dynamic</c> property allows you to override this behavior.</p>
                <p>The <c>SKPhysicsBody</c> class defines the physical characteristics for the body when it is simulated by the scene. For volume-based bodies, the most important property is the <c>mass</c> property. A volume-based body is assumed to have a uniform density. You can either set the <c>mass</c> property directly or you can set the body’s <c>density</c> property and let the physics body calculate its own mass. All values in Sprite Kit are specified using the International System of Units (SI units). The actual forces and mass values are not important so long as your game uses consistent values.</p>
                <p>When you design a game that uses physics, you define the different categories of physics objects that appear in the scene. You define up to 32 different categories of physics bodies, and a body can be assigned to as many of these categories as you want. In addition to declaring its own categories, a physics body also declares which categories of bodies it interacts with. See  “Working with Collisions and Contacts.” </p>
                <p>For a volume-based body, you can dynamically control how the body is affected by forces or collisions. See  “Defining How Forces Affect a Physics Body.” </p>
                <b>Other Related Physics Classes</b>
                <p>You can connect physics bodies together using joints. See <em>SKPhysicsJoint Class Reference</em>.</p>
                <p>A scene’s <c>physicsWorld</c> property holds an <c>SKPhysicsWorld</c> object that provides physics characteristics that affect the entire scene.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_bodyWithCircleOfRadius_(System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_bodyWithEdgeChainFromPath_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_bodyWithEdgeFromPoint_toPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_bodyWithEdgeLoopFromPath_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_bodyWithEdgeLoopFromRect_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_bodyWithPolygonFromPath_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_bodyWithRectangleOfSize_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_affectedByGravity(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_affectedByGravity(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_allowsRotation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_allowsRotation(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_angularDamping(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_angularDamping(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_angularVelocity(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_angularVelocity(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_area(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_categoryBitMask(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_categoryBitMask(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_collisionBitMask(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_collisionBitMask(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_contactTestBitMask(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_contactTestBitMask(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_density(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_density(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_dynamic(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_dynamic(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_friction(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_friction(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_joints(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_linearDamping(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_linearDamping(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_mass(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_mass(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_node(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_resting(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_resting(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_restitution(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_restitution(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_usesPreciseCollisionDetection(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_usesPreciseCollisionDetection(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_get_velocity(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_set_velocity(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_allContactedBodies(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_applyAngularImpulse_(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_applyForce_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_applyForce_atPoint_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_applyImpulse_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_applyImpulse_atPoint_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.UP_SKPhysicsBody_applyTorque_(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsBody alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.ClassExists">
            <summary>
            Returns whether the native SKPhysicsBody class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.Body(System.Single)">
            <summary>
            Creates a circular physics body centered on the owning node’s origin.
            <br></br>Equivalent to the native <c>bodyWithCircleOfRadius:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>r</em>
                <p>The radius of the circle.</p>
                <b>Return Value</b>
                <p>A new volume-based physics body.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="r">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.BodyWithEdgeChain(U3DXT.iOS.Native.CoreGraphics.CGPath)">
            <summary>
            Creates an edge chain from a path.
            <br></br>Equivalent to the native <c>bodyWithEdgeChainFromPath:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>A Core Graphics path. The points are specified relative to the owning node’s origin. The path must not intersect itself.</p>
                <b>Return Value</b>
                <p>A new edge-based physics body.</p>
                <b>Discussion</b>
                <p>An edge has no volume or mass and is always treated as if the <c>dynamic</c> property is equal to <c>false</c>. Edges may only collide with volume-based physics bodies.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="path">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.Body(UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Creates an edge between two points.
            <br></br>Equivalent to the native <c>bodyWithEdgeFromPoint:toPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>p1</em>
                <p>The starting point for the edge, relative to the owning node’s origin.</p>
                <em>p2</em>
                <p>The ending point for the edge, relative to the owning node’s origin.</p>
                <b>Return Value</b>
                <p>A new edge-based physics body.</p>
                <b>Discussion</b>
                <p>An edge has no volume or mass and is always treated as if the <c>dynamic</c> property is equal to <c>false</c>. Edges may only collide with volume-based physics bodies.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="p1">
            </param>
            <param name="p2">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.BodyWithEdgeLoop(U3DXT.iOS.Native.CoreGraphics.CGPath)">
            <summary>
            Creates an edge loop from a path.
            <br></br>Equivalent to the native <c>bodyWithEdgeLoopFromPath:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>A Core Graphics path. The points are specified relative to the owning node’s origin. The path must not intersect itself. </p>
                <b>Return Value</b>
                <p>A new edge-based physics body.</p>
                <b>Discussion</b>
                <p>If the path is not already closed, a loop is automatically created by joining the last point to the first.</p>
                <p>An edge has no volume or mass and is always treated as if the <c>dynamic</c> property is equal to <c>false</c>. Edges may only collide with volume-based physics bodies.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="path">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.Body(UnityEngine.Rect)">
            <summary>
            Creates an edge loop from a rectangle.
            <br></br>Equivalent to the native <c>bodyWithEdgeLoopFromRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>The rectangle that defines the edges. The rectangle is specified relative to the owning node’s origin.</p>
                <b>Return Value</b>
                <p>A new edge-based physics body.</p>
                <b>Discussion</b>
                <p>An edge has no volume or mass and is always treated as if the <c>dynamic</c> property is equal to <c>false</c>. Edges may only collide with volume-based physics bodies.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.BodyWithPolygon(U3DXT.iOS.Native.CoreGraphics.CGPath)">
            <summary>
            Creates a polygon-shaped physics body.
            <br></br>Equivalent to the native <c>bodyWithPolygonFromPath:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>path</em>
                <p>A convex polygonal path with counterclockwise winding and no self intersections. The points are specified relative to the owning node’s origin.</p>
                <b>Return Value</b>
                <p>A new volume-based physics body.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="path">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.Body(U3DXT.Utils.Size)">
            <summary>
            Creates a rectangular physics body centered on the owning node’s origin.
            <br></br>Equivalent to the native <c>bodyWithRectangleOfSize:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>s</em>
                <p>The size of the rectangle.</p>
                <b>Return Value</b>
                <p>A new volume-based physics body.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="s">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.affectedByGravity">
            <summary>
            A Boolean value that indicates whether this physics body is affected by the physics world’s gravitational force.
            <br></br>Equivalent to the native <c>affectedByGravity</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The physics world’s <c>gravity</c> property defines the gravitational forces applied to volume-based bodies in the scene. The default value is <c>true</c>. This property is ignored on edge-based bodies, which are unaffected by gravity.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.allowsRotation">
            <summary>
            A Boolean value that indicates whether the physics body may have angular forces and impulses applied to it.
            <br></br>Equivalent to the native <c>allowsRotation</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>true</c>. This property is ignored on edge-based bodies, which are unaffected by forces in the system.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.angularDamping">
            <summary>
            A property that reduces the body’s rotational velocity.
            <br></br>Equivalent to the native <c>angularDamping</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is used to simulate fluid or air friction forces on the body. The property must be a value between <c>0.0</c> and <c>1.0</c>. The default value is <c>0.1</c>. If the value is <c>0.0</c>, no angular damping is applied to the object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.angularVelocity">
            <summary>
            The physics body’s angular speed.
            <br></br>Equivalent to the native <c>angularVelocity</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The angular velocity is a pseudo vector around an axis vector of <c>(0.0,0.0,1.0)</c> measured in radians per second. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.area">
            <summary>
            The area covered by the body. (read-only)
            <br></br>Equivalent to the native <c>area</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is used in conjunction with the <c>density</c> property to calculate the body’s mass.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.categoryBitMask">
            <summary>
            A mask that defines which categories this physics body belongs to.
            <br></br>Equivalent to the native <c>categoryBitMask</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Every physics body in a scene can be assigned to up to 32 different categories, each corresponding to a bit in the bit mask. You define the mask values used in your game. In conjunction with the <c>collisionBitMask</c> and <c>contactTestBitMask</c> properties, you define which physics bodies interact with each other and when your game is notified of these interactions.</p>
                <p>The default value is <c>0xFFFFFFFF</c> (all bits set).</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property collisionBitMask</c></li>
                    <li>    <c>@property contactTestBitMask</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.collisionBitMask">
            <summary>
            A mask that defines which categories of physics bodies can collide with this physics body.
            <br></br>Equivalent to the native <c>collisionBitMask</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When two physics bodies contact each other, a collision may occur. This body’s collision mask is compared to the other body’s category mask by performing a logical AND operation. If the result is a non-zero value, then this body is affected by the collision. Each body independently chooses whether it wants to be affected by the other body. For example, you might use this to avoid collision calculations that would make negligible changes to a body’s velocity.</p>
                <p>The default value is <c>0xFFFFFFFF</c> (all bits set).</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property categoryBitMask</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.contactTestBitMask">
            <summary>
            A mask that defines which categories of bodies cause intersection notifications with this physics body.
            <br></br>Equivalent to the native <c>contactTestBitMask</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When two bodies share the same space, each body’s category mask is tested against the other body’s contact mask by performing a logical AND operation. If either comparison results in a non-zero value, an <c>SKPhysicsContact</c> object is created and passed to the physics world’s  delegate. For best performance, only set bits in the contacts mask for interactions you are interested in.</p>
                <p>The default value is <c>0x00000000</c> (all bits cleared).</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property categoryBitMask</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.density">
            <summary>
            The density of the object in kilograms per cubic meter.
            <br></br>Equivalent to the native <c>density</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The actual unit is arbitrary as long as relative masses of objects are consistent throughout the game.</p>
                <p>The <c>mass</c> and <c>density</c> properties are interrelated. When you change the value of either property, the other property’s value is automatically recalculated to be consistent.</p>
                <p>The default value is <c>1.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property mass</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.dynamic">
            <summary>
            A Boolean value that indicates whether the physics body is moved by the physics simulation.
            <br></br>Equivalent to the native <c>dynamic</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>true</c>. If the value is <c>false</c>, then the physics body ignores all forces and impulses applied to it.  This property is ignored on edge-based bodies; they are automatically static.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.friction">
            <summary>
            The roughness of the surface of the physics body.
            <br></br>Equivalent to the native <c>friction</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is used to apply a frictional force to physics bodies in contact with this physics body. The property must be a value between <c>0.0</c> and <c>1.0</c>. The default value is <c>0.2</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.joints">
            <summary>
            The joints connected to this physics body. (read-only)
            <br></br>Equivalent to the native <c>joints</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property holds an array of <c>SKPhysicsJoint</c> objects that define all joints added to the scene’s physics world that are connected to this physics body.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.linearDamping">
            <summary>
            A property that reduces the body’s linear velocity.
            <br></br>Equivalent to the native <c>linearDamping</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is used to simulate fluid or air friction forces on the body. The property must be a value between <c>0.0</c> and <c>1.0</c>. The default value is <c>0.1</c>. If the value is <c>0.0</c>, no linear damping is applied to the object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.mass">
            <summary>
            The mass of the body in kilograms.
            <br></br>Equivalent to the native <c>mass</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The actual unit is arbitrary as long as relative masses of objects are consistent throughout the game. The mass of the body affects its momentum as well as how forces are applied to the object.</p>
                <p>The <c>mass</c> and <c>density</c> properties are interrelated. When you change the value of either property, the other property’s value is automatically recalculated to be consistent. The default value is based on the size of the physics body and the body’s default density. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property density</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.node">
            <summary>
            The node that this body is connected to. (read-only)
            <br></br>Equivalent to the native <c>node</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You associate the body with a node by assigning it to the <c>physicsBody</c> property of the <c>SKNode</c> object. If the body is not associated with a node, the value is <c>null</c>.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.resting">
            <summary>
            A Boolean property that indicates whether the object is at rest within the physics simulation.
            <br></br>Equivalent to the native <c>resting</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is automatically set to <c>true</c> by the physics simulation when it determines that the body is at rest. This means that the body is at rest on another body in the system. Resting bodies do not participate in the physics simulation until an impulse is applied to the object or another object collides with it. This improves the performance of the physics simulation. If all bodies in the world are resting, then the entire simulation is at rest, reducing the number of calculations that are performed by the physics world. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.restitution">
            <summary>
            The bounciness of the physics body.
            <br></br>Equivalent to the native <c>restitution</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is used to determine how much energy the physics body loses when it bounces off another object. The property must be a value between <c>0.0</c> and <c>1.0</c>. The default value is <c>0.2</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.usesPreciseCollisionDetection">
            <summary>
            A Boolean value that determines whether the physics world uses a more precise collision detection algorithm.
            <br></br>Equivalent to the native <c>usesPreciseCollisionDetection</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>false</c>. If two bodies in a collision do not perform precise collision detection, and one passes completely through the other in a single frame, no collision is detected. If this property is set to <c>true</c> on either body, then the simulation performs a more precise and more expensive calculation to detect these collisions. This property should be set to <c>true</c> on small, fast moving bodies.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.velocity">
            <summary>
            The physics body’s velocity vector.
            <br></br>Equivalent to the native <c>velocity</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.AllContactedBodies">
            <summary>
            The physics bodies that this physics body is in contact with.
            <br></br>Equivalent to the native <c>allContactedBodies</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>An array of <c>SKPhysicsBody</c> objects that this body is in contact with.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property contactTestBitMask</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.ApplyAngularImpulse(System.Single)">
            <summary>
            Applies an impulse that imparts angular momentum to an object.
            <br></br>Equivalent to the native <c>applyAngularImpulse:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>impulse</em>
                <p>The magnitude of the impulse.</p>
                <b>Discussion</b>
                <p>The impulse is measured in newton-seconds, although in practice the units are arbitrary, so long as you choose values consistent throughout your scene.</p>
                <p>This method affects the body’s angular velocity without changing the body’s linear velocity.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="impulse">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.Apply(U3DXT.iOS.Native.CoreGraphics.CGVector)">
            <summary>
            Applies a force uniformly to a physics body.
            <br></br>Equivalent to the native <c>applyForce:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>force</em>
                <p>A vector that describes how much force was applied in each dimension.</p>
                <b>Discussion</b>
                <p>The impulse is measured in newtons, although in practice the units are arbitrary, so long as you choose values consistent with the body’s mass.</p>
                <p>This method accelerates the body without imparting any angular acceleration to it. The acceleration is applied for a single simulation step (one frame). </p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyForce:atPoint:</c>
                    </li>
                    <li>
                        <c>– applyTorque:</c>
                    </li>
                    <li>    <c>@property mass</c></li>
                </ul>
            </remarks>
            <param name="force">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.Apply(U3DXT.iOS.Native.CoreGraphics.CGVector,UnityEngine.Vector2)">
            <summary>
            Applies a force to a specific point of a physics body.
            <br></br>Equivalent to the native <c>applyForce:atPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>force</em>
                <p>A vector that describes how much force was applied in each dimension.</p>
                <em>point</em>
                <p>A point in scene coordinates that defines where the force was applied to the physics body.</p>
                <b>Discussion</b>
                <p>The impulse is measured in newtons, although in practice the units are arbitrary, so long as you choose values consistent throughout your scene.</p>
                <p>Because the force is applied to a specific point on the body, it may impart both linear acceleration and angular acceleration. The force is applied for a single simulation step (one frame).</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyForce:</c>
                    </li>
                    <li>    <c>@property mass</c></li>
                </ul>
            </remarks>
            <param name="force">
            </param>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.ApplyImpulse(U3DXT.iOS.Native.CoreGraphics.CGVector)">
            <summary>
            Applies an impulse uniformly to a physics body.
            <br></br>Equivalent to the native <c>applyImpulse:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>impulse</em>
                <p>A vector that describes how much momentum was imparted in each dimension.</p>
                <b>Discussion</b>
                <p>The impulse is measured in newton-seconds, although in practice the units are arbitrary, so long as you choose values consistent throughout your scene.</p>
                <p>This method affects the body’s linear velocity without changing the body’s angular velocity.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyImpulse:atPoint:</c>
                    </li>
                    <li>
                        <c>– applyAngularImpulse:</c>
                    </li>
                    <li>    <c>@property mass</c></li>
                </ul>
            </remarks>
            <param name="impulse">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.ApplyImpulse(U3DXT.iOS.Native.CoreGraphics.CGVector,UnityEngine.Vector2)">
            <summary>
            Applies an impulse to a specific point of a physics body.
            <br></br>Equivalent to the native <c>applyImpulse:atPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>impulse</em>
                <p>A vector that describes how much momentum was imparted in each dimension.</p>
                <em>point</em>
                <p>A point in scene coordinates that defines where the impulse was applied to the physics body.</p>
                <b>Discussion</b>
                <p>The impulse is measured in newton-seconds, although in practice the units are arbitrary, so long as you choose values consistent throughout your scene.</p>
                <p>Because this impulse is applied to a specific point on the object, it may change both the body’s velocity and angular velocity.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyImpulse:</c>
                    </li>
                    <li>
                        <c>– applyAngularImpulse:</c>
                    </li>
                    <li>    <c>@property mass</c></li>
                </ul>
            </remarks>
            <param name="impulse">
            </param>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsBody.ApplyTorque(System.Single)">
            <summary>
            Applies a torque to an object.
            <br></br>Equivalent to the native <c>applyTorque:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>torque</em>
                <p>The amount of torque, in newton-meters.</p>
                <b>Discussion</b>
                <p>This method generates an angular acceleration on the body without causing any linear acceleration. The force is applied for a single simulation step (one frame). </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– applyForce:</c>
                    </li>
                    <li>
                        <c>– applyForce:atPoint:</c>
                    </li>
                    <li>    <c>@property mass</c></li>
                </ul>
            </remarks>
            <param name="torque">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact">
            <summary>
            An <c>SKPhysicsContact</c> object is created automatically by Scene Kit to describes a contact between two physical bodies in a physics world.
            </summary>
            <remarks>
                <p>To receive contact messages, read the <c>physicsWorld</c> property of an <c>SKScene</c> object you are interested in, and assign its <c>contactDelegate</c> property to point to an object that implements the <c>SKPhysicsContactDelegate</c> protocol. Then, for each physics body in your scene, set the <c>categoryBitMask</c> and <c>contactTestBitMask</c> properties to define which interactions should generate contact messages.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.UP_SKPhysicsContact_get_bodyA(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.UP_SKPhysicsContact_get_bodyB(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.UP_SKPhysicsContact_get_collisionImpulse(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.UP_SKPhysicsContact_get_contactPoint(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsContact alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.ClassExists">
            <summary>
            Returns whether the native SKPhysicsContact class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.bodyA">
            <summary>
            The first body in the contact. (read-only)
            <br></br>Equivalent to the native <c>bodyA</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.bodyB">
            <summary>
            The second body in the contact. (read-only)
            <br></br>Equivalent to the native <c>bodyB</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.collisionImpulse">
            <summary>
            The impulse that specifies how hard these two bodies struck each other in newton-seconds. (read-only)
            <br></br>Equivalent to the native <c>collisionImpulse</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsContact.contactPoint">
            <summary>
            The contact point between the two physics bodies, in scene coordinates. (read-only)
            <br></br>Equivalent to the native <c>contactPoint</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate">
            <summary>
            An object that implements the <c>SKPhysicsContactDelegate</c> protocol can respond when two physics bodies are in contact with each other in a physics world. To receive contact messages, you set the <c>contactDelegate</c> property of a <c>SKPhysicsWorld</c> object. The delegate is called when a contact starts or ends.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate.UP_SKPhysicsContactDelegate_set__didBeginContact__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate.UP_SKPhysicsContactDelegate_set__didEndContact__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate.DidBegin(U3DXT.iOS.Native.SpriteKit.SKPhysicsContact)">
            <summary>
            (optional) Called when two bodies first contact each other.
            <br></br>Equivalent to the native <c>didBeginContact:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>contact</em>
                <p>An object that describes the contact.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="contact">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate.DidEnd(U3DXT.iOS.Native.SpriteKit.SKPhysicsContact)">
            <summary>
            (optional) Called when the contact ends between two physics bodies.
            <br></br>Equivalent to the native <c>didEndContact:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>contact</em>
                <p>An object that describes the contact.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="contact">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate._didBeginContact__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_didBeginContact__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsContactDelegate._didEndContact__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_didEndContact__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint">
            <summary>
            An <c>SKPhysicsJoint</c> object connects two physics bodies together so that they are simulated together by the physics world. You never instantiate objects of this class directly; instead, you instantiate one of the subclasses that defines the kind of joint you want to make. This class implements the common properties of the joint classes provided by Sprite Kit.
            </summary>
            <remarks>
                <p> Table 1  describes the kinds of joints you can create in Sprite Kit.</p>
                <table class="graybox" border="0" cellspacing="0" cellpadding="5">
                    <caption class="tablecaption">
                        <strong class="caption_number">Table 1</strong>  Joint classes implemented in Sprite Kit</caption>
                    <tr>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>Class Name</p>
                        </th>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>Description</p>
                        </th>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKPhysicsJointFixed</c>
                            </p>
                        </td>
                        <td>
                            <p>A fixed joint fuses the two bodies together at a reference point. Fixed joints are useful for creating complex shapes that can be broken apart later.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKPhysicsJointSliding</c>
                            </p>
                        </td>
                        <td>
                            <p>A sliding joint allows the two bodies to slide along a chosen axis.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKPhysicsJointSpring</c>
                            </p>
                        </td>
                        <td>
                            <p>A spring joint connects the two bodies with a spring whose length is the initial distance between the two bodies.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKPhysicsJointLimit</c>
                            </p>
                        </td>
                        <td>
                            <p>A limit joint imposes a maximum distance between the two bodies, as if they were connected by a rope.</p>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <p>
                                <c>SKPhysicsJointPin</c>
                            </p>
                        </td>
                        <td>
                            <p>A pin joint allows the two bodies to independently rotate around the anchor point as if pinned together.</p>
                        </td>
                    </tr>
                </table>
                <p>To use a physics joint, you follow these steps:</p>
                <ol class="ol">
                    <li class="li">
                        <p>Create two physics bodies.</p>
                    </li>
                    <li class="li">
                        <p>Attach the physics bodies to a pair of <c>SKNode</c> objects in the scene.</p>
                    </li>
                    <li class="li">
                        <p>Create a joint object using one of the subclasses listed in  Table 1 .</p>
                    </li>
                    <li class="li">
                        <p>If necessary, configure the joint object’s properties.</p>
                    </li>
                    <li class="li">
                        <p>Add the joint to the scene by calling the scene <c>SKPhysicsWorld</c> object’s <c>addJoint:</c> method.</p>
                    </li>
                </ol>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.UP_SKPhysicsJoint_get_bodyA(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.UP_SKPhysicsJoint_set_bodyA(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.UP_SKPhysicsJoint_get_bodyB(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.UP_SKPhysicsJoint_set_bodyB(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsJoint alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.ClassExists">
            <summary>
            Returns whether the native SKPhysicsJoint class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.bodyA">
            <summary>
            The first body connected by the joint.
            <br></br>Equivalent to the native <c>bodyA</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint.bodyB">
            <summary>
            The second body connected by the joint.
            <br></br>Equivalent to the native <c>bodyB</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed">
            <summary>
            An <c>SKPhysicsJointFixed</c> object fuses two physics bodies together at a reference point. Fixed joints are useful for creating complex shapes that can be broken apart later.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed.UP_SKPhysicsJointFixed_jointWithBodyA_bodyB_anchor_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsJointFixed alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed.ClassExists">
            <summary>
            Returns whether the native SKPhysicsJointFixed class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointFixed.Joint(U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,UnityEngine.Vector2)">
            <summary>
            Creates a new physics joint.
            <br></br>Equivalent to the native <c>jointWithBodyA:bodyB:anchor:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>bodyA</em>
                <p>The first body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>bodyB</em>
                <p>The second body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>anchor</em>
                <p>The anchor point for the connection in the scene’s coordinate system.</p>
                <b>Return Value</b>
                <p>A new physics joint.</p>
                <b>Discussion</b>
                <p>You must add the joint to a physics world associated with the scene before it takes effect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="bodyA">
            </param>
            <param name="bodyB">
            </param>
            <param name="anchor">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit">
            <summary>
            An <c>SKPhysicsJointLimit</c> object imposes a maximum distance between two physics bodies, as if they were connected by a rope.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.UP_SKPhysicsJointLimit_jointWithBodyA_bodyB_anchorA_anchorB_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.UP_SKPhysicsJointLimit_get_maxLength(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.UP_SKPhysicsJointLimit_set_maxLength(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsJointLimit alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.ClassExists">
            <summary>
            Returns whether the native SKPhysicsJointLimit class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.Joint(U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Creates a new limit joint.
            <br></br>Equivalent to the native <c>jointWithBodyA:bodyB:anchorA:anchorB:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>bodyA</em>
                <p>The first body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>bodyB</em>
                <p>The second body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>anchorA</em>
                <p>A connection point on the first body in the scene’s coordinate system.</p>
                <em>anchorB</em>
                <p>A connection point on the second body in the scene’s coordinate system.</p>
                <b>Return Value</b>
                <p>A new limit joint.</p>
                <b>Discussion</b>
                <p>You must add the joint to a physics world associated with the scene before it takes effect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="bodyA">
            </param>
            <param name="bodyB">
            </param>
            <param name="anchorA">
            </param>
            <param name="anchorB">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointLimit.maxLength">
            <summary>
            The maximum distance allowed between the two physics bodies connected by the limit joint.
            <br></br>Equivalent to the native <c>maxLength</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin">
            <summary>
            An <c>SKPhysicsJointPin</c> object allows two physics bodies to independently rotate around the anchor point as if pinned together. You can configure how far the two objects may rotate and the resistance to rotation.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_jointWithBodyA_bodyB_anchor_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_get_frictionTorque(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_set_frictionTorque(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_get_lowerAngleLimit(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_set_lowerAngleLimit(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_get_shouldEnableLimits(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_set_shouldEnableLimits(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_get_upperAngleLimit(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.UP_SKPhysicsJointPin_set_upperAngleLimit(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsJointPin alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.ClassExists">
            <summary>
            Returns whether the native SKPhysicsJointPin class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.Joint(U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,UnityEngine.Vector2)">
            <summary>
            Creates a new pin joint.
            <br></br>Equivalent to the native <c>jointWithBodyA:bodyB:anchor:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>bodyA</em>
                <p>The first body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>bodyB</em>
                <p>The second body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>anchor</em>
                <p>The connection point between the two bodies in the scene’s coordinate system.</p>
                <b>Return Value</b>
                <p>A new pin joint.</p>
                <b>Discussion</b>
                <p>You must add the joint to a physics world associated with the scene before it takes effect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="bodyA">
            </param>
            <param name="bodyB">
            </param>
            <param name="anchor">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.frictionTorque">
            <summary>
            The resistance applied by the pin joint to spinning around the anchor point.
            <br></br>Equivalent to the native <c>frictionTorque</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The range of values is from <c>0.0</c> to <c>1.0</c>. The default value is <c>0.0</c>. If a value greater than the default is specified, then friction is applied to reduce the object’s angular velocity around the pin.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.lowerAngleLimit">
            <summary>
            The smallest angle allowed for the pin joint.
            <br></br>Equivalent to the native <c>lowerAngleLimit</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                </p>
                <p>
                </p>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property shouldEnableLimits</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.shouldEnableLimits">
            <summary>
            A Boolean value that indicates whether the pin joint’s rotation is limited to a specific range of values.
            <br></br>Equivalent to the native <c>shouldEnableLimits</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>false</c>. If <c>true</c>, then the <c>lowerAngleLimit</c> and <c>upperAngleLimit</c> properties are used to limit the angle of the pin joint. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointPin.upperAngleLimit">
            <summary>
            The largest angle allowed for the pin joint.
            <br></br>Equivalent to the native <c>upperAngleLimit</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                </p>
                <p>
                </p>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property shouldEnableLimits</c></li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding">
            <summary>
            An <c>SKPhysicsJointSliding</c> object allows the anchor points of the two physics bodies to slide along a chosen axis. The joint can be configured to limit the distance that the two objects are allowed to slide along the axis.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.UP_SKPhysicsJointSliding_jointWithBodyA_bodyB_anchor_axis_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.UP_SKPhysicsJointSliding_get_lowerDistanceLimit(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.UP_SKPhysicsJointSliding_set_lowerDistanceLimit(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.UP_SKPhysicsJointSliding_get_shouldEnableLimits(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.UP_SKPhysicsJointSliding_set_shouldEnableLimits(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.UP_SKPhysicsJointSliding_get_upperDistanceLimit(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.UP_SKPhysicsJointSliding_set_upperDistanceLimit(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsJointSliding alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.ClassExists">
            <summary>
            Returns whether the native SKPhysicsJointSliding class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.Joint(U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,UnityEngine.Vector2,U3DXT.iOS.Native.CoreGraphics.CGVector)">
            <summary>
            Creates a new sliding joint.
            <br></br>Equivalent to the native <c>jointWithBodyA:bodyB:anchor:axis:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>bodyA</em>
                <p>The first body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>bodyB</em>
                <p>The second body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>anchor</em>
                <p>The anchor point for the connection in the scene’s coordinate system.</p>
                <em>axis</em>
                <p>A vector that defines the direction that the joint is allowed to slide.</p>
                <b>Return Value</b>
                <p>A new sliding joint.</p>
                <b>Discussion</b>
                <p>You must add the joint to a physics world associated with the scene before it takes effect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="bodyA">
            </param>
            <param name="bodyB">
            </param>
            <param name="anchor">
            </param>
            <param name="axis">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.lowerDistanceLimit">
            <summary>
            The smallest distance allowed for the sliding joint.
            <br></br>Equivalent to the native <c>lowerDistanceLimit</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                </p>
                <p>
                </p>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.shouldEnableLimits">
            <summary>
            A Boolean value that indicates whether the sliding joint is restricted so that the objects may only slide a finite distance from the initial anchor point.
            <br></br>Equivalent to the native <c>shouldEnableLimits</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>false</c>. If <c>true</c>, then the <c>lowerDistanceLimit</c> and <c>upperDistanceLimit</c> properties are used to limit the distance of the sliding joint.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSliding.upperDistanceLimit">
            <summary>
            The largest distance allowed for the sliding joint.
            <br></br>Equivalent to the native <c>upperDistanceLimit</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                </p>
                <p>
                </p>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring">
            <summary>
            An <c>SKPhysicsJointSpring</c> object simulates connecting two physics bodies together with a spring. The farther the two objects move from each other, the more force is applied to bring the two bodies back together.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.UP_SKPhysicsJointSpring_jointWithBodyA_bodyB_anchorA_anchorB_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.UP_SKPhysicsJointSpring_get_damping(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.UP_SKPhysicsJointSpring_set_damping(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.UP_SKPhysicsJointSpring_get_frequency(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.UP_SKPhysicsJointSpring_set_frequency(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsJointSpring alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.ClassExists">
            <summary>
            Returns whether the native SKPhysicsJointSpring class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.Joint(U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Creates a new spring joint.
            <br></br>Equivalent to the native <c>jointWithBodyA:bodyB:anchorA:anchorB:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>bodyA</em>
                <p>The first body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>bodyB</em>
                <p>The second body to connect. The body must be connected to a node that is already part of the scene’s node tree.</p>
                <em>anchorA</em>
                <p>The connection point on the first body in the scene’s coordinate system.</p>
                <em>anchorB</em>
                <p>The connection point on the second body in the scene’s coordinate system.</p>
                <b>Return Value</b>
                <p>A new spring joint.</p>
                <b>Discussion</b>
                <p>You must add the joint to a physics world associated with the scene before it takes effect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="bodyA">
            </param>
            <param name="bodyB">
            </param>
            <param name="anchorA">
            </param>
            <param name="anchorB">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.damping">
            <summary>
            A constant that defines how the spring’s motion should be damped due to the forces of friction.
            <br></br>Equivalent to the native <c>damping</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                </p>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsJointSpring.frequency">
            <summary>
            A constant that defines the frequency characteristics of the spring.
            <br></br>Equivalent to the native <c>frequency</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                </p>
                <p>
                </p>
                <p>The default value is <c>0.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld">
            <summary>
            An <c>SKPhysicsWorld</c> object simulates collisions and other physical properties. You do not create <c>SKPhysicsWorld</c> objects directly; instead, read the <c>physicsWorld</c> property of an <c>SKScene</c> object.
            </summary>
            <remarks>
                <p>The physics world object allows you to perform the following tasks:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Set global properties for the simulation, such as gravity</p>
                    </li>
                    <li class="li">
                        <p>Create joints between two physics bodies in the scene</p>
                    </li>
                    <li class="li">
                        <p>Set a delegate to receive notifications when two physics bodies are in contact with each other</p>
                    </li>
                    <li class="li">
                        <p>Determine which physics bodies within the scene intersect with points, rectangles, or rays</p>
                    </li>
                </ul>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_get_contactDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_set_contactDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_get_gravity(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_set_gravity(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_get_speed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_set_speed(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_addJoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_bodyAlongRayStart_end_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_bodyAtPoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_bodyInRect_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_enumerateBodiesAlongRayStart_end_usingBlock_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_enumerateBodiesAtPoint_usingBlock_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_enumerateBodiesInRect_usingBlock_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_removeAllJoints(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.UP_SKPhysicsWorld_removeJoint_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld" /> class.
            <br></br>Equivalent to the native <c>[[SKPhysicsWorld alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.ClassExists">
            <summary>
            Returns whether the native SKPhysicsWorld class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.contactDelegate">
            <summary>
            A delegate that is called when two physics bodies come in contact with each other.
            <br></br>Equivalent to the native <c>contactDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A contact is created when two physics bodies overlap and one of the physics bodies has a <c>contactTestBitMask</c> property that overlaps with the other body’s <c>categoryBitMask</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.gravity">
            <summary>
            A vector that specifies the gravitational acceleration applied to physics bodies in the physics world.
            <br></br>Equivalent to the native <c>gravity</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The components of this property are measured in meters per second. The default value is <c>(0.0,-9.8)</c>, which represent’s Earth’s gravity.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.speed">
            <summary>
            The rate at which the simulation executes.
            <br></br>Equivalent to the native <c>speed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>1.0</c>, which means the simulation runs at normal speed. A value other than the default changes the rate at which time passes in the physics simulation. For example, a speed value of <c>2.0</c> indicates that time in the physics simulation passes twice as fast as the scene’s simulation time. A value of <c>0.0</c> pauses the physics simulation.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.AddJoint(U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint)">
            <summary>
            Adds a joint to the physics world.
            <br></br>Equivalent to the native <c>addJoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>joint</em>
                <p>The joint to add.</p>
                <b>Discussion</b>
                <p>For a joint to take effect, it must be added to the physics world.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="joint">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.BodyAlongRayStart(UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Searches for the first physics body that intersects a ray.
            <br></br>Equivalent to the native <c>bodyAlongRayStart:end:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>start</em>
                <p>The starting point for the ray in scene coordinates.</p>
                <em>end</em>
                <p>The ending point for the ray in scene coordinates.</p>
                <b>Return Value</b>
                <p>The first physics body discovered that intersects the ray. If no body intersects the ray, this method returns <c>null</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="start">
            </param>
            <param name="end">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.BodyAtPoint(UnityEngine.Vector2)">
            <summary>
            Searches for the first physics body that contains a point.
            <br></br>Equivalent to the native <c>bodyAtPoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>A point in scene coordinates.</p>
                <b>Return Value</b>
                <p>The first physics body discovered that contains the point. If no body contains the point, this method returns <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.BodyInRect(UnityEngine.Rect)">
            <summary>
            Searches for the first physics body that intersect the specified rectangle.
            <br></br>Equivalent to the native <c>bodyInRect:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>A rectangle in scene coordinates.</p>
                <b>Return Value</b>
                <p>The first physics body discovered that intersects the rectangle. If no body intersects the rectangle, this method returns <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.EnumerateBodiesAlongRayStart(UnityEngine.Vector2,UnityEngine.Vector2,System.Action{U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,UnityEngine.Vector2,U3DXT.iOS.Native.CoreGraphics.CGVector,System.Boolean})">
            <summary>
            Enumerates all the physics bodies in the scene that intersect a ray.
            <br></br>Equivalent to the native <c>enumerateBodiesAlongRayStart:end:usingBlock:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>start</em>
                <p>The starting point for the ray in scene coordinates.</p>
                <em>end</em>
                <p>The ending point for the ray in scene coordinates.</p>
                <em>block</em>
                <p>A block to be called for each physics body that the ray touches. The block takes the following parameters:</p>
                <p>
                </p>	body<p>The physics body that the ray intersected.</p><p></p>	point<p>The point in scene coordinates where the ray contacted the physics body.</p><p></p>	normal<p>The normal vector for the physics body at the point of contact.</p><p></p>	stop<p>A pointer to a Boolean variable. Your block can set this to <c>true</c> to terminate the enumeration.</p><b>Availability</b><ul><li>Available in iOS 7.0 and later.</li></ul></remarks>
            <param name="start">
            </param>
            <param name="end">
            </param>
            <param name="block"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.EnumerateBodiesAtPoint(UnityEngine.Vector2,System.Action{U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,System.Boolean})">
            <summary>
            Enumerates all the physics bodies in the scene that contain a point.
            <br></br>Equivalent to the native <c>enumerateBodiesAtPoint:usingBlock:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>A point in scene coordinates.</p>
                <em>block</em>
                <p>A block to be called for each physics body that contains the point. The block takes the following parameters:</p>
                <p>
                </p>	body<p>The physics body that the ray intersected.</p>stop<p>A pointer to a Boolean variable. Your block can set this to <c>true</c> to terminate the enumeration.</p><b>Availability</b><ul><li>Available in iOS 7.0 and later.</li></ul></remarks>
            <param name="point">
            </param>
            <param name="block"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.EnumerateBodiesInRect(UnityEngine.Rect,System.Action{U3DXT.iOS.Native.SpriteKit.SKPhysicsBody,System.Boolean})">
            <summary>
            Enumerates all the physics bodies in the scene that intersect the specified rectangle.
            <br></br>Equivalent to the native <c>enumerateBodiesInRect:usingBlock:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>A rectangle in scene coordinates.</p>
                <em>block</em>
                <p>A block to be called for each physics body that contains the point. The block takes the following parameters:</p>
                <p>
                </p>	body<p>The physics body that intersected the rectangle.</p>stop<p>A pointer to a Boolean variable. Your block can set this to <c>true</c> to terminate the enumeration.</p><b>Availability</b><ul><li>Available in iOS 7.0 and later.</li></ul></remarks>
            <param name="rect">
            </param>
            <param name="block"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.RemoveAllJoints">
            <summary>
            Removes all joints from the physics world.
            <br></br>Equivalent to the native <c>removeAllJoints</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKPhysicsWorld.RemoveJoint(U3DXT.iOS.Native.SpriteKit.SKPhysicsJoint)">
            <summary>
            Removes a specific joint from the physics world.
            <br></br>Equivalent to the native <c>removeJoint:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>joint</em>
                <p>The joint to remove.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="joint">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKRepeatMode">
            <summary>
            The modes used to determine how the sequence repeats.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKRepeatMode.Clamp">
            <summary>
                <p>When a sample is calculated, the time value is clamped to the range of time values found in the sequence. For example, if the time value of the last keyframe in the sequence was <c>0.5</c>, then a sample at any time value from <c>0.5</c> to <c>1.0</c> returns the last keyframe’s value.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKRepeatModeClamp</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKRepeatMode.Loop">
            <summary>
                <p>When a sample is calculated, the sequence loops back to the beginning of the sequence. For example, if the time value of the last keyframe in the sequence was <c>0.5</c>, then a sample at any time value from <c>0.5</c> to <c>1.0</c> returns the same value as the sequence did from <c>0.0</c> to <c>0.5</c>.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKRepeatModeLoop</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKScene">
            <summary>
            An <c>SKScene</c> object represents a scene of content in Sprite Kit. A scene is the root node in a tree of Sprite Kit nodes (<c>SKNode</c>). These nodes provide content that the scene animates and renders for display. To display a scene, you present it from an <c>SKView</c> object.
            </summary>
            <remarks>
                <p>A scene calculates the contents of a new frame by processing the following actions in order:</p>
                <ol class="ol">
                    <li class="li">
                        <p>The scene calls its <c>update:</c> method.</p>
                    </li>
                    <li class="li">
                        <p>The scene executes actions on its children.</p>
                    </li>
                    <li class="li">
                        <p>The scene calls its <c>didEvaluateActions</c> method.</p>
                    </li>
                    <li class="li">
                        <p>The scene executes any physics simulations on physics bodies in the scene.</p>
                    </li>
                    <li class="li">
                        <p>The scene calls its <c>didSimulatePhysics</c> method.</p>
                    </li>
                </ol>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	Creating scene subclasses is expected. In a subclass, create the scene’s content and implement logic that is performed when the scene is animated.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_get_anchorPoint(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_set_anchorPoint(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_get_backgroundColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_set_backgroundColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_get_physicsWorld(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_get_scaleMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_set_scaleMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_get_size(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_set_size(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_get_view(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_convertPointFromView_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_convertPointToView_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_didChangeSize_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_didEvaluateActions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_didMoveToView_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_didSimulatePhysics(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_alloc_initWithSize_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_update_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_willMoveFromView_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.UP_SKScene_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKScene" /> class.
            <br></br>Equivalent to the native <c>[[SKScene alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKScene.ClassExists">
            <summary>
            Returns whether the native SKScene class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKScene.anchorPoint">
            <summary>
            Defines the point in the view’s frame that corresponds to the scene’s origin.
            <br></br>Equivalent to the native <c>anchorPoint</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You specify the value using the unit coordinate space. The default value is <c>(0,0)</c>, which on OS X corresponds to the lower-left corner of the view’s frame rectangle.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKScene.backgroundColor">
            <summary>
            The background color of the scene.
            <br></br>Equivalent to the native <c>backgroundColor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is a gray color (RGBA <c>0.15, 0.15, 0.15, 1.0)</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKScene.physicsWorld">
            <summary>
            The physics simulation associated with the scene. (read-only)
            <br></br>Equivalent to the native <c>physicsWorld</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Every scene automatically simulates physics on nodes configured to use physics bodies. You use this property to access the scene’s global physics properties, such as gravity.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKScene.scaleMode">
            <summary>
            Defines how the scene is mapped to the view that presents it.
            <br></br>Equivalent to the native <c>scaleMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>It is possible for a scene’s size to differ from the size of the view it is presented in. The scale mode determines the scene is mapped to the view. The possible values are listed in <c>“Scene Scaling Modes”</c>. The default value is <c>SKSceneScaleModeFill</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKScene.size">
            <summary>
            The dimensions of the scene in points.
            <br></br>Equivalent to the native <c>size</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– didChangeSize:</c>
                    </li>
                    <li>    <c>@property scaleMode</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKScene.view">
            <summary>
            The view that is currently presenting the scene. (read-only)
            <br></br>Equivalent to the native <c>view</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>To present a scene, you call the <c>presentScene:</c> method or <c>presentScene:transition:</c> method on the <c>SKView</c> class.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.ConvertPointFromView(UnityEngine.Vector2)">
            <summary>
            Converts a point from view coordinates to scene coordinates.
            <br></br>Equivalent to the native <c>convertPointFromView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>A point in view coordinates.</p>
                <b>Return Value</b>
                <p>The same point in the scene’s coordinate system.</p>
                <b>Discussion</b>
                <p>The scene must be presented in a view before calling this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.ConvertPointToView(UnityEngine.Vector2)">
            <summary>
            Converts a point from scene coordinates to view coordinates.
            <br></br>Equivalent to the native <c>convertPointToView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>A point in scene coordinates.</p>
                <b>Return Value</b>
                <p>The same point in the view’s coordinate system.</p>
                <b>Discussion</b>
                <p>The scene must be presented in a view before calling this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.DidChangeSize(U3DXT.Utils.Size)">
            <summary>
            Called whenever the scene’s size changes.
            <br></br>Equivalent to the native <c>didChangeSize:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>oldSize</em>
                <p>The old size of the scene, in points.</p>
                <b>Discussion</b>
                <p>This method is intended to be overridden in a subclass.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property size</c></li>
                </ul>
            </remarks>
            <param name="oldSize">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.DidEvaluateActions">
            <summary>
            Performs any scene-specific updates that need to occur after scene actions are evaluated.
            <br></br>Equivalent to the native <c>didEvaluateActions</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Do not call this method directly; it is called exactly once per frame, so long as the scene is presented in a view and is not paused. Your scene subclass should override this method and perform any necessary updates to the scene.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.DidMoveToView(U3DXT.iOS.Native.SpriteKit.SKView)">
            <summary>
            Called immediately after a scene is presented by a view.
            <br></br>Equivalent to the native <c>didMoveToView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>view</em>
                <p>The view that is presenting the scene.</p>
                <b>Discussion</b>
                <p>This method is intended to be overridden in a subclass.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="view">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.DidSimulatePhysics">
            <summary>
            Performs any scene-specific updates that need to occur after physics simulations are performed.
            <br></br>Equivalent to the native <c>didSimulatePhysics</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Do not call this method directly; it is called exactly once per frame, so long as the scene is presented in a view and is not paused. Your scene subclass should override this method and perform any necessary updates to the scene.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.#ctor(U3DXT.Utils.Size)">
            <summary>
            Creates an instance of the native SKScene and initializes the object. Initializes a new scene object.
            <br></br>Equivalent to the native <c>[[SKScene alloc] initWithSize:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>size</em>
                <p>The size of the scene in points.</p>
                <b>Return Value</b>
                <p>A newly initialized scene object.</p>
                <b>Discussion</b>
                <p>This is the class’s designated initializer method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="size">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.Update(System.Double)">
            <summary>
            Performs any scene-specific updates that need to occur before scene actions are evaluated.
            <br></br>Equivalent to the native <c>update:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>currentTime</em>
                <p>The amount of time that has elapsed in the simulation. This is guaranteed to be monotonically increasing.</p>
                <b>Discussion</b>
                <p>Do not call this method directly; it is called exactly once per frame, so long as the scene is presented in a view and is not paused. Your scene subclass should override this method and perform any necessary updates to the scene.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="currentTime">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKScene.WillMove(U3DXT.iOS.Native.SpriteKit.SKView)">
            <summary>
            Called immediately before a scene is removed from a view.
            <br></br>Equivalent to the native <c>willMoveFromView:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>view</em>
                <p>The view that is presenting the scene.</p>
                <b>Discussion</b>
                <p>This method is intended to be overridden in a subclass.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="view">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKSceneScaleMode">
            <summary>
            The modes that determine how the scene’s area is mapped to the view that presents it.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKSceneScaleMode.ResizeFill">
            <summary>
                <p>The scene is not scaled to match the view. Instead, the scene is automatically resized so that its dimensions always matches those of the view.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKSceneScaleModeResizeFill</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKSceneScaleMode.Fill">
            <summary>
                <p>Each axis of the scene is scaled independently so that each axis in the scene exactly maps to the length of that axis in the view.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKSceneScaleModeFill</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKSceneScaleMode.AspectFit">
            <summary>
                <p>The scaling factor of each dimension is calculated and the smaller of the two is chosen. Each axis of the scene is scaled by the same scaling factor. This guarantees that the entire scene is visible, but may require letterboxing in the view.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKSceneScaleModeAspectFit</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKSceneScaleMode.AspectFill">
            <summary>
                <p>The scaling factor of each dimension is calculated and the larger of the two is chosen. Each axis of the scene is scaled by the same scaling factor. This guarantees that the entire area of the view is filled, but may cause parts of the scene to be cropped.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKSceneScaleModeAspectFill</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKShapeNode">
            <summary>
            An <c>SKShapeNode</c> object represents an arbitrary shape defined by a Core Graphics path. You can apply different colors to stroke and fill the path. You can also choose to add a glow to the stroked portion of the path.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_get_antialiased(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_set_antialiased(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_get_blendMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_set_blendMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_get_fillColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_set_fillColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_get_glowWidth(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_set_glowWidth(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_get_lineWidth(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_set_lineWidth(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_get_path(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_set_path(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_get_strokeColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_set_strokeColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.UP_SKShapeNode_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKShapeNode" /> class.
            <br></br>Equivalent to the native <c>[[SKShapeNode alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKShapeNode.ClassExists">
            <summary>
            Returns whether the native SKShapeNode class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKShapeNode.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKShapeNode.antialiased">
            <summary>
            A Boolean value that determines whether the stroked path is smoothed when drawn.
            <br></br>Equivalent to the native <c>antialiased</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKShapeNode.blendMode">
            <summary>
            The blend mode used to draw the shape into the parent’s framebuffer.
            <br></br>Equivalent to the native <c>blendMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>SKBlendModeAlpha</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKShapeNode.fillColor">
            <summary>
            The color used to fill the shape.
            <br></br>Equivalent to the native <c>fillColor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default fill color is <c>[UIColor clearColor]</c>, which means the shape is not filled.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKShapeNode.glowWidth">
            <summary>
            The glow that extends outward from the stroked line.
            <br></br>Equivalent to the native <c>glowWidth</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>0.0</c>, which means no glow is added.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKShapeNode.lineWidth">
            <summary>
            The width used to stroke the path.
            <br></br>Equivalent to the native <c>lineWidth</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A line width larger than <c>2.0</c> may cause rendering artifacts in the final rendered image. The default value is <c>1.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKShapeNode.path">
            <summary>
            The path that defines the shape.
            <br></br>Equivalent to the native <c>path</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The path is defined in the node’s coordinate space.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKShapeNode.strokeColor">
            <summary>
            The color used to stroke the shape.
            <br></br>Equivalent to the native <c>strokeColor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default stroke color is <c>[UIColor whiteColor]</c>. If you do not want to stroke the shape, use <c>[UIColor clearColor].</c></p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKSpriteNode">
            <summary>
            An <c>SKSpriteNode</c> is a node that draws a textured image, a colored square, or a textured image blended with a color.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_spriteNodeWithTexture_size_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_get_anchorPoint(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_set_anchorPoint(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_get_blendMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_set_blendMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_get_centerRect(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_set_centerRect(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_get_color(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_set_color(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_get_colorBlendFactor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_set_colorBlendFactor(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_get_size(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_set_size(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_get_texture(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_set_texture(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_alloc_initWithColor_size_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_alloc_initWithImageNamed_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_alloc_initWithTexture_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_alloc_initWithTexture_color_size_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.UP_SKSpriteNode_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKSpriteNode" /> class.
            <br></br>Equivalent to the native <c>[[SKSpriteNode alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.ClassExists">
            <summary>
            Returns whether the native SKSpriteNode class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.SpriteNode(U3DXT.iOS.Native.SpriteKit.SKTexture,U3DXT.Utils.Size)">
            <summary>
            Initializes a textured sprite using an existing texture object but with a specified size.
            <br></br>Equivalent to the native <c>spriteNodeWithTexture:size:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>texture</em>
                <p>A Sprite Kit texture.</p>
                <em>size</em>
                <p>The size of the sprite in points.</p>
                <b>Return Value</b>
                <p>A newly created and initialized sprite object.</p>
                <b>Discussion</b>
                <p>The sprite is initialized using the texture, but the texture’s dimensions are not used. Instead, the size passed into the constructor method is used.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– initWithTexture:</c>
                    </li>
                </ul>
            </remarks>
            <param name="texture">
            </param>
            <param name="size">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.anchorPoint">
            <summary>
            Defines the point in the sprite that corresponds to the node’s position.
            <br></br>Equivalent to the native <c>anchorPoint</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You specify the value for this property in the unit coordinate space. The default value is <c>(0.5,0.5)</c>, which means that the sprite is centered on its position. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.blendMode">
            <summary>
            The blend mode used to draw the sprite into the parent’s framebuffer.
            <br></br>Equivalent to the native <c>blendMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>SKBlendModeAlpha</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.centerRect">
            <summary>
            A property that defines how the texture is applied to the sprite.
            <br></br>Equivalent to the native <c>centerRect</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The rectangle is in the unit coordinate space. The default value is <c>(0,0)-(1.0,1.0)</c>, which indicates that the entire texture is stretched to fill the sprite. If a different rectangle is specified, then the rectangle’s coordinates are used to break the texture into a 3x3 grid. The four corners of this grid are applied without performing any scaling. The upper- and lower-middle parts are scaled horizontally, and the left- and right-middle parts are scaled vertically. The center is scaled in both directions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.color">
            <summary>
            The sprite’s color.
            <br></br>Equivalent to the native <c>color</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the <c>texture</c> property is non-<c>null</c>, then the red, green, and blue values of the color property are blended with the texture before the texture is drawn and the alpha property is ignored. If the <c>texture</c> property is <c>null</c>, then the color (including the alpha component) is used to draw a colored rectangle. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property texture</c></li>
                    <li>    <c>@property colorBlendFactor</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.colorBlendFactor">
            <summary>
            A floating-point value that describes how the color is blended with the sprite’s texture.
            <br></br>Equivalent to the native <c>colorBlendFactor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value must be a number between <c>0.0</c> and <c>1.0</c>, inclusive. The default value (<c>0.0</c>) indicates that color property is ignored and that the texture’s values should be used unmodified. For values greater than <c>0.0</c>, the texture is blended with the color before being drawn to the scene.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.size">
            <summary>
            The dimensions of the sprite, in points.
            <br></br>Equivalent to the native <c>size</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.texture">
            <summary>
            The texture used to draw the sprite.
            <br></br>Equivalent to the native <c>texture</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value is <c>null</c>, then the sprite is drawn as a colored rectangle using its <c>color</c> property. Otherwise, the texture is used to draw the sprite. The related properties affect how the texture is applied.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property colorBlendFactor</c></li>
                    <li>    <c>@property centerRect</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.#ctor(U3DXT.iOS.Native.UIKit.UIColor,U3DXT.Utils.Size)">
            <summary>
            Creates an instance of the native SKSpriteNode and initializes the object. Initializes a colored sprite.
            <br></br>Equivalent to the native <c>[[SKSpriteNode alloc] initWithColor:size:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>color</em>
                <p>The color for the resulting sprite.</p>
                <em>size</em>
                <p>The size of the sprite in points.</p>
                <b>Return Value</b>
                <p>A newly initialized sprite object.</p>
                <b>Discussion</b>
                <p>The sprite object that is returned from this method has its <c>texture</c> property set to <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="color">
            </param>
            <param name="size">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.#ctor(System.String)">
            <summary>
            Creates an instance of the native SKSpriteNode and initializes the object. Initializes a textured sprite using an image file.
            <br></br>Equivalent to the native <c>[[SKSpriteNode alloc] initWithImageNamed:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>name</em>
                <p>The name of an image file stored in the app bundle.</p>
                <b>Return Value</b>
                <p>A newly initialized sprite object.</p>
                <b>Discussion</b>
                <p>This method creates a new texture object from the image file and assigns that texture to the <c>texture</c> property. The <c>size</c> property of the sprite is set to the dimensions of the image. The <c>color</c> property is set to white <c>(1.0,1.0,1.0)</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="name">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.#ctor(U3DXT.iOS.Native.SpriteKit.SKTexture)">
            <summary>
            Creates an instance of the native SKSpriteNode and initializes the object. Initializes a textured sprite using an existing texture object.
            <br></br>Equivalent to the native <c>[[SKSpriteNode alloc] initWithTexture:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>texture</em>
                <p>A Sprite Kit texture.</p>
                <b>Return Value</b>
                <p>A newly initialized sprite object.</p>
                <b>Discussion</b>
                <p>The <c>size</c> property of the sprite is set to the dimensions of the texture. The <c>color</c> property is set to white <c>(1.0,1.0,1.0)</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="texture">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKSpriteNode.#ctor(U3DXT.iOS.Native.SpriteKit.SKTexture,U3DXT.iOS.Native.UIKit.UIColor,U3DXT.Utils.Size)">
            <summary>
            Creates an instance of the native SKSpriteNode and initializes the object. Initializes a colored and textured sprite using an existing texture object.
            <br></br>Equivalent to the native <c>[[SKSpriteNode alloc] initWithTexture:color:size:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>texture</em>
                <p>A texture to apply to the sprite.</p>
                <em>color</em>
                <p>The color for the new sprite.</p>
                <em>size</em>
                <p>The size for the new sprite.</p>
                <b>Return Value</b>
                <p>A newly initialized sprite object.</p>
                <b>Discussion</b>
                <p>To colorize your texture, you also need to set the <c>colorBlendFactor</c> property of the sprite.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property colorBlendFactor</c></li>
                </ul>
            </remarks>
            <param name="texture">
            </param>
            <param name="color">
            </param>
            <param name="size">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKTexture">
            <summary>
            An <c>SKTexture</c> object is an image that can be applied to <c>SKSpriteNode</c> objects or particles created by a <c>SKEmitterNode</c> object. The texture object manages the texture data and graphics resources that are needed to render the image. Multiple sprites can share the same texture object, sharing a single resource.
            </summary>
            <remarks>
                <p>Most texture objects are created from source images stored in your app bundle—your game’s artwork. Use the <c>textureWithImageNamed:</c> method to create the <c>SKTexture</c> object. When the texture object is initialized using an image file, Sprite Kit must perform two steps before it can use the texture to render sprites. First, it must load the texture data from the file. Second, it must prepare the texture data to be used by the graphics hardware. Both of these steps can be expensive compared to other Sprite Kit operations. In particular, loading a texture from a file is very expensive. Sprite Kit defers loading and preparing the texture as long as possible and also provides methods you can use to control these steps.</p>
                <p>The texture data is loaded when:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The <c>size</c> method on the texture object is called.</p>
                    </li>
                    <li class="li">
                        <p>Another method is called that requires the texture’s size, such as creating a new <c>SKSpriteNode</c> object that uses the texture object.</p>
                    </li>
                    <li class="li">
                        <p>One of the preload methods is called (See  “Preloading the Texture Data.” </p>
                    </li>
                </ul>
                <p>The texture data is prepared for rendering when:</p>
                <ul class="ul">
                    <li class="li">
                        <p>A sprite or particle that uses the texture is part of a node tree that is being rendered.</p>
                    </li>
                </ul>
                <p>Once the <c>SKTexture</c> object is ready for rendering, it stays ready until all strong references to the texture object are removed.</p>
                <p>Texture objects can be created from data generated at runtime. For example, you can create the texture from a Quartz 2D image, from raw pixel data or by applying a Core Image filter to an existing texture. You can also call the <c>textureFromNode:</c> method to render a node tree into a texture. None of these textures must be loaded because their data is already in memory when the texture is created. However, the texture must still be prepared before it can be used for rendering.</p>
                <b>Managing Texture Memory</b>
                <p>Texture objects can consume a lot of memory, depending on the size of your source data. And often, the memory available to prepared textures is limited by the hardware, because the textures need to be loaded into VRAM. So, most games must carefully manage the memory used by textures. Consider the following tips when creating your game:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Access a texture object only when needed and dispose of the object when you are confident that it is no longer needed by your game. This frees the memory and makes it available to other texture objects.</p>
                    </li>
                    <li class="li">
                        <p>Avoid loading too many textures in a single pass through the rendering loop. If you do, Sprite Kit may skip one or more frames to finish loading the texture data. Instead, preload your content before starting your game.</p>
                    </li>
                    <li class="li">
                        <p>If you frequently use the same textures at the same time to render your sprites, do not load each texture from a separate image file. Instead, group the texture images logically into one or more texture atlases. Using a texture atlas reduces the total amount of memory required to load the texture and can also reduce the number of drawing passes required to render the scene.</p>
                    </li>
                </ul>
                <p>For a longer discussion of texture management, see  “Working with Sprites” .</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	This class cannot be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_preloadTextures_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_textureWithCGImage_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_textureWithData_size_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_textureWithData_size_rowLength_alignment_(System.String,System.String,System.UInt32,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_textureWithImage_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_textureWithImageNamed_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_textureWithRect_inTexture_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_get_filteringMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_set_filteringMode(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_get_usesMipmaps(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_set_usesMipmaps(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_preloadWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_size(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_textureByApplyingCIFilter_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.UP_SKTexture_textureRect(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKTexture" /> class.
            <br></br>Equivalent to the native <c>[[SKTexture alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKTexture.ClassExists">
            <summary>
            Returns whether the native SKTexture class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.PreloadTextures(System.Object[],System.Action)">
            <summary>
            Load the texture data of multiple textures into memory.
            <br></br>Equivalent to the native <c>preloadTextures:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>textures</em>
                <p>An array of <c>SKTexture</c> objects.</p>
                <em>completionHandler</em>
                <p>A block called after all of the textures are loaded.</p>
                <b>Discussion</b>
                <p>Sprite Kit creates a background task that loads the texture data for all of the textures in the array, then returns control to your game. Your completion handler is called after all of the textures are loaded.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="textures">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.Texture(U3DXT.iOS.Native.CoreGraphics.CGImage)">
            <summary>
            Create a new texture object from a Quartz 2D image.
            <br></br>Equivalent to the native <c>textureWithCGImage:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>image</em>
                <p>A Quartz 2D image (<c>CGImageRef</c>) object. For more information, see <em>Quartz 2D Programming Guide</em> and <em>CGImage Reference</em>.</p>
                <b>Return Value</b>
                <p>A new texture object.</p>
                <b>Discussion</b>
                <p>The image data is copied before control is returned to your game.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="image">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.Texture(U3DXT.iOS.Native.Foundation.NSData,U3DXT.Utils.Size)">
            <summary>
            Creates a new texture from raw pixel data.
            <br></br>Equivalent to the native <c>textureWithData:size:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>pixelData</em>
                <p>An <c>NSData</c> object that holds the bitmap data. The pixels must be 32 bpp, 8bpc (unsigned integer) RGBA pixel data. The color components should have been already multiplied by the alpha value.</p>
                <em>size</em>
                <p>The size of the new texture in points.</p>
                <b>Return Value</b>
                <p>A new texture object.</p>
                <b>Discussion</b>
                <p>The image data is copied before control is returned to your game.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="pixelData">
            </param>
            <param name="size">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.Texture(U3DXT.iOS.Native.Foundation.NSData,U3DXT.Utils.Size,System.UInt32,System.UInt32)">
            <summary>
            Creates a new texture from custom formatted raw pixel data.
            <br></br>Equivalent to the native <c>textureWithData:size:rowLength:alignment:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>pixelData</em>
                <p>An <c>NSData</c> object that holds the bitmap data. The pixels must be 32 bpp, 8bpc (unsigned integer) RGBA pixel data. The color components should have been already multiplied by the alpha value.</p>
                <em>size</em>
                <p>The size of the new texture in points.</p>
                <em>rowLength</em>
                <p>The number of bytes of memory to use per row of the bitmap.</p>
                <em>alignment</em>
                <p>The offset between individual pixels of the pixel data. Specify <c>0</c> for tightly packed data.</p>
                <b>Return Value</b>
                <p>A new texture object.</p>
                <b>Discussion</b>
                <p>The image data is copied before control is returned to your game.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="pixelData">
            </param>
            <param name="size">
            </param>
            <param name="rowLength">
            </param>
            <param name="alignment">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.Texture(U3DXT.iOS.Native.UIKit.UIImage)">
            <summary>
            Create a new texture object from a <c>UIImage</c> object.
            <br></br>Equivalent to the native <c>textureWithImage:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>image</em>
                <p>An image.</p>
                <b>Return Value</b>
                <p>A new texture object.</p>
                <b>Discussion</b>
                <p>The image data is copied before control is returned to your game.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="image">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.Texture(System.String)">
            <summary>
            Create a new texture object from an image file stored in the app bundle.
            <br></br>Equivalent to the native <c>textureWithImageNamed:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>name</em>
                <p>The name of the image file.</p>
                <b>Return Value</b>
                <p>A new texture object.</p>
                <b>Discussion</b>
                <p>The new texture object is initialized with the name of the image file and then control returns immediately to your game. Sprite Kit loads and prepares the texture data when it is needed by your game.</p>
                <p>When loading the texture data, Sprite Kit searches the app bundle for an image file with the specified filename. If a matching image file cannot be found, Sprite Kit searches for the texture in any texture atlases stored in the app bundle. If the specified image does not exist anywhere in the bundle, Sprite Kit creates a placeholder texture image.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="name">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.Texture(UnityEngine.Rect,U3DXT.iOS.Native.SpriteKit.SKTexture)">
            <summary>
            Creates a new texture from a subset of an existing texture.
            <br></br>Equivalent to the native <c>textureWithRect:inTexture:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rect</em>
                <p>A rectangle in the unit coordinate space that specifies the portion of the texture to use.</p>
                <em>texture</em>
                <p>The texture to create the new texture from.</p>
                <b>Return Value</b>
                <p>A new texture object.</p>
                <b>Discussion</b>
                <p>The returned texture object shares the same texture data as the original texture object, meaning that only one copy of the texture data is kept in memory.</p>
                <p>If you call this method on a texture that itself was created using this method, the original texture is used as the source instead. That is, the rectangle is considered to be in the source texture’s coordinate system. Put another way, you cannot make a subtexture of a subtexture without calculating the coordinates yourself.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="rect">
            </param>
            <param name="texture">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKTexture.filteringMode">
            <summary>
            The filtering mode used when the size of a sprite drawn with the texture is not drawn at the texture’s native size.
            <br></br>Equivalent to the native <c>filteringMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The possible values for this property are listed in <c>“Texture Filtering Modes”</c>. The default value is <c>SKTextureFilteringLinear</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKTexture.usesMipmaps">
            <summary>
            A Boolean value that indicates whether the texture attempts to generate mipmaps.
            <br></br>Equivalent to the native <c>usesMipmaps</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>false</c>. If you set this to <c>true</c>, Sprite Kit creates mipmaps for the texture when it prepares the texture for rendering. Mipmaps take up additional memory (usually one-third more), but can improve rendering quality and performance when the texture is reduced in size (such as when you reduce the scale of a sprite rendered using the texture).</p>
                <p>You can only request mipmaps if both of the texture’s dimensions are a power of two.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.Preload(System.Action)">
            <summary>
            Load the texture data into memory, calling a completion handler after the task completes.
            <br></br>Equivalent to the native <c>preloadWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block called after the texture data is loaded.</p>
                <b>Discussion</b>
                <p>Sprite Kit creates a background task to load the texture data from the associated file, then returns control to your game. After the texture data is loaded, your completion handler is called. Typically, you use this method when you want to guarantee that a particular texture is in memory before accessing it.</p>
                <p>If you need to preload multiple textures at once, use the <c>preloadTextures:withCompletionHandler:</c> method instead.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.Size">
            <summary>
            The size of the texture.
            <br></br>Equivalent to the native <c>size</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The dimensions of the texture, measured in points.</p>
                <b>Discussion</b>
                <p>If the texture was created using an image file and that image file hasn’t been loaded, calling this method forces the texture data to be loaded from file.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.TextureByApplyingCIFilter(U3DXT.iOS.Native.CoreImage.CIFilter)">
            <summary>
            Creates a new texture by applying a Core Image filter to an existing texture.
            <br></br>Equivalent to the native <c>textureByApplyingCIFilter:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>filter</em>
                <p>A Core Image filter that requires a single <em>inputImage</em> parameter and produces an <em>outputImage</em> parameter.</p>
                <b>Return Value</b>
                <p>A new texture object.</p>
                <b>Discussion</b>
                <p>The image data is copied before control is returned to your game.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="filter">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTexture.TextureRect">
            <summary>
            A rectangle that defines the portion of the texture used to render its image.
            <br></br>Equivalent to the native <c>textureRect</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A rectangle in the unit coordinate space.</p>
                <b>Discussion</b>
                <p>The default value is a rectangle that covers the entire texture <c>(0,0)</c> - <c>(1,1)</c>. You cannot set this value directly; to use only a portion of a texture, use the <c>textureWithRect:inTexture:</c> method to create a new texture.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>+ textureWithRect:inTexture:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas">
            <summary>
            An <c>SKTextureAtlas</c> object is a collection of related texture objects created from a texture atlas stored inside the app bundle. Sprite Kit implicitly loads atlases when a texture image stored inside the atlas is accessed. Use the <c>SKTextureAtlas</c> class when you want to explicitly access a texture atlas’s contents.
            </summary>
            <remarks>
                <p>Texture atlases can improve memory usage and rendering performance. For example, if you have a scene with sprites drawn with different textures, Sprite Kit performs one drawing pass for each texture. However, if all of the textures were loaded from the same texture atlas, then Sprite Kit can render the sprites in a single drawing pass—and use less memory to do so. Whenever you have textures that are always used together, you should store them in an atlas.</p>
                <p>You create texture atlases using Xcode. Add a folder with the <c>.atlas</c> extension to your project and place the artwork to be included in the atlas inside this folder. Xcode builds a texture atlas from the artwork and adds it to the app bundle. The format for a compiled texture atlas is private and subject to change. For more information about creating texture atlases, see <em>Texture Atlas Help</em>.</p>
                <p>To access an atlas directly, call the <c>atlasNamed:</c> class method, passing in the name of the folder (without any filename extension).</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	This class cannot be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.UP_SKTextureAtlas_atlasNamed_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.UP_SKTextureAtlas_preloadTextureAtlases_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.UP_SKTextureAtlas_get_textureNames(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.UP_SKTextureAtlas_preloadWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.UP_SKTextureAtlas_textureNamed_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas" /> class.
            <br></br>Equivalent to the native <c>[[SKTextureAtlas alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.ClassExists">
            <summary>
            Returns whether the native SKTextureAtlas class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.AtlasNamed(System.String)">
            <summary>
            Creates an atlas from data stored in the app bundle.
            <br></br>Equivalent to the native <c>atlasNamed:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>name</em>
                <p>The name of the texture atlas, without the <c>.atlas</c> extension.</p>
                <b>Return Value</b>
                <p>A new texture atlas.</p>
                <b>Discussion</b>
                <p>If the texture atlas cannot be found, an exception is thrown.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="name">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.PreloadTextureAtlases(System.Object[],System.Action)">
            <summary>
            Loads the textures of multiple atlases into memory, calling a completion handler after the task completes.
            <br></br>Equivalent to the native <c>preloadTextureAtlases:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>textureAtlases</em>
                <p>An array of <c>SKTextureAtlas</c> objects.</p>
                <em>completionHandler</em>
                <p>A block called after all of the texture atlases are loaded.</p>
                <b>Discussion</b>
                <p>Sprite Kit creates a background task that loads the texture data from all of the specified atlases. Then, Sprite Kit returns control to your game. After the  atlases are loaded, your completion handler is called.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="textureAtlases">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.textureNames">
            <summary>
            The names of the texture images stored in the atlas. (read-only)
            <br></br>Equivalent to the native <c>textureNames</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The property holds an array of <c>String</c> objects. Each string is the name of a texture stored in the atlas. The count of the array is the number of textures stored in the atlas.</p>
                <p>If the atlas is not currently loaded into memory, this method forces it to be loaded from the app bundle. Your game blocks until the atlas is loaded.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– textureNamed:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.Preload(System.Action)">
            <summary>
            Load the atlas’s textures into memory, calling a completion handler after the task completes.
            <br></br>Equivalent to the native <c>preloadWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block called after the texture atlas is loaded.</p>
                <b>Discussion</b>
                <p>Sprite Kit creates a background task that loads the texture data from the atlas. Then, Sprite Kit returns control to your game. After the texture atlas is loaded, your completion handler is called.</p>
                <p>If you need to preload multiple texture atlases at once, use the <c>preloadTextureAtlases:withCompletionHandler:</c> method instead.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTextureAtlas.TextureNamed(System.String)">
            <summary>
            Creates a texture from data stored in the texture atlas.
            <br></br>Equivalent to the native <c>textureNamed:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>name</em>
                <p>The name of a texture stored in the atlas.</p>
                <b>Return Value</b>
                <p>The Sprite Kit texture associated with the name. If the specified image does not exist in the atlas, Sprite Kit returns a placeholder texture image..</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property textureNames</c></li>
                </ul>
            </remarks>
            <param name="name">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKTextureFilteringMode">
            <summary>
            Texture filtering modes to use when the texture is drawn in a size other than its native size.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKTextureFilteringMode.Linear">
            <summary>
                <p>Each pixel is drawn by using a linear filter of multiple texels in the texture. This mode produces higher quality results, but may be slower.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKTextureFilteringLinear</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKTextureFilteringMode.Nearest">
            <summary>
                <p>Each pixel is drawn using the nearest point in the texture. This mode is faster, but the results are often pixelated.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKTextureFilteringNearest</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKTransition">
            <summary>
            An <c>SKTransition</c> object is used to perform an animated transition between a <c>SKScene</c> object already presented by an <c>SKView</c> object and a new incoming scene.
            </summary>
            <remarks>
                <p>To use a transition, instantiate a new transition object and then call the view’s <c>presentScene:transition:</c> method. By default, both scenes are paused during the transition. See  “Configuring Whether Scenes Are Paused During the Transition.” </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_crossFadeWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_doorsCloseHorizontalWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_doorsCloseVerticalWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_doorsOpenHorizontalWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_doorsOpenVerticalWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_doorwayWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_fadeWithColor_duration_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_fadeWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_flipHorizontalWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_flipVerticalWithDuration_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_moveInWithDirection_duration_(System.Int32,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_pushWithDirection_duration_(System.Int32,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_revealWithDirection_duration_(System.Int32,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_transitionWithCIFilter_duration_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_get_pausesIncomingScene(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_set_pausesIncomingScene(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_get_pausesOutgoingScene(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.UP_SKTransition_set_pausesOutgoingScene(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKTransition" /> class.
            <br></br>Equivalent to the native <c>[[SKTransition alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKTransition.ClassExists">
            <summary>
            Returns whether the native SKTransition class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.CrossFade(System.Double)">
            <summary>
            Creates a cross fade transition.
            <br></br>Equivalent to the native <c>crossFadeWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.DoorsCloseHorizontal(System.Double)">
            <summary>
            Creates a transition where the new scene appears as a pair of closing horizontal doors.
            <br></br>Equivalent to the native <c>doorsCloseHorizontalWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.DoorsCloseVertical(System.Double)">
            <summary>
            Creates a transition where the new scene appears as a pair of closing vertical doors.
            <br></br>Equivalent to the native <c>doorsCloseVerticalWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.DoorsOpenHorizontal(System.Double)">
            <summary>
            Creates a transition where the new scene appears as a pair of opening horizontal doors.
            <br></br>Equivalent to the native <c>doorsOpenHorizontalWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.DoorsOpenVertical(System.Double)">
            <summary>
            Creates a transition where the new scene appears as a pair of opening vertical doors.
            <br></br>Equivalent to the native <c>doorsOpenVerticalWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.Doorway(System.Double)">
            <summary>
            Creates a transition where the previous scene disappears as a pair of opening doors. The new scene starts in the background and moves closer as the doors open.
            <br></br>Equivalent to the native <c>doorwayWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.Fade(U3DXT.iOS.Native.UIKit.UIColor,System.Double)">
            <summary>
            Creates a transition that first fades to a constant color and then fades to the new scene.
            <br></br>Equivalent to the native <c>fadeWithColor:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>color</em>
                <p>The color to use as the fade color.</p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="color">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.Fade(System.Double)">
            <summary>
            Creates a transition that first fades to black and then fades to the new scene.
            <br></br>Equivalent to the native <c>fadeWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.FlipHorizontal(System.Double)">
            <summary>
            Creates a transition where the two scenes are flipped across a horizontal line running through the center of the view.
            <br></br>Equivalent to the native <c>flipHorizontalWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.FlipVertical(System.Double)">
            <summary>
            Creates a transition where the two scenes are flipped across a vertical line running through the center of the view.
            <br></br>Equivalent to the native <c>flipVerticalWithDuration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.MoveIn(U3DXT.iOS.Native.SpriteKit.SKTransitionDirection,System.Double)">
            <summary>
            Creates a transition where the new scene moves in on top of the old scene.
            <br></br>Equivalent to the native <c>moveInWithDirection:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>direction</em>
                <p>The direction of the move. Possible values are described in  “Transition Directions.” </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="direction">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.Push(U3DXT.iOS.Native.SpriteKit.SKTransitionDirection,System.Double)">
            <summary>
            Creates a transition where the new scene moves in, pushing the old scene out of the view.
            <br></br>Equivalent to the native <c>pushWithDirection:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>direction</em>
                <p>The direction of the push. Possible values are described in  “Transition Directions.” </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="direction">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.Reveal(U3DXT.iOS.Native.SpriteKit.SKTransitionDirection,System.Double)">
            <summary>
            Creates a transition where the old scene moves out of the view, revealing the new scene underneath it.
            <br></br>Equivalent to the native <c>revealWithDirection:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>direction</em>
                <p>The direction of the reveal. Possible values are described in  “Transition Directions.” </p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="direction">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKTransition.Transition(U3DXT.iOS.Native.CoreImage.CIFilter,System.Double)">
            <summary>
            Creates a transition that uses a Core Image filter to perform the transition.
            <br></br>Equivalent to the native <c>transitionWithCIFilter:duration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>filter</em>
                <p>A Core Image filter.</p>
                <em>sec</em>
                <p>The duration of the transition.</p>
                <b>Return Value</b>
                <p>A new transition.</p>
                <b>Discussion</b>
                <p>The filter used to perform the transition must a be filter that requires only two image parameters (<c>inputImage</c>, <c>inputTargetImage</c>) and generates a single image (<c>outputImage</c>). The transition automatically sets the filter’s <c>inputImage</c>, <c>inputTargetImage</c>, and <c>inputTime</c> properties. You must set up any other filter properties before creating the transition.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="filter">
            </param>
            <param name="sec">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKTransition.pausesIncomingScene">
            <summary>
            A Boolean value that determines whether the incoming scene is paused during the transition.
            <br></br>Equivalent to the native <c>pausesIncomingScene</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKTransition.pausesOutgoingScene">
            <summary>
            A Boolean value that determines whether the outgoing scene is paused during the transition.
            <br></br>Equivalent to the native <c>pausesOutgoingScene</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKTransitionDirection">
            <summary>
            For some transitions, the direction in which the transition is performed.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKTransitionDirection.Left">
            <summary>
                <p>The transition goes left.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKTransitionDirectionLeft</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKTransitionDirection.Down">
            <summary>
                <p>The transition goes down.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKTransitionDirectionDown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKTransitionDirection.Up">
            <summary>
                <p>The transition goes up.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKTransitionDirectionUp</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.SpriteKit.SKTransitionDirection.Right">
            <summary>
                <p>The transition goes right.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>SKTransitionDirectionRight</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKVideoNode">
            <summary>
            An <c>SKVideoNode</c> is a node that plays live video.
            </summary>
            <remarks>
                <p>A video node can be instantiated using a video file in the bundle. Or, if you need more precise control over video playback, you can instantiate the video node using an <c>AVPlayer</c> object.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_get_anchorPoint(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_set_anchorPoint(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_get_size(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_set_size(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_alloc_initWithVideoFileNamed_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_alloc_initWithVideoURL_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_pause(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_play(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.UP_SKVideoNode_node">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKVideoNode" /> class.
            <br></br>Equivalent to the native <c>[[SKVideoNode alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKVideoNode.ClassExists">
            <summary>
            Returns whether the native SKVideoNode class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.Node">
            <summary>
            Creates a new node.
            <br></br>Equivalent to the native <c>node</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A newly initialized node.</p>
                <b>Discussion</b>
                <p>The <c>SKNode</c> class does not draw or perform any tasks directly, so it is more common to instantiate a node subclass instead. However, you might create an <c>SKNode</c> object to organize other related nodes in the node tree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKVideoNode.anchorPoint">
            <summary>
            Defines the point in the sprite that corresponds to the node’s position.
            <br></br>Equivalent to the native <c>anchorPoint</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You specify the anchor point using the unit coordinate space. The default value is <c>(0.5,0.5)</c>, which means that the video is centered on the node’s position.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKVideoNode.size">
            <summary>
            The dimensions of the video node, in points.
            <br></br>Equivalent to the native <c>size</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is the size of the video used to instantiate the node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.#ctor(System.String)">
            <summary>
            Creates an instance of the native SKVideoNode and initializes the object. Initializes a video node using a video file stored in the app bundle.
            <br></br>Equivalent to the native <c>[[SKVideoNode alloc] initWithVideoFileNamed:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>videoFile</em>
                <p>The name of the video file.</p>
                <b>Return Value</b>
                <p>An initialized video node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="videoFile">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.#ctor(U3DXT.iOS.Native.Foundation.NSURL)">
            <summary>
            Creates an instance of the native SKVideoNode and initializes the object. Initializes a video node using a URL that points to a video file.
            <br></br>Equivalent to the native <c>[[SKVideoNode alloc] initWithVideoURL:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>url</em>
                <p>The URL for the video to play.</p>
                <b>Return Value</b>
                <p>An initialized video node.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="url">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.Pause">
            <summary>
            Pauses video playback.
            <br></br>Equivalent to the native <c>pause</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKVideoNode.Play">
            <summary>
            Starts video playback.
            <br></br>Equivalent to the native <c>play</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.SpriteKit.SKView">
            <summary>
            An <c>SKView</c> object is a view that displays Sprite Kit content. This content is provided by an <c>SKScene</c> object.
            </summary>
            <remarks>
                <p>You present a scene by calling the view’s <c>presentScene:</c> method. When a scene is presented by the view, it alternates between running its simulation (which animates the content) and rendering the content for display. You can pause the scene by setting the view’s <c>paused</c> property to <c>true</c>.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_get_asynchronous(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_set_asynchronous(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_get_frameInterval(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_set_frameInterval(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_get_ignoresSiblingOrder(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_set_ignoresSiblingOrder(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_get_paused(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_set_paused(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_get_scene(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_get_showsDrawCount(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_set_showsDrawCount(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_get_showsFPS(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_set_showsFPS(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_get_showsNodeCount(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_set_showsNodeCount(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_convertPoint_fromScene_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_convertPoint_toScene_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_presentScene_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_presentScene_transition_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.UP_SKView_textureFromNode_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.SpriteKit.SKView" /> class.
            <br></br>Equivalent to the native <c>[[SKView alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.ClassExists">
            <summary>
            Returns whether the native SKView class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.asynchronous">
            <summary>
            A Boolean value that indicates whether the content is rendered asynchronously.
            <br></br>Equivalent to the native <c>asynchronous</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>true</c>. If the value  is <c>false</c>, then the contents of this view are synchronized with Core Animation updates.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.frameInterval">
            <summary>
            The number of frames that must pass before the scene is called to update its contents.
            <br></br>Equivalent to the native <c>frameInterval</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>1</c>, which results in your game being notified at the refresh rate of the display. If the value is set to a value larger than <c>1</c>, the display link notifies your game at a fraction of the native refresh rate. For example, setting the interval to <c>2</c> causes the scene to be called every other frame, providing half the frame rate.</p>
                <p>Setting this value to less than <c>1</c> results in undefined behavior and is a programmer error.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.ignoresSiblingOrder">
            <summary>
            A Boolean value that indicates whether parent-child and sibling relationships affect the rendering order of nodes in the scene.
            <br></br>Equivalent to the native <c>ignoresSiblingOrder</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>false</c>, which means that when multiple nodes share the same z position, those nodes are sorted and rendered in a deterministic order. Parents are rendered before their children and siblings are rendered from eldest to youngest. When this property is set to <c>true</c>, the rendering order of nodes at the same z position is arbitrary and may change every time a new frame is rendered. This approach improves performance, but requires you to set the z position of any nodes that must be rendered in a specific order.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>zPosition</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.paused">
            <summary>
            A Boolean value that indicates whether the view’s scene animations are paused.
            <br></br>Equivalent to the native <c>paused</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value is <c>true</c>, then the scene’s content is fixed on screen. No actions are executed and no physics simulation is performed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.scene">
            <summary>
            The scene currently presented by the view. (read-only)
            <br></br>Equivalent to the native <c>scene</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>null</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– presentScene:</c>
                    </li>
                    <li>
                        <c>– presentScene:transition:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.showsDrawCount">
            <summary>
            A Boolean value that indicates whether the view displays the number of drawing passes it needed to render the view.
            <br></br>Equivalent to the native <c>showsDrawCount</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Some operations in Sprite Kit can require multiple rendering passes to draw a scene’s content. For example, an <c>SKEffectNode</c> object must render its children into a separate buffer, apply the effect, and then perform another pass to blend those results into its parent node. These additional rendering passes use more rendering resources, reducing your game’s frame rate or increasing its total power consumption.  Use the draw count as another piece of data when you profile your game’s performance.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.showsFPS">
            <summary>
            A Boolean value that indicates whether the view displays a frame rate indicator.
            <br></br>Equivalent to the native <c>showsFPS</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The frame rate is a good indicator of the performance of your scene. Avoid creating scenes that have widely varying frame rates.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.SpriteKit.SKView.showsNodeCount">
            <summary>
            A Boolean value that indicates whether the view displays the count of the nodes visible in the scene.
            <br></br>Equivalent to the native <c>showsNodeCount</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.ConvertPointFromScene(UnityEngine.Vector2,U3DXT.iOS.Native.SpriteKit.SKScene)">
            <summary>
            Converts a point from scene coordinates to view coordinates.
            <br></br>Equivalent to the native <c>convertPoint:fromScene:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>A point in scene coordinates.</p>
                <em>scene</em>
                <p>A scene.</p>
                <b>Return Value</b>
                <p>The same point in the view’s coordinate system.</p>
                <b>Discussion</b>
                <p>This method performs the coordinate conversion as if the scene were presented inside the view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
            <param name="scene">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.ConvertPointToScene(UnityEngine.Vector2,U3DXT.iOS.Native.SpriteKit.SKScene)">
            <summary>
            Converts a point from view coordinates to scene coordinates.
            <br></br>Equivalent to the native <c>convertPoint:toScene:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>point</em>
                <p>A point in view coordinates.</p>
                <em>scene</em>
                <p>A scene.</p>
                <b>Return Value</b>
                <p>The same point in the scene’s coordinate system.</p>
                <b>Discussion</b>
                <p>This method performs the coordinate conversion as if the scene were presented inside the view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="point">
            </param>
            <param name="scene">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.PresentScene(U3DXT.iOS.Native.SpriteKit.SKScene)">
            <summary>
            Presents a scene.
            <br></br>Equivalent to the native <c>presentScene:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scene</em>
                <p>The scene to present.</p>
                <b>Discussion</b>
                <p>The new scene immediately replaces the current scene, if one exists.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="scene">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.PresentScene(U3DXT.iOS.Native.SpriteKit.SKScene,U3DXT.iOS.Native.SpriteKit.SKTransition)">
            <summary>
            Transitions from the current scene to a new scene.
            <br></br>Equivalent to the native <c>presentScene:transition:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scene</em>
                <p>The scene to present.</p>
                <em>transition</em>
                <p>A transition used to animate between the two scenes.</p>
                <b>Discussion</b>
                <p>If there is currently a scene presented by the view, the view’s <c>scene</c> property is updated immediately, then the transition is executed to swap between the scenes. Otherwise, the new scene is presented immediately and the transition property is ignored.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="scene">
            </param>
            <param name="transition">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.Texture(U3DXT.iOS.Native.SpriteKit.SKNode)">
            <summary>
            Renders and returns a Sprite Kit texture that contains the node’s contents.
            <br></br>Equivalent to the native <c>textureFromNode:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>node</em>
                <p>A node object representing the content you want to render to the texture. </p>
                <b>Return Value</b>
                <p>A Sprite Kit texture that holds the rendered image.</p>
                <b>Discussion</b>
                <p>The node being rendered does not need to appear in the view’s presented scene. The new texture is created with a size equal to the rectangle returned by the node’s <c>calculateAccumulatedFrame</c> method. If the node is not a scene node, it is rendered with a clear background color (<c>[UIColor clearColor]).</c></p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="node">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.SpriteKit.SKView.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an instance of the native SKView and initializes the object. Inherits from <c>UIView</c>.
            <br></br>Equivalent to the native <c>[[SKView alloc] initWithFrame:]</c> calls.
            </summary>
            <remarks>
            </remarks>
            <param name="frame">
            </param>
            <seealso cref="T:U3DXT.iOS.Native.UIKit.UIView" />
        </member>
    </members>
</doc>
