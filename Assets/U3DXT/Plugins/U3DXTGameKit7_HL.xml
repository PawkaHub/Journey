<?xml version="1.0"?>
<doc>
    <assembly>
        <name>U3DXTGameKit7_HL</name>
    </assembly>
    <members>
        <member name="T:U3DXT.iOS.GameKit.DataReceivedEventArgs">
            <summary>
            Data received event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.DataReceivedEventArgs.player">
            <summary>
            The player.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.DataReceivedEventArgs.data">
            <summary>
            The received data.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.GameKit.DataReceivedEventArgs.dataString">
            <summary>
            The received data as a string.
            </summary>
            <value>The received data as a string.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.DataReceivedEventArgs.#ctor(U3DXT.iOS.GameKit.Player,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.DataReceivedEventArgs" /> class.
            </summary>
            <param name="player">Player.</param>
            <param name="data">Data.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.ExchangeEventArgs">
            <summary>
            Exchange event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.ExchangeEventArgs.match">
            <summary>
            The match.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.ExchangeEventArgs.exchange">
            <summary>
            The exchange.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.ExchangeEventArgs.#ctor(U3DXT.iOS.Native.GameKit.GKTurnBasedMatch,U3DXT.iOS.Native.GameKit.GKTurnBasedExchange)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.ExchangeEventArgs" /> class.
            </summary>
            <param name="match">Match.</param>
            <param name="exchange">Exchange.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.ExchangeSentEventArgs">
            <summary>
            Turn based exchange sent event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.ExchangeSentEventArgs.exchange">
            <summary>
            The exchange.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.ExchangeSentEventArgs.error">
            <summary>
            The error.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.ExchangeSentEventArgs.#ctor(U3DXT.iOS.Native.GameKit.GKTurnBasedExchange,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.ExchangeSentEventArgs" /> class.
            </summary>
            <param name="exchange">Exchange.</param>
            <param name="error">Error.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.GameCenterMatch">
            <summary>
            Game center match.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.GameCenterMatch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.GameCenterMatch" /> class.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.GameKit.GameKitXT">
            <summary>
            Main class for iOS GameKit plugin. High-level API.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="E:U3DXT.iOS.GameKit.GameKitXT.LocalPlayerAuthenticated">
            <summary>
            Occurs when the local player has successfully authenticated into Game Center.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.GameKitXT.LocalPlayerAuthenticationFailed">
            <summary>
            Occurs when the local player has cancelled authentication into Game Center.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.GameKitXT.ScoreReported">
            <summary>
            Occurs when the a score has successfully been reported.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.GameKitXT.ScoreReportFailed">
            <summary>
            Occurs when the a score failed to report.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.GameKitXT.AchievementReported">
            <summary>
            Occurs when the an achievement has successfully been reported.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.GameKitXT.AchievementReportFailed">
            <summary>
            Occurs when the an achievement failed to report.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.GameKitXT.AuthenticateLocalPlayer">
            <summary>
            Authenticates the Game Center local player. Call this as soon as the game is initialized.
            <br></br>
            Raises the LocalPlayerAuthenticated and LocalPlayerAuthencationFailed events on completion.
            <br></br>
            Once the local player is authenticated, you can get the <c>LocalPlayer</c> property.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.GameKit.GameKitXT.localPlayer">
            <summary>
            The local player that is authenticated on this device, or null if not authenticated.
            </summary>
            <value>The local player.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.GameKitXT.ShowGameCenter">
            <summary>
            Brings up the default Game Center interface.
            Available in iOS 6.0 and later.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.GameKitXT.ShowBanner(System.String,System.String)">
            <summary>
            Displays a Game Center banner on the top of the screen.
            The banner goes away in a few seconds.
            </summary>
            <param name="title">The title of the banner.</param>
            <param name="message">The message of the banner.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.GameKitXT.ReportScore(System.String,System.Int64)">
            <summary>
            Reports a high score to Game Center.
            The returned GKScore can be used for more advanced functionalities such as sending challenges.
            Raises ScoreReported and ScoreReportFailed events on completion.
            </summary>
            <returns>The score.</returns>
            <param name="leaderboardID">Leaderboard I.</param>
            <param name="score">Score.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.GameKitXT.ShowLeaderboard(System.String)">
            <summary>
            Displays the Game Center Leaderboard interface.
            </summary>
            <param name="leaderboardID">The ID of the leaderboard to be displayed.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.GameKitXT.ReportAchievement(System.String,System.Double)">
            <summary>
            Reports the progress of an achivement to Game Center.
            The returned GKAchievement can be used for more advanced functionalities such as sending challenges.
            Raises AchievementReported and AchievementReportFailed events on completion.
            </summary>
            <returns>The native achievement.</returns>
            <param name="achievementId">The ID of the achievementId to report to.</param>
            <param name="percentComplete">The progress from 0.0 to 100.0.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.GameKitXT.ShowAchievements">
            <summary>
            Displays the Game Center Achievements interface.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.GameKit.InviteAcceptedEventArgs">
            <summary>
            Invite accepted event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.InviteAcceptedEventArgs.inviter">
            <summary>
            The inviter.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.InviteAcceptedEventArgs.playerGroup">
            <summary>
            The player group.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.InviteAcceptedEventArgs.playerAttributes">
            <summary>
            The player attributes.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.InviteAcceptedEventArgs.#ctor(U3DXT.iOS.GameKit.Player,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.InviteAcceptedEventArgs" /> class.
            </summary>
            <param name="inviter">Inviter.</param>
            <param name="playerGroup">Player group.</param>
            <param name="playerAttributes">Player attributes.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.LocalPlayer">
            <summary>
            This class represents the authenticated local player.
            <p></p>
            Use GameKitXT.LocalPlayer to get local player after successful authentication.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.LocalPlayer.#ctor">
            <summary>
            Default constructor. You should not create a LocalPlayer manually.
            Use GameKitXT.LocalPlayer to get local player after successful authentication.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.GameKit.LocalPlayer.gkLocalPlayer">
            <summary>
            The low-level GKLocalPlayer object if you need more advanced functionalities.
            </summary>
            <value>The low-level GKLocalPlayer object.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.LocalPlayer.LoadFriends(System.Action{U3DXT.iOS.GameKit.Player[]})">
            <summary>
            Loads the friends of this player.
            </summary>
            <param name="completionCallback">Completion callback.</param>
        </member>
        <member name="P:U3DXT.iOS.GameKit.LocalPlayer.friends">
            <summary>
            An array of Player objects representing the local player's friends.
            </summary>
            <value>The friends.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.LocalPlayer.isUnderage">
            <summary>
            Indicates whether the local player is under age.
            </summary>
            <value>
                <c>true</c> if the local player is underage; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:U3DXT.iOS.GameKit.MatchEventArgs">
            <summary>
            Match event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.MatchEventArgs.match">
            <summary>
            The match.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.MatchEventArgs.#ctor(U3DXT.iOS.GameKit.GameCenterMatch)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.MatchEventArgs" /> class.
            </summary>
            <param name="match">Match.</param>
        </member>
        <member name="P:U3DXT.iOS.GameKit.MatchEventArgs.realTimeMatch">
            <summary>
            Gets the real time match.
            </summary>
            <value>The real time match.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.MatchEventArgs.turnBasedMatch">
            <summary>
            Gets the turn based match.
            </summary>
            <value>The turn based match.</value>
        </member>
        <member name="T:U3DXT.iOS.GameKit.Player">
            <summary>
            This class represents a Game Center player as the local player's friend or a player in a match.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.Player.data">
            <summary>
            A data object for custom data to associate with this player in your game.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.Player.#ctor">
            <summary>
            Default constructor.  You should not have to call this manually.
            You get players by calling LocalPlayer instance's Friends property or RealTimeMatch instance's Players property.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.GameKit.Player.gkPlayer">
            <summary>
            The low-level GKPlayer object if you need more advanced functionalities.
            </summary>
            <value>The low-level GKPlayer object.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.Player.playerID">
            <summary>
            The Game Center player ID.
            </summary>
            <value>The player ID.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.Player.alias">
            <summary>
            The Game Center player's alias.
            </summary>
            <value>The alias.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.Player.displayName">
            <summary>
            The Game Center player's display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.Player.isFriend">
            <summary>
            Indicates whether this player is a friend of the authenticated local player.
            </summary>
            <value>
                <c>true</c> if this player is friend; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.Player.photo">
            <summary>
            The photo of the player. Call LoadPhoto() before getting this.
            </summary>
            <value>The photo.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.Player.LoadPhoto(U3DXT.iOS.Native.GameKit.GKPhotoSize,System.Action{UnityEngine.Texture2D})">
            <summary>
            Loads the photo.
            </summary>
            <param name="size">Size.</param>
            <param name="completionCallback">Completion callback.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.Player.UnloadPhoto">
            <summary>
            Unloads the Texture2D photo from memory.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.Player.LoadPlayersByIDs(System.String[],System.Action{U3DXT.iOS.GameKit.Player[]})">
            <summary>
            Loads the players by IDs.
            </summary>
            <param name="playerIDs">Player IDs.</param>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.Player.PlayersToIDs(U3DXT.iOS.GameKit.Player[])">
            <summary>
            Players to player IDs.
            </summary>
            <returns>The player IDs.</returns>
            <param name="players">Players.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.PlayerStateChangedEventArgs">
            <summary>
            Player state changed event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.PlayerStateChangedEventArgs.player">
            <summary>
            The player.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.PlayerStateChangedEventArgs.isConnected">
            <summary>
            Whether player is connected.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.PlayerStateChangedEventArgs.#ctor(U3DXT.iOS.GameKit.Player,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.PlayerStateChangedEventArgs" /> class.
            </summary>
            <param name="player">Player.</param>
            <param name="isConnected">If set to <c>true</c> is connected.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.PlayersInvitedEventArgs">
            <summary>
            Invite players event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.PlayersInvitedEventArgs.playersToInvite">
            <summary>
            The players to invite.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.PlayersInvitedEventArgs.#ctor(U3DXT.iOS.GameKit.Player[])">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.PlayersInvitedEventArgs" /> class.
            </summary>
            <param name="playersToInvite">Players to invite.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.RealTimeMatch">
            <summary>
            This class represents a real-time match setup by Game Center's match maker.
            Use this to send data to other players and start voice chats.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.RealTimeMatch.PlayerStateChanged">
            <summary>
            Occurs when a player's state has changed.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.RealTimeMatch.DataReceived">
            <summary>
            Occurs when the local player receives data from another player.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.#ctor">
            <summary>
            Default constructor. You should not call this directly.
            See <see cref="!:RealTimeMatchesController.StartMatch()" /> for more info.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch._InitWrapper(U3DXT.iOS.Native.Foundation.NSObject,System.String)">
            <summary>
            Initializes the wrapper.
            </summary>
            <param name="nsObj">The NSObject.</param>
            <param name="id">Identifier.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:U3DXT.iOS.GameKit.RealTimeMatch" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.GameKit.RealTimeMatch.gkMatch">
            <summary>
            The low-level GKMatch object if you need more advanced functionalities.
            </summary>
            <value>The low-level GKMatch object.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.RealTimeMatch.players">
            <summary>
            Gets the players.
            </summary>
            <value>The players.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.ReloadPlayers(System.Action)">
            <summary>
            Reloads the players.
            </summary>
            <param name="callback">Callback.</param>
        </member>
        <member name="P:U3DXT.iOS.GameKit.RealTimeMatch.expectedPlayerCount">
            <summary>
            The number of players still expected to join the match before it can start or continue.
            Start your game when this number equals to 0.
            </summary>
            <value>The expected player count.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.AddPlayers(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Brings up the Game Center match maker interface to add players to the game after some players have disconnected.
            Use the same params as when you called RealTimeMatchesController.StartMatch().
            </summary>
            <param name="minPlayers">Minimum players.</param>
            <param name="maxPlayers">Max players.</param>
            <param name="playerGroup">Player group.</param>
            <param name="playerAttributes">Player attributes.</param>
            <seealso cref="!:RealTimeMatchesController.StartMatch()" />
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.Disconnect">
            <summary>
            Disconnects the local player from the match.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.SendDataToAll(System.Byte[],System.Boolean)">
            <summary>
            Sends data to all players in the match.
            </summary>
            <returns>The error code; 0 means successful.</returns>
            <param name="data">A byte array representing the data to be sent.</param>
            <param name="reliable">Whether to send it using reliable method; using false for this sends it faster but does not guarantee delivery or the order of delivering multiple data packets.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.SendDataToAll(System.String,System.Boolean)">
            <summary>
            Sends data to all players in the match.
            </summary>
            <returns>The error code; 0 means successful.</returns>
            <param name="data">A string representing the data to be sent.</param>
            <param name="reliable">Whether to send it using reliable method; using false for this sends it faster but does not guarantee delivery or the order of delivering multiple data packets.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.SendData(U3DXT.iOS.GameKit.Player[],System.Byte[],System.Boolean)">
            <summary>
            Sends data to some players in the match.
            </summary>
            <returns>The error code; 0 means successful.</returns>
            <param name="players">An array of Player objects to send the data to.</param>
            <param name="data">A byte array representing the data to be sent.</param>
            <param name="reliable">Whether to send it using reliable method; using false for this sends it faster but does not guarantee delivery or the order of delivering multiple data packets.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.SendData(U3DXT.iOS.GameKit.Player[],System.String,System.Boolean)">
            <summary>
            Sends data to some players in the match.
            </summary>
            <returns>The error code; 0 means successful.</returns>
            <param name="players">An array of Player objects to send the data to.</param>
            <param name="data">A string representing the data to be sent.</param>
            <param name="reliable">Whether to send it using reliable method; using false for this sends it faster but does not guarantee delivery or the order of delivering multiple data packets.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatch.GetVoiceChat(System.String)">
            <summary>
            Returns a VoiceChat object with the channel name.  Use this to start a voice chat with other players.
            All players can talk to each other if using the same channel name.
            Or you can have the red team join one channel while the blue team join another channel, and have an "all" channel
            for all players to talk to all others.
            </summary>
            <returns>The voice chat.</returns>
            <param name="channel">Channel name.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.RealTimeMatchesController">
            <summary>
            This controller class creates and controls real-time Game Center matches.
            After subscribing to events, call Init().
            Call StartMatch() to start a match. The started match will be stored in the CurrentMatch property.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.RealTimeMatchesController.MatchMakerFailed">
            <summary>
            Occurs when the matchmaker cannot find a match.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.RealTimeMatchesController.MatchMakerCancelled">
            <summary>
            Occurs when the user cancels the matchmaking action.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.RealTimeMatchesController.MatchMakerFoundMatch">
            <summary>
            Occurs when the matchmaker finds a match.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.RealTimeMatchesController.InviteAccepted">
            <summary>
            Occurs when the user accepts an invite from another player.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.RealTimeMatchesController.PlayersInvited">
            <summary>
            Occurs when the user invites other players to play this game from Game Center app.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatchesController.UP_GameKitXT_enableVoiceChat">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatchesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.RealTimeMatchesController" /> class.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatchesController.Init">
            <summary>
            Initializes the controller. You must call this after subscribing to real-time match events.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatchesController.SetCurrentMatch(U3DXT.iOS.Native.GameKit.GKMatch)">
            <summary>
            U3DXT internal.
            </summary>
            <returns>The current match.</returns>
            <param name="">.</param>
        </member>
        <member name="P:U3DXT.iOS.GameKit.RealTimeMatchesController.currentMatch">
            <summary>
            The current real-time match, or null if none.
            </summary>
            <value>The current match.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatchesController.StartMatch(System.UInt32,System.UInt32,System.UInt32,System.UInt32,U3DXT.iOS.GameKit.Player[])">
            <summary>
            Brings up the match making interface to start a real-time match with other players.
            Raises MatchMakerFoundMatch, MatchMakerCancelled, and MatchMakerFailed events.
            </summary>
            <param name="minPlayers">The minimum nubmer of players that can join a match; between 2 and 4 inclusively.</param>
            <param name="maxPlayers">The maximum number of players that can join a match; between 2 and 4 inclusively.</param>
            <param name="playerGroup">The group this player belongs to such as skill level; Game Center will match players with the same playerGroup.</param>
            <param name="playerAttributes">The attributes of this player such as white or black pieces in chest; Game Center will try to match players so that all bits of this attribute are filled by all players of a game.</param>
            <param name="playersToInvite">An array of Player instances; this is passed in from the PlayersInvited event.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.RealTimeMatchesController.EnableVoiceChat">
            <summary>
            Enables voice chat.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.GameKit.TurnBasedMatch">
            <summary>
            This class represents a turn-based match setup by Game Center's match maker.
            You use this to advance turns, end match, and make a rematch.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.AdvanceTurnCompleted">
            <summary>
            Occurs when the advance turn operation completed successfully.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.AdvanceTurnFailed">
            <summary>
            Occurs when the advance turn operation failed.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.SaveTurnCompleted">
            <summary>
            Occurs when the save turn operation completed successfully.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.SaveTurnFailed">
            <summary>
            Occurs when the save turn operation failed.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.EndMatchCompleted">
            <summary>
            Occurs when the end match operation completed successfully.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.EndMatchFailed">
            <summary>
            Occurs when the end match operation failed.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.QuitMatchCompleted">
            <summary>
            Occurs when the quit match operation completed successfully.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.QuitMatchFailed">
            <summary>
            Occurs when the quit match operation failed.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.ExchangeSent">
            <summary>
            Occurs when sending an exchange is completed.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.SendReminderCompleted">
            <summary>
            Occurs when the send reminder operation completed successfully.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.SendReminderFailed">
            <summary>
            Occurs when the send reminder operation failed.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.SaveMergedMatchDataCompleted">
            <summary>
            Occurs when the save merged data operation completed successfully.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatch.SaveMergedMatchDataFailed">
            <summary>
            Occurs when the save merged data operation failed.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.#ctor">
            <summary>
            Default constructor. You should not call this directly.
            </summary>
            <seealso cref="!:TurnBasedMatchesController.StartMatch()" />
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch._InitWrapper(U3DXT.iOS.Native.Foundation.NSObject,System.String)">
            <summary>
            Initializes the wrapper.
            </summary>
            <param name="nsObj">The NSObject.</param>
            <param name="id">Identifier.</param>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.gkTurnBasedMatch">
            <summary>
            The low-level GKTurnBasedMatch object if you need more advanced functionalities.
            </summary>
            <value>The low-level GKTurnBasedMatch object.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.currentParticipant">
            <summary>
            The participant whose turn it is to act next.
            The current participant is the only participant that is allowed to update the match data with advanceTurn().
            </summary>
            <value>The current participant.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.matchData">
            <summary>
            Game-specific data that reflects the details of the match.
            </summary>
            <remarks>
            Although Game Center knows who is participating in the match and who is expected to act next,
            it does not know anything about your game’s internal logic.
            Your game provides the match data and all the programming logic required to interpret it.
            This data should include the current state of the game and provide any necessary details about what actions the current player is expected to take.
            It can also be helpful for your game to record information about recent moves made by other players.
            The game can then replay those moves visually for the player to show exactly how the match reached the state it is in now.
            <p></p>
            Your game never directly updates the match state associated with this property.
            Instead, when the data is updated to reflect the actions of the current player,
            your game serializes the updated state into memory and calls the match’s AdvanceTurn() or EndMatch()
            that transmit the updated state to Game Center.
            </remarks>
            <value>The match data.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.matchDataString">
            <summary>
            Game-specific data as string that reflects the details of the match.
            </summary>
            <remarks>
            Although Game Center knows who is participating in the match and who is expected to act next,
            it does not know anything about your game’s internal logic.
            Your game provides the match data and all the programming logic required to interpret it.
            This data should include the current state of the game and provide any necessary details about what actions the current player is expected to take.
            It can also be helpful for your game to record information about recent moves made by other players.
            The game can then replay those moves visually for the player to show exactly how the match reached the state it is in now.
            <p></p>
            Your game never directly updates the match state associated with this property.
            Instead, when the data is updated to reflect the actions of the current player,
            your game serializes the updated state into memory and calls the match’s AdvanceTurn() or EndMatch()
            that transmit the updated state to Game Center.
            </remarks>
            <value>The match data.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.matchID">
            <summary>
            A string that uniquely identifies the match.
            </summary>
            <remarks>
            This string is not intended to be displayed to players.
            Your game should use this string whenever it needs to identify a specific match.
            For example, if you want your game to store additional information on a device or in iCloud,
            it might store it in a database using the match ID as a key.
            </remarks>
            <value>The match ID.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.message">
            <summary>
            A message displayed to all players in the match.
            </summary>
            <remarks>
            This property is displayed by the standard user interface;
            this allows your game to use the message to inform players of the current state of the match.
            <p></p><strong>Important:</strong> This property can be changed only by an instance of your game associated with the current player.
            If an instance of your game associated with another player in the match attempts to write to this property,
            an exception is thrown.
            </remarks>
            <value>The message.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.participants">
            <summary>
            Information about the players participating in the match.
            </summary>
            <remarks>
            This property represents
            all participants in the match. Your game uses these objects to retrieve more information
            about the participants in the match.
            Your game also uses one of the objects in this array as a parameter whenever it calls
            a method that sets a different participant to act in the match.
            <p></p>
            The size of the array and the order in which the participants appear in the array are set when the match is first created, and never changes.
            When a match is first created, some participants may not hold actual players yet.
            Game Center searches for a player to fill that spot in the match only after your game sets that participant as the current player.
            </remarks>
            <value>The participants.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.allOtherParticipants">
            <summary>
            Gets all other participants.
            </summary>
            <value>All other participants.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.status">
            <summary>
            The current state of the match.
            </summary>
            <value>The status.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.ReloadPlayers(System.Action)">
            <summary>
            Reloads the players.
            </summary>
            <param name="callback">Callback.</param>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.isLocalPlayerTurn">
            <summary>
            Indicates whether it is the local player's turn for this match.
            </summary>
            <value>
                <c>true</c> if it is the local player's turn for this match; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.isCurrentMatch">
            <summary>
            Indicates whether this match is the current match held by TurnBasedMatchesController.
            </summary>
            <value>
                <c>true</c> if this match is the current match held by TurnBasedMatchesController; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.isNewMatch">
            <summary>
            Indicates whether this match is a new match created by the local player.
            </summary>
            <value>
                <c>true</c> if is new match; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.isMatchEnded">
            <summary>
            Indicates whether this match has ended.
            </summary>
            <value>
                <c>true</c> if is match ended; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.isLocalPlayerInMatch">
            <summary>
            Indicates whether the local player is in this match. If the local player quit this match, this would be false.
            </summary>
            <value>
                <c>true</c> if is local player in match; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.activeExchanges">
            <summary>
            Gets the active exchanges.
            </summary>
            <value>The active exchanges.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.completedExchanges">
            <summary>
            Gets the completed exchanges.
            </summary>
            <value>The completed exchanges.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatch.exchanges">
            <summary>
            Gets the exchanges.
            </summary>
            <value>The exchanges.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.EndMatch(System.Byte[],System.String)">
            <summary>
            Ends the match. Raises EndMatchCompleted and EndMatchFailed events for success and error completion.
            </summary>
            <param name="matchData">A serialized blob of data reflecting the end state for the match.</param>
            <param name="aMessage">A message to display reflecting the state of the match.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.EndMatch(System.String,System.String)">
            <summary>
            Ends the match. Raises EndMatchCompleted and EndMatchFailed events for success and error completion.
            </summary>
            <param name="matchData">A serialized string of data reflecting the end state for the match.</param>
            <param name="aMessage">A message to display reflecting the state of the match.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.SaveTurn(System.Byte[],System.String)">
            <summary>
            Updates the data stored on Game Center for the current match but does not advance the turn.
            Raises SaveTurnCompleted and SaveTurnFailed events for success and error completion.
            Available in iOS 6.0 and later.
            </summary>
            <param name="matchData">A serialized blob of data reflecting the game-specific state for the match.</param>
            <param name="aMessage">A message to display reflecting the state of the match.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.SaveTurn(System.String,System.String)">
            <summary>
            Updates the data stored on Game Center for the current match but does not advance the turn.
            Raises SaveTurnCompleted and SaveTurnFailed events for success and error completion.
            Available in iOS 6.0 and later.
            </summary>
            <param name="matchData">A serialized string of data reflecting the game-specific state for the match.</param>
            <param name="aMessage">A message to display reflecting the state of the match.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.AdvanceTurn(System.Byte[],System.String,U3DXT.iOS.GameKit.TurnBasedParticipant[],System.Double)">
            <summary>
            Updates the data stored on Game Center for the current match and advances the turn.
            Raises AdvanceTurnCompleted and AdvanceTurnFailed events for success and error completion.
            On iOS 5.0, it only takes one next participant, and ignores the timeout.
            </summary>
            <param name="matchData">A serialized blob of data reflecting the game-specific state for the match.</param>
            <param name="aMessage">A message to display reflecting the state of the match.</param>
            <param name="nextParticipants">An array of TurnBasedParticipant objects reflecting the order in which the players should act next.
            Each object in the array must be one of the objects stored in the match’s participants property.
            If null or not specified, it would use the next player in the order of the participants property.</param>
            <param name="timeout">The length of time the next player has to complete their turn; in seconds.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.AdvanceTurn(System.String,System.String,U3DXT.iOS.GameKit.TurnBasedParticipant[],System.Double)">
            <summary>
            Updates the data stored on Game Center for the current match and advances the turn.
            Raises AdvanceTurnCompleted and AdvanceTurnFailed events for success and error completion.
            On iOS 5.0, it only takes one next participant, and ignores the timeout.
            </summary>
            <param name="matchData">A serialized string of data reflecting the game-specific state for the match.</param>
            <param name="aMessage">A message to display reflecting the state of the match.</param>
            <param name="nextParticipants">An array of TurnBasedParticipant objects reflecting the order in which the players should act next.
            Each object in the array must be one of the objects stored in the match’s participants property.
            If null or not specified, it would use the next player in the order of the participants property.</param>
            <param name="timeout">The length of time the next player has to complete their turn; in seconds.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.QuitDuringTurn(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome,System.Byte[],System.String,U3DXT.iOS.GameKit.TurnBasedParticipant[],System.Double)">
            <summary>
            Resigns the current player from the match without ending the match.
            Raises QuitMatchCompleted and QuitMatchFailed events for success and error completion.
            On iOS 5.0, it only takes one next participant, and ignores the timeout.
            </summary>
            <param name="matchOutcome">The end outcome of the current player in the match.</param>
            <param name="matchData">A serialized blob of data reflecting the game-specific state for the match.</param>
            <param name="aMessage">A message to display reflecting the state of the match.</param>
            <param name="nextParticipants">An array of TurnBasedParticipant objects reflecting the order in which the players should act next.
            Each object in the array must be one of the objects stored in the match’s participants property.
            If null or not specified, it would use the next player in the order of the participants property.</param>
            <param name="timeout">The length of time the next player has to complete their turn; in seconds.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.QuitDuringTurn(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome,System.String,System.String,U3DXT.iOS.GameKit.TurnBasedParticipant[],System.Double)">
            <summary>
            Resigns the current player from the match without ending the match.
            Raises QuitMatchCompleted and QuitMatchFailed events for success and error completion.
            On iOS 5.0, it only takes one next participant, and ignores the timeout.
            </summary>
            <param name="matchOutcome">The end outcome of the current player in the match.</param>
            <param name="matchData">A serialized string of data reflecting the game-specific state for the match.</param>
            <param name="aMessage">A message to display reflecting the state of the match.</param>
            <param name="nextParticipants">An array of TurnBasedParticipant objects reflecting the order in which the players should act next.
            Each object in the array must be one of the objects stored in the match’s participants property.
            If null or not specified, it would use the next player in the order of the participants property.</param>
            <param name="timeout">The length of time the next player has to complete their turn; in seconds.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.QuitOutOfTurn(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome)">
            <summary>
            Resigns the player from the match when that player is not the current player. This action does not end the match.
            Raises QuitMatchCompleted and QuitMatchFailed events for success and error completion.
            </summary>
            <param name="matchOutcome">The end outcome of the current player in the match.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.Rematch">
            <summary>
            Create a new turn-based match with the same participants as this match.
            Raises TurnChanged and MatchMakerFailed events in TurnBasedMatchesController for success and error completion.
            Available in iOS 6.0 and later.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.SendExchange(U3DXT.iOS.GameKit.TurnBasedParticipant[],System.Byte[],System.String,System.String[],System.Double)">
            <summary>
            Sends an exchange request to one or more participants.
            Raises ExchangeSent event after completion.  Check the error property of the event for errors.
            Available in iOS 7.0 and later.
            </summary>
            <param name="participants">The participants to receive the exchange.</param>
            <param name="data">Data.</param>
            <param name="messageKey">The location of the alert message string in the Localizable.strings file for the current localization.</param>
            <param name="messageArgs">An array of strings to be substituted using the format string.</param>
            <param name="timeout">The length of time the next player has to complete their turn.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.SendExchange(U3DXT.iOS.GameKit.TurnBasedParticipant[],System.String,System.String,System.String[],System.Double)">
            <summary>
            Sends an exchange request to one or more participants.
            Raises ExchangeSent event after completion.  Check the error property of the event for errors.
            Available in iOS 7.0 and later.
            </summary>
            <param name="participants">The participants to receive the exchange.</param>
            <param name="data">Data.</param>
            <param name="messageKey">The location of the alert message string in the Localizable.strings file for the current localization.</param>
            <param name="messageArgs">An array of strings to be substituted using the format string.</param>
            <param name="timeout">The length of time the next player has to complete their turn.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.SaveMergedMatchData(System.Byte[],U3DXT.iOS.Native.GameKit.GKTurnBasedExchange[])">
            <summary>
            Saves the merged data.
            Raises SaveMergedMatchDataCompleted and SaveMergedMatchDataFailed events after completion.
            Available in iOS 7.0 and later.
            </summary>
            <param name="matchData">The new match data.</param>
            <param name="exchanges">An array of GKTurnBasedExchange objects that contains the resolved exchanges.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.SaveMergedMatchData(System.String,U3DXT.iOS.Native.GameKit.GKTurnBasedExchange[])">
            <summary>
            Saves the merged data.
            Raises SaveMergedMatchDataCompleted and SaveMergedMatchDataFailed events after completion.
            Available in iOS 7.0 and later.
            </summary>
            <param name="matchData">The new match data.</param>
            <param name="exchanges">An array of GKTurnBasedExchange objects that contains the resolved exchanges.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatch.SendReminder(U3DXT.iOS.GameKit.TurnBasedParticipant[],System.String,System.String[])">
            <summary>
            Sends a reminder to participants.
            Available in iOS 7.0 and later.
            Raises SendReminderCompleted and SendReminderFailed events.
            </summary>
            <param name="participants">Participants to receive the reminder.</param>
            <param name="messageKey">The location of the alert message string in the Localizable.strings file for the current localization.</param>
            <param name="messageArgs">An array of strings to be substituted using the format string.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.TurnBasedMatchesController">
            <summary>
            This controller class creates and controls turn-based Game Center matches.
            After subscribing to events, call Init() so events can be sent.
            Call StartMatch() to start a match. The started match will be stored in the CurrentMatch property.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.MatchMakerFailed">
            <summary>
            Occurs when the matchmaker cannot find a match.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.MatchMakerCancelled">
            <summary>
            Occurs when the user cancels the matchmaking action.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.TurnChanged">
            <summary>
            Occurs when it is the turn in a match changes.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.MatchEnded">
            <summary>
            Occurs when a match has ended.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.LocalPlayerQuit">
            <summary>
            Occurs when the local player quits a match from the matchmaking interface.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.PlayersInvited">
            <summary>
            Occurs when the user invites other players to play this game from Game Center app.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.ExchangeRequestReceived">
            <summary>
            Occurs when the user receives an exchange request.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.ExchangeCancelled">
            <summary>
            Occurs when the user receives an exchange cancellation.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.TurnBasedMatchesController.ExchangeCompleted">
            <summary>
            Occurs when the user receives all replies to the exchange request.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatchesController.Init">
            <summary>
            Initializes the controller. You must call this after subscribing to turn-based match events.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedMatchesController.currentMatch">
            <summary>
            The current turn-based match, or null if none.
            </summary>
            <value>The current match.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatchesController.SetCurrentMatch(U3DXT.iOS.GameKit.TurnBasedMatch)">
            <summary>
            Sets a TurnBasedMatch as the current match.
            </summary>
            <param name="match">The match to be set as the current match.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatchesController._CheckSetCurrentMatch(U3DXT.iOS.GameKit.TurnBasedMatch)">
            <summary>
            U3DXT internal.
            </summary>
            <param name="match">Match.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatchesController.SetNativeMatchAsCurrentMatch(U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            Sets a low-level GKTurnBasedMatch object as the current match.
            Some processing needs to happen in the background, and when it is done,
            one of the two events: TurnChanged or MatchEnded, will
            be raised. At that time, the currentMatch property will be set to a
            new high-level TurnBasedMatch object.
            <p></p>
            Be careful when using this method because it mixes the low-level and high-level API.
            </summary>
            <param name="match">Match.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatchesController.StartMatch(System.UInt32,System.UInt32,U3DXT.iOS.GameKit.Player[],System.Boolean)">
            <summary>
            Brings up the match making interface to start or join a turn-based match with other players.
            Raises TurnChanged, MatchMakerCancelled, and MatchMakerFailed events.
            </summary>
            <param name="minPlayers">The minimum nubmer of players that can join a match; between 2 and 4 inclusively.</param>
            <param name="maxPlayers">The maximum number of players that can join a match; between 2 and 4 inclusively.</param>
            <param name="playersToInvite">An array of Player instances; this is passed in from the PlayersInvited event.</param>
            <param name="showExistingMatches">If set to <c>true</c> show existing matches.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatchesController.LoadAllMyMatches(System.Action{U3DXT.iOS.GameKit.TurnBasedMatch[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads all the turn-based matches involving the local player and calls the callback on completion.
            </summary>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedMatchesController.RemoveAllMyMatches">
            <summary>
            A helper function to end and remove all turn-based matches that this player is participating in.
            This should be used for testing only.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.GameKit.TurnBasedParticipant">
            <summary>
            This class represents a participant in a turn-based Game Center match.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnBasedParticipant.#ctor">
            <summary>
            Default constructor.  You should not have to call this manually.
            You get participants by calling a TurnBasedMatch instance's Participants property.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedParticipant.gkTurnBasedParticipant">
            <summary>
            The low-level GKTurnBasedParticipant object if you need more advanced functionalities.
            </summary>
            <value>The native participant.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedParticipant.lastTurnDate">
            <summary>
            The date and time that this participant last took a turn in the game.
            </summary>
            <value>The last turn date.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedParticipant.matchOutcome">
            <summary>
            The end-state of this participant in the match.
            </summary>
            <value>The match outcome.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedParticipant.player">
            <summary>
            The player for this participant.
            It may be null if this slot in the match has not yet been filled by an actual player.
            </summary>
            <value>The player.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedParticipant.playerID">
            <summary>
            The player identifier for this participant.
            It may be empty if this slot in the match has not yet been filled by an actual player.
            </summary>
            <value>The player I.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedParticipant.status">
            <summary>
            The current status of the participant.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.TurnBasedParticipant.timeoutDate">
            <summary>
            The date and time that the participant’s turn times out.
            </summary>
            <value>The timeout date.</value>
        </member>
        <member name="T:U3DXT.iOS.GameKit.TurnChangedEventArgs">
            <summary>
            Turn changed event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.TurnChangedEventArgs.isLocalPlayersTurn">
            <summary>
            Whether it is the local player's turn.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.TurnChangedEventArgs.#ctor(U3DXT.iOS.GameKit.TurnBasedMatch)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.TurnChangedEventArgs" /> class.
            </summary>
            <param name="match">Match.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.VoiceChat">
            <summary>
            This class represents a voice chat between players in a match.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.GameKit.VoiceChat.PlayerStateChanged">
            <summary>
            Occurs when a player's voice chat state has changed.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.VoiceChat.#ctor">
            <summary>
            Default constructor. You should not call this directly.
            See <see cref="!:RealTimeMatch.GetVoiceChat()" /> for more info.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.VoiceChat._InitWrapper(U3DXT.iOS.Native.Foundation.NSObject,System.String)">
            <summary>
            Initializes the wrapper.
            </summary>
            <param name="nsObj">The NSObject.</param>
            <param name="id">Identifier.</param>
        </member>
        <member name="P:U3DXT.iOS.GameKit.VoiceChat.gkVoiceChat">
            <summary>
            The low-level GKVoiceChat object if you need more advanced functionalities.
            </summary>
            <value>The low-level GKVoiceChat object.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.VoiceChat.name">
            <summary>
            The name of this voice chat channel.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:U3DXT.iOS.GameKit.VoiceChat.Join">
            <summary>
            Joins a voice chat channel.  Once called, the local player can hear other players in the same channel.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.VoiceChat.Leave">
            <summary>
            Leaves a voice chat channel.  Once called, the local player can no longer hear other players in this channel.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.GameKit.VoiceChat.isTalking">
            <summary>
            Indicates whether the local player is talking in this channel.
            A player can only talk in one channel at a time.
            Setting this channel to true will set the other active channel to false.
            </summary>
            <value>
                <c>true</c> if the local player is talking in this channel; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.GameKit.VoiceChat.volume">
            <summary>
            The volume of this channel.
            </summary>
            <value>The volume.</value>
        </member>
        <member name="T:U3DXT.iOS.GameKit.VoiceChatPlayerStateChangedEventArgs">
            <summary>
            Voice chat player state changed event arguments.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.VoiceChatPlayerStateChangedEventArgs.voiceChat">
            <summary>
            The voice chat.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.VoiceChatPlayerStateChangedEventArgs.player">
            <summary>
            The player.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.GameKit.VoiceChatPlayerStateChangedEventArgs.state">
            <summary>
            The state.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.GameKit.VoiceChatPlayerStateChangedEventArgs.#ctor(U3DXT.iOS.GameKit.VoiceChat,U3DXT.iOS.GameKit.Player,U3DXT.iOS.Native.GameKit.GKVoiceChatPlayerState)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.GameKit.VoiceChatPlayerStateChangedEventArgs" /> class.
            </summary>
            <param name="voiceChat">Voice Chat.</param>
            <param name="player">Player.</param>
            <param name="state">State.</param>
        </member>
        <member name="T:U3DXT.iOS.GameKit.Helpers.GameCenterControllerDelegate">
            <summary>
            Game center controller delegate.
            </summary>
        </member>
    </members>
</doc>
