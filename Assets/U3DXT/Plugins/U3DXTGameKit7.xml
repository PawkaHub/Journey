<?xml version="1.0"?>
<doc>
    <assembly>
        <name>U3DXTGameKit7</name>
    </assembly>
    <members>
        <member name="T:U3DXT.iOS.Native.GameKit.GKAchievement">
            <summary>
            Your game uses a <c>GKAchievement</c> object to communicate with Game Center about the local player’s progress towards completing an achievement.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To request the local player’s progress on achievements, call the <c>loadAchievementsWithCompletionHandler:</c> class method.</p>
                <p>To report the local player’s progress on an achievement, your game updates the <c>percentComplete</c> property of an achievement object and calls the object’s <c>reportAchievementWithCompletionHandler:</c> method. To report progress on multiple achievements at once, use the <c>reportAchievements:withCompletionHandler:</c> class method.</p>
                <p>By default, when an achievement is completed, Game Kit displays a notification banner to the player. If your game wants to display its own achievement user interface, you can prevent the banner from being displayed by setting the <c>showsCompletionBanner</c> property of the achievement object to <c>false</c> before reporting the player’s progress.</p>
                <p>To clear all progress the local player has made on achievements, call the <c>resetAchievementsWithCompletionHandler:</c> class method. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_loadAchievementsWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_reportAchievements_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_reportAchievements_withEligibleChallenges_withCompletionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_resetAchievementsWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_get_completed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_get_hidden(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_get_identifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_set_identifier(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_get_lastReportedDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_get_percentComplete(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_set_percentComplete(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_get_playerID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_get_showsCompletionBanner(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_set_showsCompletionBanner(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_challengeComposeControllerWithPlayers_message_completionHandler_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_alloc_initWithIdentifier_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_alloc_initWithIdentifier_forPlayer_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_issueChallengeToPlayers_message_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_reportAchievementWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.UP_GKAchievement_selectChallengeablePlayerIDs_withCompletionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKAchievement" /> class.
            <br></br>Equivalent to the native <c>[[GKAchievement alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievement.ClassExists">
            <summary>
            Returns whether the native GKAchievement class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.LoadAchievements(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads previously submitted achievement progress for the local player from Game Center.
            <br></br>Equivalent to the native <c>loadAchievementsWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>achievements</em>
                <p>An array of <c>GKAchievement</c> objects that represents all progress reported to Game Center for the local player. If an error occurred, this parameter may be non-<c>null</c>, in which case the array holds whatever achievement information Game Kit was able to fetch.</p>
                <em>error</em>
                <p>If an error occurred, this object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.ReportAchievements(System.Object[],System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Reports progress on an array of achievements.
            <br></br>Equivalent to the native <c>reportAchievements:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>achievements</em>
                <p>An array of <c>GKAchievement</c> objects that contains the achievements whose progress is being updated.</p>
                <em>completionHandler</em>
                <p>A block to be called after the operation completes.</p>
                <p>The block takes the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If the operation was successful, this value is <c>null</c>; otherwise, this parameter holds an object that describes the problem that occurred.</p>
                <b>Discussion</b>
                <p>Use this class method whenever you need to submit multiple achievement updates at the same time. Calling this method reports each of the achievements, exactly as if you called the <c>reportAchievementWithCompletionHandler:</c> method on each achievement object in the array. However, the entire operation can be processed more efficiently using this method, and the completion handler is only called once.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="achievements">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.ReportAchievements(System.Object[],System.Object[],System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Reports a list of achievements and limits the challenges those achievements may complete.
            <br></br>Equivalent to the native <c>reportAchievements:withEligibleChallenges:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>achievements</em>
                <p>An array of <c>GKAchievement</c> objects that represents all achievements that are being reported.</p>
                <em>challenges</em>
                <p>An array of <c>GKChallenge</c> objects that represents the limited challenges that are associated with the reported achievements. If an error occurred, this parameter may be non-<c>null</c>, in which case the array holds whatever challenge information Game Kit was able to fetch.</p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="achievements">
            </param>
            <param name="challenges">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.ResetAchievements(System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Resets all achievement progress for the local player.
            <br></br>Equivalent to the native <c>resetAchievementsWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the reset action is completed.</p>
                <p>The block takes the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If the operation was successful, this value is <c>null</c>; otherwise, this parameter holds an object that describes the problem that occurred.</p>
                <b>Discussion</b>
                <p>Calling this class method deletes all progress towards achievements previously reported for the local player. Hidden achievements that were previously visible are now hidden again.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievement.completed">
            <summary>
            A Boolean value that states whether the player has completed the achievement. (read-only)
            <br></br>Equivalent to the native <c>completed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is <c>true</c> if the <c>percentComplete</c> property is equal to <c>100.0</c>; otherwise, it is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievement.hidden">
            <summary>
            A Boolean value that states whether this achievement is normally kept secret from the player. (read-only) ( Deprecated in iOS 6.0.  Use the <c>hidden</c> property on the <c>GKAchievementDescription</c> class instead.)
            <br></br>Equivalent to the native <c>hidden</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievement.identifier">
            <summary>
            A string used to uniquely identify the specific achievement the object refers to.
            <br></br>Equivalent to the native <c>identifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>identifier</c> property must match the identifier string for an achievement you created for your game on iTunes Connect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievement.lastReportedDate">
            <summary>
            The last time that progress on the achievement was successfully reported to Game Center. (read-only)
            <br></br>Equivalent to the native <c>lastReportedDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>On a newly initialized achievement object, this property holds the current date.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievement.percentComplete">
            <summary>
            A percentage value that states how far the player has progressed on this achievement.
            <br></br>Equivalent to the native <c>percentComplete</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value for a newly initialized achievement object is <c>0.0</c>. The range of legal values is between <c>0.0</c> and <c>100.0</c>, inclusive.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievement.playerID">
            <summary>
            A string used to identify the player who earned the achievement. (read-only)
            <br></br>Equivalent to the native <c>playerID</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievement.showsCompletionBanner">
            <summary>
            A Boolean value that states whether a banner is displayed when the achievement is completed.
            <br></br>Equivalent to the native <c>showsCompletionBanner</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When an achievement is completed and the value of this property is <c>true</c>, a notification banner is displayed to the player to inform them of the completed achievement. If the value of this property is <c>false</c>, there is no visual indication that the achievement is completed. Your game should set this property to <c>false</c> only when it wants to provide its own visual indicator that the achievement was earned. The default value is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.ChallengeComposeController(System.Object[],System.String,System.Action{U3DXT.iOS.Native.UIKit.UIViewController,System.Boolean,System.Object[]})">
            <summary>
            Provides a challenge compose view controller with pre-selected player identifiers and a message.
            <br></br>Equivalent to the native <c>challengeComposeControllerWithPlayers:message:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerIDs</em>
                <p>An array of <c>String</c> objects that contains the player identifiers that the challenge is to be sent to.</p>
                <em>message</em>
                <p>The message that is sent to other players. This message can be edited by the player.</p>
                <em>completionHandler</em>
                <p>A block to be called after the view controller has been displayed. Contains the reason the handler was called and all player identifiers that the challenge was sent to.</p>
                <b>Return Value</b>
                <p>A <c>UIViewController</c> view that contains the player identifiers and the challenge message.</p>
                <b>Discussion</b>
                <p>The view controller returned is presented modally from the top view controller. After the view controller is displayed and the player sends or cancels the challenge, the completion handler block is called.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="playerIDs">
            </param>
            <param name="message">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.#ctor(System.String)">
            <summary>
            Creates an instance of the native GKAchievement and initializes the object. Initializes a new achievement object.
            <br></br>Equivalent to the native <c>[[GKAchievement alloc] initWithIdentifier:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifier</em>
                <p>A string that matches the identifier string for an achievement you created for your game on iTunes Connect.</p>
                <b>Return Value</b>
                <p>An initialized achievement object, or <c>null</c> if an error occurred.</p>
                <b>Discussion</b>
                <p>Your game initializes a new achievement object only when it has not previously reported progress for that achievement. If your game has previously reported progress on an achievement, you should first retrieve the current progress by calling the <c>loadAchievementsWithCompletionHandler:</c> class method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the native GKAchievement and initializes the object. Initializes an achievement for a specific player.
            <br></br>Equivalent to the native <c>[[GKAchievement alloc] initWithIdentifier:forPlayer:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifier</em>
                <p>A string that matches the identifier string for an achievement you created for your game on iTunes Connect.</p>
                <em>player_ID</em>
                <p>The identifier for the player associated with the specified achievement.</p>
                <b>Discussion</b>
                <p>Your game initializes a new achievement object for a specific player only when it has not previously reported progress for that achievement. Use this method to submit a participant’s achievement when ending a turn-based match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
            <param name="playerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.IssueChallengeToPlayers(System.Object[],System.String)">
            <summary>
            Issue an achievement challenge to a list of players. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>issueChallengeToPlayers:message:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerIDs</em>
                <p>An array of <c>String</c> objects containing the player identifiers of the players being challenged.</p>
                <em>message</em>
                <p>A text message to display to the challenged players.</p>
                <b>Discussion</b>
                <p>This method should be used only to implement your own custom challenge user interface. You should only issue challenges when the local player directs you to do so.</p>
                <p>If the achievement is marked as hidden in iTunes Connect, or if the challenged player has already earned the achievement and it is not marked as replayable, then the challenge is not issued.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="playerIDs">
            </param>
            <param name="message">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.ReportAchievement(System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Reports the player’s progress to Game Center. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>reportAchievementWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the operation completes.</p>
                <p>The block takes the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If the operation was successful, this value is <c>null</c>; otherwise, this parameter holds an object that describes the problem that occurred.</p>
                <b>Discussion</b>
                <p>When the player makes progress towards completing an achievement, your game communicates the player’s progress to Game Center by calling this method. An achievement object is implicitly tied to the local player that was authenticated when the object was created; your game should only report progress when the same local player is still authenticated on the device.</p>
                <p>
                    <strong>Note:</strong> To avoid using network bandwidth unnecessarily, only report an achievement when the player has made more progress towards completing it.</p>
                <p>
                </p>
                <p>When the progress is successfully reported, the achievement is made visible if it was previously hidden. The <c>percentComplete</c> and <c>lastReportedDate</c> property values stored on Game Center are updated if the new <c>percentComplete</c> value is greater than the value previously stored on Game Center. if the value of the <c>percentComplete</c> property was equal to <c>100.0</c>, then the achievement is marked as completed and a banner may be shown to the player.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. The background task automatically handles network errors, resending the data until the task completes. When the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property hidden</c></li>
                    <li>    <c>@property completed</c></li>
                    <li>    <c>@property showsCompletionBanner</c></li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievement.SelectChallengeablePlayerIDs(System.Object[],System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Finds the subset of players that can earn an achievement.
            <br></br>Equivalent to the native <c>selectChallengeablePlayerIDs:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerIDs</em>
                <p>An array of <c>String</c> objects containing a list of players that. The list of players is used to find those players that are eligible to earn the achievement.</p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>challengeablePlayerIDs</em>
                <p>An array of player identifiers representing the players in the original array that are able to complete the challenge. If an error occurred, this parameter may be non-<c>null</c>, in which case the array holds whatever achievement information Game Kit was able to fetch.</p>
                <em>error</em>
                <p>If an error occurred, this object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="playerIDs">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKAchievementChallenge">
            <summary>
            A <c>GKAchievementChallenge</c> is a challenge to a player to complete a specific achievement.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.UP_GKAchievementChallenge_get_achievement(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.UP_GKAchievementChallenge_loadReceivedChallengesWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKAchievementChallenge" /> class.
            <br></br>Equivalent to the native <c>[[GKAchievementChallenge alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.ClassExists">
            <summary>
            Returns whether the native GKAchievementChallenge class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.LoadReceivedChallenges(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the list of outstanding challenges.
            <br></br>Equivalent to the native <c>loadReceivedChallengesWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>challenges</em>
                <p>An array of <c>GKChallenge</c> objects that represents all challenges made to the local player. If an error occurred, this parameter may be non-<c>null</c>, in which case the array holds whatever challenge information Game Kit was able to fetch.</p>
                <em>error</em>
                <p>If an error occurred, this object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementChallenge.achievement">
            <summary>
            The achievement the player must complete. (read-only)
            <br></br>Equivalent to the native <c>achievement</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKAchievementDescription">
            <summary>
            An <c>GKAchievementDescription</c> object holds text and images used to describe an achievement. When you develop your game, you create localized achievement descriptions in iTunes Connect. At runtime, your game retrieves these descriptions from Game Center. Usually your game downloads the achievement descriptions when it wants to present a custom achievement user interface to the player.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To retrieve a set of achievement description objects for your game, call the <c>loadAchievementDescriptionsWithCompletionHandler:</c> class method. For performance reasons, achievement images are downloaded separately. To download am achievement description’s completion image, call that object’s  <c>loadImageWithCompletionHandler:</c> method.</p>
                <p>The <c>incompleteAchievementImage</c> and <c>placeholderCompletedAchievementImage</c> class methods provide standard images your game can use to present achievement progress to the player.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_incompleteAchievementImage">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_loadAchievementDescriptionsWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_placeholderCompletedAchievementImage">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_achievedDescription(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_groupIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_hidden(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_identifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_image(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_maximumPoints(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_replayable(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_get_unachievedDescription(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.UP_GKAchievementDescription_loadImageWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKAchievementDescription" /> class.
            <br></br>Equivalent to the native <c>[[GKAchievementDescription alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.ClassExists">
            <summary>
            Returns whether the native GKAchievementDescription class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.IncompleteAchievementImage">
            <summary>
            A common image for incomplete achievements.
            <br></br>Equivalent to the native <c>incompleteAchievementImage</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>An image object.</p>
                <b>Discussion</b>
                <p>On OS X, this class method returns an <c><!--a target="_self" -->NSImage<!--/a--></c> object but otherwise works identically.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.LoadAchievementDescriptions(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Downloads the achievement descriptions from Game Center.
            <br></br>Equivalent to the native <c>loadAchievementDescriptionsWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>descriptions</em>
                <p>An array of <c>GKAchievementDescription</c> objects containing the achievements in your game. If an error occurred, this value may be non-<c>null</c>. In this case, the array holds whatever descriptions were downloaded by Game Kit before the error occurred.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.PlaceholderCompletedAchievementImage">
            <summary>
            A common image for completed achievements.
            <br></br>Equivalent to the native <c>placeholderCompletedAchievementImage</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>An image object.</p>
                <b>Discussion</b>
                <p>When an achievement is completed, your game can display this image until the custom image for an achievement finishes loading.</p>
                <p>On OS X, this class method returns an <c><!--a target="_self" -->NSImage<!--/a--></c> object but otherwise works identically.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– loadImageWithCompletionHandler:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.achievedDescription">
            <summary>
            A localized description to be used after the local player has completed the achievement. (read-only)
            <br></br>Equivalent to the native <c>achievedDescription</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.groupIdentifier">
            <summary>
            The identifier for the group the achievement description is part of. (read-only)
            <br></br>Equivalent to the native <c>groupIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If your game is configured to be part of a game group in iTunes Connect, this property holds the identifier you assigned to the achievement in the game group. If the game is not part of a game group, this property is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.hidden">
            <summary>
            A Boolean value that states whether this achievement is initially visible to players. (read-only)
            <br></br>Equivalent to the native <c>hidden</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>false</c>, this achievement is always visible to the player. If <c>true</c>, the achievement is not displayed in any of the standard achievement user interface screens. It remains hidden until the first time your game reports progress towards completing this achievement.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.identifier">
            <summary>
            A unique string used to identify the achievement. (read-only)
            <br></br>Equivalent to the native <c>identifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>GKAchievementDescription</c> property holds the identifier string you created for the achievement on iTunes Connect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.image">
            <summary>
            An image to display for the completed achievement. (read-only) ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>image</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is undefined until after the image is loaded. See <c>loadImageWithCompletionHandler:</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.maximumPoints">
            <summary>
            The number of points the player earns by completing this achievement. (read-only)
            <br></br>Equivalent to the native <c>maximumPoints</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.replayable">
            <summary>
            A Boolean value that states whether this achievement can be earned multiple times. (read-only)
            <br></br>Equivalent to the native <c>replayable</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>false</c>, then the achievement may only be earned once. After the achievement is earned, Game Center ignores any further progress submitted for it. If the value of this property is <c>true</c>, then the achievement is considered earned each time your game reports progress to Game Center that completes the achievement. This means that any appropriate banners are displayed to the player again, challenges based on the achievement are completed, and so on.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.title">
            <summary>
            A localized title for the achievement. (read-only)
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementDescription.unachievedDescription">
            <summary>
            A localized description of the achievement to be used when the local player has not completed the achievement. (read-only)
            <br></br>Equivalent to the native <c>unachievedDescription</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementDescription.LoadImage(System.Action{U3DXT.iOS.Native.UIKit.UIImage,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the <c>image</c> property for a completed achievement.
            <br></br>Equivalent to the native <c>loadImageWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>image</em>
                <p>The downloaded image. If an error occurred, this value is <c>null</c>.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>Your game should call <c>loadImageWithCompletionHandler:</c> for each achievement the user has completed. Your game should display the placeholder image until the image is successfully downloaded. After the block is called, the description’s <c>image</c> property holds the same image object that is returned to the block.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <p>On OS X, this class method returns an <c><!--a target="_self" -->NSImage<!--/a--></c> object but otherwise works identically.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>+ placeholderCompletedAchievementImage</c>
                    </li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKAchievementViewController">
            <summary>
            An <c>GKAchievementViewController</c> object provides a standard user interface to display achievement progress for the local player. If the <c>GKGameCenterViewController</c> class is available, you should use it instead.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To show achievements for the local player, initialize a new <c>GKAchievementViewController</c> object and set the delegate. Then present the new view controller and wait for the delegate to be called. Once the delegate is called, dismiss the view controller.</p>
                <p>On iOS, you present and dismiss the view controller from another view controller in your game, using the methods provided by the <c>UIViewController</c> class. On OS X, you use the <c><!--a target="_self" -->GKDialogController<!--/a--></c> class to present and dismiss the view controller in a window.</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	The <c>GKAchievementViewController</c> class is not intended to be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKAchievementViewController.DidFinish">
            <summary>
            Called when the user dismisses the achievements user interface. (required)
            <br></br>Equivalent to implementing the native <c>achievementViewControllerDidFinish:</c> method of <c>GKAchievementViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewController.UP_GKAchievementViewController_get_achievementDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewController.UP_GKAchievementViewController_set_achievementDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKAchievementViewController" /> class.
            <br></br>Equivalent to the native <c>[[GKAchievementViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementViewController.ClassExists">
            <summary>
            Returns whether the native GKAchievementViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementViewController.achievementDelegate">
            <summary>
            The achievement view controller’s delegate.
            <br></br>Equivalent to the native <c>achievementDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Your game must set the delegate before presenting the view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKAchievementViewControllerDelegate">
            <summary>
            An object implementing the <c>GKAchievementViewControllerDelegate</c> protocol is called when the user dismisses the achievements view controller. Typically, this protocol is implemented by the object in your game that originally displayed the achievements user interface.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewControllerDelegate.UP_GKAchievementViewControllerDelegate_set__achievementViewControllerDidFinish__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKAchievementViewControllerDelegate.DidFinish(U3DXT.iOS.Native.GameKit.GKAchievementViewController)">
            <summary>
            (<b>required</b>) Called when the user dismisses the achievements user interface. (required)
            <br></br>Equivalent to the native <c>achievementViewControllerDidFinish:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The achievement view controller whose interface was dismissed by the player.</p>
                <b>Discussion</b>
                <p>Your delegate should dismiss the view controller. If your game paused any gameplay or other activities, it can restart those services in this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKAchievementViewControllerDelegate._achievementViewControllerDidFinish__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_achievementViewControllerDidFinish__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKChallenge">
            <summary>
            A <c>GKChallenge</c> object represents a challenge issued by a player to another player.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>Players use the Game Center app to issue and view challenges. However, your game can also customize its challenge behaviors in a number of ways:</p>
                <ul class="ul">
                    <li class="li">
                        <p>You can load the list of challenges issued to the local player by calling the <c>loadReceivedChallengesWithCompletionHandler:</c> class method. For example, you might do this to display the challenges in your game’s user interface.</p>
                    </li>
                    <li class="li">
                        <p>Your app can issue challenges using a <c>GKScore</c> or <c>GKAchievement</c> object. Your game should only issue challenges when the local player initiates the action in your user interface.</p>
                    </li>
                    <li class="li">
                        <p>Your game can be notified when new challenge events are received. See <c>GKChallengeEventHandlerDelegate</c>.</p>
                    </li>
                </ul>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	You never subclass the <c>GKChallenge</c> class directly. However, subclasses of <c>GKChallenge</c> represent specific kinds of challenges. Two challenge types exist:</p>
                <ul class="ul">
                    <li class="li">
                        <p>A <c>GKScoreChallenge</c> is a challenge to beat a score the local player earned in a leaderboard.</p>
                    </li>
                    <li class="li">
                        <p>A <c>GKAchievementChallenge</c> is a challenge to complete an achievement that the local player has already completed.</p>
                    </li>
                </ul>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.UP_GKChallenge_loadReceivedChallengesWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.UP_GKChallenge_get_completionDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.UP_GKChallenge_get_issueDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.UP_GKChallenge_get_issuingPlayerID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.UP_GKChallenge_get_message(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.UP_GKChallenge_get_receivingPlayerID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.UP_GKChallenge_get_state(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.UP_GKChallenge_decline(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKChallenge" /> class.
            <br></br>Equivalent to the native <c>[[GKChallenge alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallenge.ClassExists">
            <summary>
            Returns whether the native GKChallenge class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.LoadReceivedChallenges(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the list of outstanding challenges.
            <br></br>Equivalent to the native <c>loadReceivedChallengesWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>challenges</em>
                <p>An array of <c>GKChallenge</c> objects that represents all challenges made to the local player. If an error occurred, this parameter may be non-<c>null</c>, in which case the array holds whatever challenge information Game Kit was able to fetch.</p>
                <em>error</em>
                <p>If an error occurred, this object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallenge.completionDate">
            <summary>
            The date the challenge was completed. (read-only)
            <br></br>Equivalent to the native <c>completionDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the challenge is not complete, this value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallenge.issueDate">
            <summary>
            The date the challenge was issued. (read-only)
            <br></br>Equivalent to the native <c>issueDate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallenge.issuingPlayerID">
            <summary>
            The player identifier for the player who issued the challenge. (read-only)
            <br></br>Equivalent to the native <c>issuingPlayerID</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallenge.message">
            <summary>
            A text message that describes the challenge. (read-only)
            <br></br>Equivalent to the native <c>message</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallenge.receivingPlayerID">
            <summary>
            The player identifier for the player who received the challenge. (read-only)
            <br></br>Equivalent to the native <c>receivingPlayerID</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallenge.state">
            <summary>
            The current state of the challenge. (read-only)
            <br></br>Equivalent to the native <c>state</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>See  “Challenge State”  for possible values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallenge.Decline">
            <summary>
            Declines a challenge.
            <br></br>Equivalent to the native <c>decline</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If your game implements a custom user interface to display challenges, it should include controls that allow a player to decline a challenge. If the player uses your user interface to decline a challenge, call this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler">
            <summary>
            The <c>GKChallengeEventHandler</c> class is used to respond to events related to challenges sent or received by the local player.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To use it, call the <c>challengeEventHandler</c> class method to get the  singleton  instance and assign an object that implements the <c>GKChallengeEventHandlerDelegate</c> protocol to its <c>delegate</c> property. You should assign a challenge event handler immediately after the local player has been authenticated, because your game may have been launched in response to a challenge notification being received by the player.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.UP_GKChallengeEventHandler_challengeEventHandler">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.UP_GKChallengeEventHandler_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.UP_GKChallengeEventHandler_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler" /> class.
            <br></br>Equivalent to the native <c>[[GKChallengeEventHandler alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.ClassExists">
            <summary>
            Returns whether the native GKChallengeEventHandler class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.ChallengeEventHandler">
            <summary>
            Returns the shared instance of the event handler ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>challengeEventHandler</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>An event handler object.</p>
                <b>Discussion</b>
                <p>Your game never directly creates a <c>GKChallengeEventHandler</c> object. Instead, retrieve the shared instance using this class method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandler.Delegate">
            <summary>
            The delegate for the event handler. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Only access this property from your game’s main thread.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate">
            <summary>
            You implement the <c>GKChallengeEventHandlerDelegate</c> delegate to control how challenges are displayed in your game.
            </summary>
            <remarks>
                <p>By default, Game Kit briefly displays a banner over your game when any of the following events occur:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The local player receives a challenge.</p>
                    </li>
                    <li class="li">
                        <p>The local player completes a challenge.</p>
                    </li>
                    <li class="li">
                        <p>A remote player completes a challenge issued by the local player.</p>
                    </li>
                </ul>
                <p>Your event handler can override or extend this behavior:</p>
                <ul class="ul">
                    <li class="li">
                        <p>It can prevent a banner from being displayed.</p>
                    </li>
                    <li class="li">
                        <p>It can be notified when a player taps in a banner.</p>
                    </li>
                    <li class="li">
                        <p>It can handle the events directly.</p>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.UP_GKChallengeEventHandlerDelegate_set__localPlayerDidCompleteChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.UP_GKChallengeEventHandlerDelegate_set__localPlayerDidReceiveChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.UP_GKChallengeEventHandlerDelegate_set__localPlayerDidSelectChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.UP_GKChallengeEventHandlerDelegate_set__remotePlayerDidCompleteChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.UP_GKChallengeEventHandlerDelegate_set__shouldShowBannerForLocallyCompletedChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.UP_GKChallengeEventHandlerDelegate_set__shouldShowBannerForLocallyReceivedChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.UP_GKChallengeEventHandlerDelegate_set__shouldShowBannerForRemotelyCompletedChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.LocalPlayerDidComplete(U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called when the local player completes a challenge.
            <br></br>Equivalent to the native <c>localPlayerDidCompleteChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>challenge</em>
                <p>The completed challenge.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.LocalPlayerDidReceive(U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called when the local player receives a new challenge.
            <br></br>Equivalent to the native <c>localPlayerDidReceiveChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>challenge</em>
                <p>The received challenge.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.LocalPlayerDidSelect(U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called when the local player selects a challenge banner displayed by Game Kit.
            <br></br>Equivalent to the native <c>localPlayerDidSelectChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>challenge</em>
                <p>The selected challenge.</p>
                <b>Discussion</b>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.RemotePlayerDidComplete(U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called when a remote player completes a challenge issued by the local player.
            <br></br>Equivalent to the native <c>remotePlayerDidCompleteChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>challenge</em>
                <p>The completed challenge.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.ShouldShowBannerForLocallyCompleted(U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called to determine whether a banner should be shown when the local player completes a challenge.
            <br></br>Equivalent to the native <c>shouldShowBannerForLocallyCompletedChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>challenge</em>
                <p>The completed challenge.</p>
                <b>Return Value</b>
                <p>Your delegate should return <c>true</c> if it wants a banner to be displayed. Otherwise it should return <c>false</c>.</p>
                <b>Discussion</b>
                <p>If you do not implement this method, a banner is always shown.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.ShouldShowBannerForLocallyReceived(U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called to determine whether a banner should be shown when the local player receives a challenge.
            <br></br>Equivalent to the native <c>shouldShowBannerForLocallyReceivedChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>challenge</em>
                <p>The received challenge.</p>
                <b>Return Value</b>
                <p>Your delegate should return <c>true</c> if it wants a banner to be displayed. Otherwise it should return <c>false</c>.</p>
                <b>Discussion</b>
                <p>If you do not implement this method, a banner is always shown.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate.ShouldShowBannerForRemotelyCompleted(U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called to determine whether a banner should be shown when a remote player completes a challenge.
            <br></br>Equivalent to the native <c>shouldShowBannerForRemotelyCompletedChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>challenge</em>
                <p>The completed challenge.</p>
                <b>Return Value</b>
                <p>Your delegate should return <c>true</c> if it wants a banner to be displayed. Otherwise it should return <c>false</c>.</p>
                <b>Discussion</b>
                <p>If you do not implement this method, a banner is always shown.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="challenge">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate._localPlayerDidCompleteChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_localPlayerDidCompleteChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate._localPlayerDidReceiveChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_localPlayerDidReceiveChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate._localPlayerDidSelectChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_localPlayerDidSelectChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate._remotePlayerDidCompleteChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_remotePlayerDidCompleteChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate._shouldShowBannerForLocallyCompletedChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_shouldShowBannerForLocallyCompletedChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate._shouldShowBannerForLocallyReceivedChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_shouldShowBannerForLocallyReceivedChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeEventHandlerDelegate._shouldShowBannerForRemotelyCompletedChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_shouldShowBannerForRemotelyCompletedChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKChallengeListener">
            <summary>
            Provides methods for responding to challenge events. Your app can ignore a challenge, start up in a specific state so the player can respond to a challenge, or notify the original challenger when the local player completes a challenge.
            </summary>
            <remarks>
                <p>Do not implement <c>GKChallengeListener</c> directly, instead use <c>GKLocalPlayerListener</c>. The <c>GKLocalPlayerListener</c> protocol inherits methods from <c>GKChallengeListener</c>, <c>GKInviteEventHandler</c>, and <c>GKTurnBasedEventListener</c> in order to handle multiple events.</p>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.UP_GKChallengeListener_set__player_didReceiveChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.UP_GKChallengeListener_set__player_wantsToPlayChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.UP_GKChallengeListener_set__player_didCompleteChallenge_issuedByFriend__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.UP_GKChallengeListener_set__player_issuedChallengeWasCompleted_byFriend__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.DidReceive(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called when a player receives a challenge and doesn’t want to address it immediately. (required)
            <br></br>Equivalent to the native <c>player:didReceiveChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The player that receives the challenge.</p>
                <em>challenge</em>
                <p>The challenge sent to the player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.WantsToPlay(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called when a player wants to start a game with the intention of completing a challenge. (required)
            <br></br>Equivalent to the native <c>player:wantsToPlayChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The player who selected the challenge.</p>
                <em>challenge</em>
                <p>The challenge to be played by the player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.DidComplete(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKChallenge,U3DXT.iOS.Native.GameKit.GKPlayer)">
            <summary>
            (optional)
            <br></br>Equivalent to the native <c>player:didCompleteChallenge:issuedByFriend:</c> method.
            </summary>
            <remarks>
            </remarks>
            <param name="player">
            </param>
            <param name="challenge">
            </param>
            <param name="friendPlayer">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKChallengeListener.IssuedChallengeWasCompleted(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKChallenge,U3DXT.iOS.Native.GameKit.GKPlayer)">
            <summary>
            (optional)
            <br></br>Equivalent to the native <c>player:issuedChallengeWasCompleted:byFriend:</c> method.
            </summary>
            <remarks>
            </remarks>
            <param name="player">
            </param>
            <param name="challenge">
            </param>
            <param name="friendPlayer">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeListener._player_didReceiveChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didReceiveChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeListener._player_wantsToPlayChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_wantsToPlayChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeListener._player_didCompleteChallenge_issuedByFriend__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didCompleteChallenge_issuedByFriend__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKChallengeListener._player_issuedChallengeWasCompleted_byFriend__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_issuedChallengeWasCompleted_byFriend__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKChallengeState">
            <summary>
            Possible states that a challenge can live in.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKChallengeState.Completed">
            <summary>
                <p>The receiving player successfully completed the challenge.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKChallengeStateCompleted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKChallengeState.Pending">
            <summary>
                <p>The challenge has been issued, but is not yet completed nor declined.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKChallengeStatePending</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKChallengeState.Invalid">
            <summary>
                <p>An error occurred. The state of this challenge is not valid.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKChallengeStateInvalid</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKChallengeState.Declined">
            <summary>
                <p>The receiving player declined the challenge.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKChallengeStateDeclined</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKError">
            <summary>
            Constants belonging to GKError.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKError.Domain">
            <summary>
                <p>An error occurred in Game Kit.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorDomain</c> constant.
            </summary>
            <remarks>
            The Game Kit framework error domain.
            <p></p><b>Discussion</b><p><c>GKSession</c> and <c>GKVoiceChatService</c> define their own error domains.</p><p></p>This is a constant for "GKErrorDomain".
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKErrorCode">
            <summary>
            Error codes for the Game Kit error domain.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.ParentalControlsBlocked">
            <summary>
                <p>The feature has been blocked by the user.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorParentalControlsBlocked</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.TurnBasedMatchDataTooLarge">
            <summary>
                <p>Your game submitted data that exceeded the maximum size that Game Center permits for a turn-based game.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorTurnBasedMatchDataTooLarge</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.UnexpectedConnection">
            <summary>
                <p>An unexpected player has connected to a match.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorUnexpectedConnection</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.AuthenticationInProgress">
            <summary>
                <p>The local player is currently authenticating.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorAuthenticationInProgress</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.MatchRequestInvalid">
            <summary>
                <p>The match request’s properties are impossible to fulfill. For example, the minimum number of players cannot be larger than the maximum number of players.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorMatchRequestInvalid</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.GameUnrecognized">
            <summary>
                <p>Game Center does not recognize the application that made the request. Make sure the bundle identifier is set properly for the application.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorGameUnrecognized</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.NotAuthenticated">
            <summary>
                <p>The local player has not been authenticated.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorNotAuthenticated</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.ChallengeInvalid">
            <summary>
                <p>The challenge was invalid.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorChallengeInvalid</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.PlayerStatusExceedsMaximumLength">
            <summary>
                <p>The player’s status message is too long.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorPlayerStatusExceedsMaximumLength</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.ScoreNotSet">
            <summary>
                <p>A score value was not set before attempting to post the score.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorScoreNotSet</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.TurnBasedTooManySessions">
            <summary>
                <p>The requested operation could not be completed because it would exceed the maximum number of sessions.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorTurnBasedTooManySessions</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.InvalidCredentials">
            <summary>
                <p>The operation failed because the player’s user name or password or both are incorrect.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorInvalidCredentials</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.InvalidPlayer">
            <summary>
                <p>A player object or identifier is invalid.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorInvalidPlayer</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.TurnBasedInvalidParticipant">
            <summary>
                <p>One of the participant objects you provided was invalid.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorTurnBasedInvalidParticipant</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.NotSupported">
            <summary>
                <p>The device does not support Game Center.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorNotSupported</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.PlayerStatusInvalid">
            <summary>
                <p>The player’s status message is invalid.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorPlayerStatusInvalid</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.Unknown">
            <summary>
                <p>An unexpected error occurred.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.TurnBasedInvalidState">
            <summary>
                <p>The requested operation could not be completed because the session is in an invalid state.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorTurnBasedInvalidState</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.CommunicationsFailure">
            <summary>
                <p>An error occurred when communicating with Game Center.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorCommunicationsFailure</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.TurnBasedInvalidTurn">
            <summary>
                <p>The requested operation could not be completed because the specified participant does not have the required turn state."</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorTurnBasedInvalidTurn</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.Underage">
            <summary>
                <p>The feature is disabled because the local player is underage.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorUnderage</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.InvalidParameter">
            <summary>
                <p>One or more of the parameters was incorrect.</p>
                <p>For example, this error code may be returned if your application attempts to post a score and provides a category string that does not match a category you configured for your leaderboards on iTunes Connect.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorInvalidParameter</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.Cancelled">
            <summary>
                <p>The requested operation has been cancelled or disabled by the user.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorCancelled</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.InvitationsDisabled">
            <summary>
                <p>The requested operation could not be completed the receiving player has disabled invitations.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorInvitationsDisabled</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKErrorCode.UserDenied">
            <summary>
                <p>The operation was denied by the user.</p>
                <p>
                    <c>GKErrorUserDenied</c> is only called when Game Center is restricted in Parental Controls or has been turned off entirely in the configuration profile. All other user cancelled actions use <c>GKErrorCancelled</c>.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKErrorUserDenied</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController">
            <summary>
            Your game uses the <c>GKFriendRequestComposeViewController</c> class to present a screen that allows the local player to send friend requests to other players.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To show a friend request, initialize a new <c>GKFriendRequestComposeViewController</c> object and set the delegate. Optionally, you can customize the request by adding a text message or a list of recipients. Then, present the new view controller and wait for the delegate to be called. Once the delegate is called, dismiss the view controller.</p>
                <p>On iOS, you present and dismiss the view controller from another view controller in your game, using the methods provided by the <c>UIViewController</c> class. On OS X, you use the <c><!--a target="_self" -->GKDialogController<!--/a--></c> class to present and dismiss the view controller.</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	The <c>GKFriendRequestComposeViewController</c> class is not intended to be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.DidFinish">
            <summary>
            Called when the player dismisses the request. (required)
            <br></br>Equivalent to implementing the native <c>friendRequestComposeViewControllerDidFinish:</c> method of <c>GKFriendRequestComposeViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.UP_GKFriendRequestComposeViewController_maxNumberOfRecipients">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.UP_GKFriendRequestComposeViewController_get_composeViewDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.UP_GKFriendRequestComposeViewController_set_composeViewDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.UP_GKFriendRequestComposeViewController_addRecipientsWithEmailAddresses_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.UP_GKFriendRequestComposeViewController_addRecipientsWithPlayerIDs_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.UP_GKFriendRequestComposeViewController_setMessage_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController" /> class.
            <br></br>Equivalent to the native <c>[[GKFriendRequestComposeViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.ClassExists">
            <summary>
            Returns whether the native GKFriendRequestComposeViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.MaxNumberOfRecipients">
            <summary>
            Returns the maximum number of recipients permitted in a single request.
            <br></br>Equivalent to the native <c>maxNumberOfRecipients</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The maximum number of recipients.</p>
                <b>Discussion</b>
                <p>If you add more recipients than the value returned from this method, Game Kit throws an exception.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.composeViewDelegate">
            <summary>
            The view controller’s delegate
            <br></br>Equivalent to the native <c>composeViewDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Before displaying the friend request, your game must set a delegate.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.AddRecipientsWithEmailAddresses(System.Object[])">
            <summary>
            Adds recipients based on their email addresses..
            <br></br>Equivalent to the native <c>addRecipientsWithEmailAddresses:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>emailAddresses</em>
                <p>An array with one or more <c>String</c> objects, each containing an email address.</p>
                <b>Discussion</b>
                <p>If you do not add at least once recipient, the recipients field is selected when the view controller is presented so that the player can type a list of recipients.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addRecipientsWithPlayerIDs:</c>
                    </li>
                </ul>
            </remarks>
            <param name="emailAddresses">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.AddRecipientsWithPlayerIDs(System.Object[])">
            <summary>
            Adds recipients based on their Game Center player identifiers.
            <br></br>Equivalent to the native <c>addRecipientsWithPlayerIDs:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerIDs</em>
                <p>An array with one or more <c>String</c> objects, each containing an player identifier.</p>
                <b>Discussion</b>
                <p>If you do not add at least once recipient, the recipients field is selected when the view controller is presented so that the player can type a list of recipients.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addRecipientsWithEmailAddresses:</c>
                    </li>
                </ul>
            </remarks>
            <param name="playerIDs">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController.SetMessage(System.String)">
            <summary>
            Sets the text message included in the friend invitation.
            <br></br>Equivalent to the native <c>setMessage:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>message</em>
                <p>The text message.</p>
                <b>Discussion</b>
                <p>If you do not set a text message, Game Kit sets a default text message.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
            <param name="message">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewControllerDelegate">
            <summary>
            The <c>GKFriendRequestComposeViewControllerDelegate</c> protocol is implemented by delegates of the <c>GKFriendRequestComposeViewController</c> class. The delegate is called when the player dismisses the friend request.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewControllerDelegate.UP_GKFriendRequestComposeViewControllerDelegate_set__friendRequestComposeViewControllerDidFinish__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewControllerDelegate.DidFinish(U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewController)">
            <summary>
            (<b>required</b>) Called when the player dismisses the request. (required)
            <br></br>Equivalent to the native <c>friendRequestComposeViewControllerDidFinish:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The friend request view controller that was dismissed by the player.</p>
                <b>Discussion</b>
                <p>Your delegate should dismiss the view controller. If your game paused any gameplay or other activities, it can restart those services in this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKFriendRequestComposeViewControllerDelegate._friendRequestComposeViewControllerDidFinish__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_friendRequestComposeViewControllerDidFinish__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKGameCenterControllerDelegate">
            <summary>
            The GKGameCenterControllerDelegate protocol is implemented by delegates of the <c>GKGameCenterViewController</c> class. The delegate is called when the player dismisses the Game Center user interface.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterControllerDelegate.UP_GKGameCenterControllerDelegate_set__gameCenterViewControllerDidFinish__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterControllerDelegate.DidFinish(U3DXT.iOS.Native.GameKit.GKGameCenterViewController)">
            <summary>
            (<b>required</b>) Called when the player is done interacting with the view controller’s content. (required)
            <br></br>Equivalent to the native <c>gameCenterViewControllerDidFinish:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>gameCenterViewController</em>
                <p>The view controller the player finished interacting with.</p>
                <b>Discussion</b>
                <p>Your delegate should dismiss the Game Center view controller. If your game paused any gameplay or other activities, it can restart those services in this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="gameCenterViewController">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKGameCenterControllerDelegate._gameCenterViewControllerDidFinish__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_gameCenterViewControllerDidFinish__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKGameCenterViewController">
            <summary>
            The  GKGameCenterViewController  class aggregates many common Game Center features into a single user interface. It replaces <c>GKAchievementViewController</c> and <c>GKLeaderboardViewController</c> as the preferred way to show Game Center content in your game.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your application must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your application receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To display the Game Center screen, initialize a new  GKGameCenterViewController  object and set its delegate. Optionally, you can choose to configure the view controller further to specify which content is initially displayed. Then present the view controller. Your delegate is called when the user dismisses the screen.</p>
                <p>Your game should pause other activities before presenting the Game Center user interface.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.DidFinish">
            <summary>
            Called when the player is done interacting with the view controller’s content. (required)
            <br></br>Equivalent to implementing the native <c>gameCenterViewControllerDidFinish:</c> method of <c>GKGameCenterControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.UP_GKGameCenterViewController_get_gameCenterDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.UP_GKGameCenterViewController_set_gameCenterDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.UP_GKGameCenterViewController_get_leaderboardCategory(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.UP_GKGameCenterViewController_set_leaderboardCategory(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.UP_GKGameCenterViewController_get_leaderboardTimeScope(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.UP_GKGameCenterViewController_set_leaderboardTimeScope(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.UP_GKGameCenterViewController_get_viewState(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.UP_GKGameCenterViewController_set_viewState(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKGameCenterViewController" /> class.
            <br></br>Equivalent to the native <c>[[GKGameCenterViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.ClassExists">
            <summary>
            Returns whether the native GKGameCenterViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.gameCenterDelegate">
            <summary>
            The view controller’s delegate.
            <br></br>Equivalent to the native <c>gameCenterDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Before displaying the view controller, your game must set a delegate.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.leaderboardCategory">
            <summary>
            The named leaderboard that is displayed by the view controller. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>leaderboardCategory</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The category property must either be <c>null</c> or it must match a category identifier you defined when you created your leaderboards on iTunes Connect. If <c>null</c>, the view displays scores for the aggregate leaderboard. Default is <c>null</c>.</p>
                <p>When the leaderboard is presented, the value of this property determines which leaderboard content is displayed to the player. As the player changes which leaderboard content they view, the <c>leaderboardCategory</c> property is automatically updated. For example, to preserve the player’s selections, you can read the <c>leaderboardCategory</c> property after the screen is dismissed, and set that value the next time you initialize the view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.leaderboardTimeScope">
            <summary>
            A time filter used to restrict which scores are displayed to the player. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>leaderboardTimeScope</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property determines which tab view of the scores screen is displayed to the player. The default value is <c>GKLeaderboardTimeScopeAllTime</c>, which shows the best score each player has earned. For more information on time scopes, see <em>GKLeaderboard Class Reference</em>.</p>
                <p>When the leaderboard is presented, the value of this property determines the initial tab that is displayed to the player. As the player changes which tab they view, the <c>leaderboardTimeScope</c> property is automatically updated. For example, to preserve the player’s selections, you can read the <c>leaderboardTimeScope</c> property after the screen is dismissed, and set that value the next time you initialize the view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKGameCenterViewController.viewState">
            <summary>
            The content displayed by the Game Center controller.
            <br></br>Equivalent to the native <c>viewState</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>See  “Game Center Controller View State”  for possible values. When you first present the Game Center view controller, the content displayed by the view controller is determined by this property. If the player navigates to different content, the view state is automatically updated. For example, to preserve the player’s selections, you can read the <c>viewState</c> property after the screen is dismissed, and set that value the next time you initialize the view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKGameCenterViewControllerState">
            <summary>
            Possible values for the <c>viewState</c> property.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKGameCenterViewControllerState.Default">
            <summary>
                <p>Indicates that the view controller should present the default screen.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKGameCenterViewControllerStateDefault</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKGameCenterViewControllerState.Challenges">
            <summary>
                <p>Indicates that the view controller presents challenges content.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKGameCenterViewControllerStateChallenges</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKGameCenterViewControllerState.Leaderboards">
            <summary>
                <p>Indicates that the view controller presents leaderboard content. The <c>leaderboardCategory</c> and <c>leaderboardTimeScope</c> properties affect the appearance of this view state.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKGameCenterViewControllerStateLeaderboards</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKGameCenterViewControllerState.Achievements">
            <summary>
                <p>Indicates that the view controller presents achievements content.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKGameCenterViewControllerStateAchievements</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKInvite">
            <summary>
            A <c>GKInvite</c> object represents a matchmaking invitation sent by another player to the local player. Your game never directly creates <c>GKInvite</c> objects. Instead, these objects are created by Game Kit and delivered to your game’s matchmaking event handler. See <em>GKMatchmaker Class Reference</em>.
            </summary>
            <remarks>
                <p>The properties of the invitation object describe the match the local player is being invited to join.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInvite.UP_GKInvite_get_hosted(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInvite.UP_GKInvite_get_inviter(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInvite.UP_GKInvite_get_playerAttributes(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInvite.UP_GKInvite_get_playerGroup(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInvite.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInvite.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInvite.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKInvite" /> class.
            <br></br>Equivalent to the native <c>[[GKInvite alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInvite.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKInvite.ClassExists">
            <summary>
            Returns whether the native GKInvite class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKInvite.hosted">
            <summary>
            A Boolean value that states whether the game is hosted on your servers. (read-only)
            <br></br>Equivalent to the native <c>hosted</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of the <c>hosted</c> property is <c>true</c>, this is a match hosted on your own server. If the value is <c>false</c>, this is a peer-to-peer match using Game Center. The default is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKInvite.inviter">
            <summary>
            The identifier for the player who sent the invitation. (read-only)
            <br></br>Equivalent to the native <c>inviter</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKInvite.playerAttributes">
            <summary>
            The player attributes for the match. (read-only)
            <br></br>Equivalent to the native <c>playerAttributes</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property matches the <c>playerAttributes</c> property of the original match request used to create the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKInvite.playerGroup">
            <summary>
            The player group for the match. (read-only)
            <br></br>Equivalent to the native <c>playerGroup</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property matches the <c>playerGroup</c> property of the original match request used to create the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKInviteEventListener">
            <summary>
            Handles invite invite events form Game Center. You can invite other players and start your game from directly from Game Center. Accepting an invitation begins the game from Game Center with the accepting player assigned a spot in the game.
            </summary>
            <remarks>
                <p>Do not implement <c>GKInviteEventHandler</c> directly, instead use <c>GKLocalPlayerListener</c>. The <c>GKLocalPlayerListener</c> protocol inherits methods from  <c>GKInviteEventHandler</c>, <c>GKChallengeListener</c>, and <c>GKTurnBasedEventListener</c> in order to handle multiple events.</p>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInviteEventListener.UP_GKInviteEventListener_set__player_didAcceptInvite__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInviteEventListener.UP_GKInviteEventListener_set__player_didRequestMatchWithPlayers__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInviteEventListener.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInviteEventListener.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInviteEventListener._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInviteEventListener.DidAccept(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKInvite)">
            <summary>
            (optional) Called when another player accepts a match invite from the local player. (required)
            <br></br>Equivalent to the native <c>player:didAcceptInvite:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The player identifier associated with the invitation.</p>
                <em>invite</em>
                <p>The invitation accepted by the player.</p>
            </remarks>
            <param name="player">
            </param>
            <param name="invite">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKInviteEventListener.DidRequestMatchWithPlayers(U3DXT.iOS.Native.GameKit.GKPlayer,System.Object[])">
            <summary>
            (optional) Called when the local player starts a match with another player from Game Center. (required)
            <br></br>Equivalent to the native <c>player:didRequestMatchWithPlayers:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The player identifier associated with the invitation.</p>
                <em>playerIDsToInvite</em>
                <p>An array of <c>String</c> objects containing the player identifiers invited to the match.</p>
                <b>Discussion</b>
                <p>When this method is called, the game is launched from Game Center and starts the matchmaking process.</p>
                <br />
            	Provide Feedback
            </remarks>
            <param name="player">
            </param>
            <param name="playerIDsToInvite">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKInviteEventListener._player_didAcceptInvite__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didAcceptInvite__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKInviteEventListener._player_didRequestMatchWithPlayers__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didRequestMatchWithPlayers__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKInviteeResponse">
            <summary>
            Possible responses from an invitation to a remote player.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKInviteeResponse.Accepted">
            <summary>
                <p>The player accepted the invitation.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKInviteeResponseAccepted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKInviteeResponse.Incompatible">
            <summary>
                <p>The invitee is not running a compatible version of your game.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKInviteeResponseIncompatible</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKInviteeResponse.Declined">
            <summary>
                <p>The player rejected the invitation.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKInviteeResponseDeclined</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKInviteeResponse.NoAnswer">
            <summary>
                <p>The invitation timed out without an answer.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKInviteeResponseNoAnswer</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKInviteeResponse.UnableToConnect">
            <summary>
                <p>The invitee could not be contacted.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKInviteeResponseUnableToConnect</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKInviteeResponse.Failed">
            <summary>
                <p>The invitation was unable to be delivered.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKInviteeResponseFailed</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLeaderboard">
            <summary>
            A <c>GKLeaderboard</c> object is used to read data from a leaderboard stored on Game Center. Your game uses <c>GKLeaderboard</c> objects when it wants to retrieve localized information about a specific leaderboard or to retrieve scores from a leaderboard. Typically, you do this when you want the data needed to implement your own custom leaderboard user interface.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>During the development process, you create the leaderboards for your game on iTunes Connect.</p>
                <p>To retrieve information about the available leaderboards, use the <c>loadLeaderboardsWithCompletionHandler:</c> class method.</p>
                <p>To request score data from Game Center, your game allocates and initializes a <c>GKLeaderboard</c> object, configures its search properties, and then calls the object’s <c>loadScoresWithCompletionHandler:</c> method. Game Kit retrieves the score data from Game Center and calls your completion handler.</p>
                <p>The search properties are used to filter the score data returned to your game:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The <c>category</c> property allows you to choose which leaderboard on iTunes Connect is searched.</p>
                    </li>
                    <li class="li">
                        <p>The <c>playerScope</c> property allows you to restrict the search to a local player’s friends. Optionally, you can also explicitly initialize a leaderboard object to search for scores for a specific group of players.</p>
                    </li>
                    <li class="li">
                        <p>The <c>timeScope</c> property allows you to filter based on when the score was earned.</p>
                    </li>
                    <li class="li">
                        <p>The <c>range</c> property allows you to pick scores within a specific range. For example, the range [<c>1,10</c>] returns the best ten scores.</p>
                    </li>
                </ul>
                <p>The algorithm used by the <c>GKLeaderboard</c> object is as follows:</p>
                <ol class="ol">
                    <li class="li">
                        <p>Start with the set of all possible scores.</p>
                    </li>
                    <li class="li">
                        <p>Discard any scores that do not match the <c>playerScope</c>, <c>timeScope</c> and <c>category</c> properties.</p>
                    </li>
                    <li class="li">
                        <p>For each player, keep the best score that player has earned and discard the rest.</p>
                    </li>
                    <li class="li">
                        <p>Sort the scores from best to worst.</p>
                    </li>
                    <li class="li">
                        <p>Use the range property to determine which scores are returned.</p>
                    </li>
                </ol>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_loadCategoriesWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_loadLeaderboardsWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_setDefaultLeaderboard_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_category(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_set_category(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_groupIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_identifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_set_identifier(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_loading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_localPlayerScore(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_maxRange(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_playerScope(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_set_playerScope(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_range(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_set_range(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_scores(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_timeScope(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_set_timeScope(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_alloc_initWithPlayerIDs_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_loadImageWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.UP_GKLeaderboard_loadScoresWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKLeaderboard" /> class.
            <br></br>Equivalent to the native <c>[[GKLeaderboard alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.ClassExists">
            <summary>
            Returns whether the native GKLeaderboard class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.LoadCategories(System.Action{System.Object[],System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the list of leaderboard categories along with their corresponding localized titles. ( Deprecated in iOS 6.0.  Use the <c>loadLeaderboardsWithCompletionHandler:</c> method instead.)
            <br></br>Equivalent to the native <c>loadCategoriesWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block that is called when the categories have been retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>categories</em>
                <p>An array of <c>String</c> objects that provides the categories to your game. If an error occurred, this value may be non-<c>null</c>. In this case, the array holds whatever data Game Kit was able to download before the error occurred.</p>
                <em>titles</em>
                <p>An array of <c>String</c> objects that provides localized titles for each category. If an error occurred, this value may be non-<c>null</c>. In this case, the array holds whatever data Game Kit was able to download before the error occurred.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>You use this class method to retrieve the category identifiers and titles you configured for your leaderboards on iTunes Connect. To create a leaderboard query that targets a particular category, set the <c>category</c> property to one of the strings returned by this method.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.LoadLeaderboards(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the list of leaderboards from Game Center
            <br></br>Equivalent to the native <c>loadLeaderboardsWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block that is called when the categories have been retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>leaderboards</em>
                <p>An array of <c>GKLeaderboard</c> objects that provides the leaderboards for your game. If an error occurred, this value may be non-<c>null</c>. In this case, the array holds whatever data Game Kit was able to download before the error occurred.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>Use this class method to retrieve the list of leaderboards you configured on iTunes Connect. Use the properties of each leaderboard object, especially the <c>category</c> and <c>title</c> properties, to learn more about the leaderboard.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.SetDefaultLeaderboard(System.String,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Sets the default leaderboard for the local player. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>setDefaultLeaderboard:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>leaderboardIdentifier</em>
                <p>The named leaderboard that should be the new default leaderboard for the local player.</p>
                <em>completionHandler</em>
                <p>A block to be called after the scores are retrieved from the server.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>The default leaderboard is used whenever your game uses a <c>GKScore</c> object to report a score to Game Center without explicitly setting the score object’s <c>category</c> property. The default leaderboard is normally set in iTunes Connect. However, your game can use this class method to override the default leaderboard that appears for the local player. This information is stored for each player on Game Center.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <p>If an error occurs and was a network error, your game should periodically resend the request until it completes.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="leaderboardIdentifier">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.category">
            <summary>
            The named leaderboard to retrieve information from. ( Deprecated in iOS 7.0.  Use <c>identifier</c> property instead.)
            <br></br>Equivalent to the native <c>category</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If non-<c>null</c>, Game Center only returns scores from the matching leaderboard. If <c>null</c>, all scores previously reported by the game are searched. Default is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.groupIdentifier">
            <summary>
            The identifier for the group the leaderboard is part of. (read-only)
            <br></br>Equivalent to the native <c>groupIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If your game was configured to be part of a group in iTunes Connect, this property holds the identifier you assigned to the group.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.identifier">
            <summary>
            The named leaderboard to retrieve information from.
            <br></br>Equivalent to the native <c>identifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If non-<c>null</c>, Game Center only returns scores from the matching leaderboard. If <c>null</c>, all scores previously reported by the game are searched. Default is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.loading">
            <summary>
            A Boolean value that indicates whether the leaderboard object is retrieving scores. (read-only)
            <br></br>Equivalent to the native <c>loading</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of the <c>loading</c> property is <c>true</c> if the leaderboard object has any pending requests for scores.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.localPlayerScore">
            <summary>
            The score earned by the local player. (read-only)
            <br></br>Equivalent to the native <c>localPlayerScore</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is invalid until a call to <c>loadScoresWithCompletionHandler:</c> is completed. Afterward, it contains a score object representing the local player’s score on the leaderboard given the filters you applied to the query.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.maxRange">
            <summary>
            The size of the leaderboard. (read-only)
            <br></br>Equivalent to the native <c>maxRange</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is invalid until a call to <c>loadScoresWithCompletionHandler:</c> is completed. Afterward, it contains the total number of entries available to return to your game given the filters you applied to the query.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.playerScope">
            <summary>
            A filter used to restrict the search to a subset of the players on Game Center.
            <br></br>Equivalent to the native <c>playerScope</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>playerScope</c> property is ignored if the leaderboard request was initialized using the <c>initWithPlayerIDs:</c> method. Otherwise, the <c>playerScope</c> property determines which players are included in the request for high scores. The default is <c>GKLeaderboardPlayerScopeGlobal</c>. See <c>Leaderboard Player Scope</c> for more information.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.range">
            <summary>
            The numerical score rankings to return from the search.
            <br></br>Equivalent to the native <c>range</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>range</c> property is ignored if the leaderboard request was initialized using the <c>initWithPlayerIDs:</c> method. Otherwise, the <c>range</c> property is used to filter which scores are returned to your game. For example, if you specified a range of <c>[1,10]</c>, after the search is complete, your game receives the best ten scores. The default range is <c>[1,25]</c>.</p>
                <p>The minimum index is <c>1</c>. The maximum length is <c>100</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.scores">
            <summary>
            An array of <c>GKScore</c> objects that contains the scores returned by the search. (read-only)
            <br></br>Equivalent to the native <c>scores</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is invalid until a call to <c>loadScoresWithCompletionHandler:</c> is complete. Afterward, it contains the same score objects that were returned to the completion handler.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.timeScope">
            <summary>
            A filter used to restrict the search to scores that were posted within a specific period of time.
            <br></br>Equivalent to the native <c>timeScope</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property determines how far back in time to look for scores. The default value is <c>GKLeaderboardTimeScopeAllTime</c>. See <c>Leaderboard Time Scope</c> for more information.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboard.title">
            <summary>
            The localized title for the leaderboard. (read-only)
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you initialized a new leaderboard object, this property is invalid until a call to <c>loadScoresWithCompletionHandler:</c> is complete. Afterward, it contains the localized title for the leaderboard identified by the <c>category</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.#ctor(System.Object[])">
            <summary>
            Creates an instance of the native GKLeaderboard and initializes the object. Initializes a leaderboard request to retrieve the scores of a specific group of players.
            <br></br>Equivalent to the native <c>[[GKLeaderboard alloc] initWithPlayerIDs:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerIDs</em>
                <p>An array of <c>String</c> objects that holds the player identifier strings of the players to retrieve.</p>
                <b>Return Value</b>
                <p>An initialized leaderboard request.</p>
                <b>Discussion</b>
                <p>A leaderboard object initialized with this method ignores the <c>playerScope</c> and <c>range</c> properties. Instead, it retrieves scores for the specific list of players whose identifiers are included in the <em>playerIDs</em> parameter.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="playerIDs">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.LoadImage(System.Action{U3DXT.iOS.Native.UIKit.UIImage,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            The the image associated with the default leaderboard.
            <br></br>Equivalent to the native <c>loadImageWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the scores are retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>image</em>
                <p>Contains the image associated with the leaderboard.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboard.LoadScores(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Retrieves a set of scores from Game Center.
            <br></br>Equivalent to the native <c>loadScoresWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the scores are retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>scores</em>
                <p>An array of <c>GKScore</c> objects that holds the requested scores. If an error occurred, this value may be non-<c>null</c>. In this case, the array holds whatever score data could be retrieved from Game Center before the error occurred.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <p>You can call this method multiple times; each call represents a different query against the scores stored on Game Center. If you post multiple load operations using the same leaderboard object, any properties that are updated by loading scores reflect the last query that completed. The order that achievement queries are processed is arbitrary.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLeaderboardPlayerScope">
            <summary>
            The scope of players to be searched for scores.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKLeaderboardPlayerScope.Global">
            <summary>
                <p>All players on Game Center should be considered when generating the list of scores.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKLeaderboardPlayerScopeGlobal</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKLeaderboardPlayerScope.FriendsOnly">
            <summary>
                <p>Only friends of the local player should be considered when generating the list of scores.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKLeaderboardPlayerScopeFriendsOnly</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLeaderboardSet">
            <summary>
            Add leaderboard sets to your app and organize your leaderboards into logical and coherent groups. Once you incorporate leaderboard sets into your app, you must put all of your leaderboards into a set. Individual leaderboards can be put into multiple leaderboard sets and given different display names in each set.
            </summary>
            <remarks>
                <p>A <c>GKLeaderboardSet</c> object is used to read data from a leaderboard set stored on Game Center. Your game uses <c>GKLeaderboardSet</c> objects when it wants to retrieve localized information about a specific leaderboard set or to retrieve scores from a leaderboard set. Typically, you do this when you want the data needed to implement your own custom leaderboard set user interface.</p>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>During the development process, you create the leaderboard sets for your game on iTunes Connect.</p>
                <p>To retrieve information about the available leaderboards for the current set, use the <c>loadLeaderboardsWithCompletionHandler:</c> class method.</p>
                <p>To retrieve information about the available leaderboard sets, use the <c>loadLeaderboardSetsWithCompletionHandler:</c> class method.</p>
                <p>To retrieve information about the image associated with a leaderboard set, use the <c>loadImageWithCompletionHandler:</c> class method.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.UP_GKLeaderboardSet_loadLeaderboardSetsWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.UP_GKLeaderboardSet_get_groupIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.UP_GKLeaderboardSet_get_identifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.UP_GKLeaderboardSet_set_identifier(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.UP_GKLeaderboardSet_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.UP_GKLeaderboardSet_loadImageWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.UP_GKLeaderboardSet_loadLeaderboardsWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKLeaderboardSet" /> class.
            <br></br>Equivalent to the native <c>[[GKLeaderboardSet alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.ClassExists">
            <summary>
            Returns whether the native GKLeaderboardSet class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.LoadLeaderboardSets(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Load all of the leaderboard sets for the current game.
            <br></br>Equivalent to the native <c>loadLeaderboardSetsWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block that is called when the categories have been retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>leaderboardSets</em>
                <p>An array of <c>GKLeaderboardSet</c> objects that provides the leaderboard sets for your game. If an error occurred, this value may be non-<c>null</c>. In this case, the array holds whatever data Game Kit was able to download before the error occurred.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, the value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.groupIdentifier">
            <summary>
            Identifies the group that the leaderboard set belongs to. (read-only)
            <br></br>Equivalent to the native <c>groupIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This is set when the leaderboard set is part of a game group. It gets set when <c>loadLeaderboardSetsWithCompletionHandler:</c> is called on leaderboards that support game groups.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.identifier">
            <summary>
            The identifier for the leaderboard set.
            <br></br>Equivalent to the native <c>identifier</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.title">
            <summary>
            Localized title for the leaderboard set. (read-only)
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.LoadImage(System.Action{U3DXT.iOS.Native.UIKit.UIImage,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Load the image associated with the leaderboard set.
            <br></br>Equivalent to the native <c>loadImageWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block that is called when the categories have been retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>image</em>
                <p>The image associated with the leaderboard set. If an error occurred, this value will be non-<c>null</c>. In this case, the array holds whatever data Game Kit was able to download before the error occurred.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, the value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardSet.LoadLeaderboards(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Load all of the leaderboards for the current leaderboard set.
            <br></br>Equivalent to the native <c>loadLeaderboardsWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block that is called when the categories have been retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>leaderboards</em>
                <p>An array of <c>GKLeaderboard</c> objects that provides the leaderboards for your game. If an error occurred, this value may be non-<c>null</c>. In this case, the array holds whatever data Game Kit was able to download before the error occurred.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, the value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLeaderboardTimeScope">
            <summary>
            The period of time to which a player’s best score is restricted.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKLeaderboardTimeScope.AllTime">
            <summary>
                <p>Each player’s best score is returned.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKLeaderboardTimeScopeAllTime</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKLeaderboardTimeScope.Today">
            <summary>
                <p>Each player is restricted to scores recorded in the past 24 hours.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKLeaderboardTimeScopeToday</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKLeaderboardTimeScope.Week">
            <summary>
                <p>Each player is restricted to scores recorded in the past week.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKLeaderboardTimeScopeWeek</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController">
            <summary>
            The <c>GKLeaderboardViewController</c> class provides a standard user interface that displays leaderboard scores to the player. If the <c>GKGameCenterViewController</c> class is available, you should use it instead.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To show a leaderboard screen, initialize a new <c>GKLeaderboardViewController</c> object and set the delegate. Optionally, you can configure the view controller to display specific data to the player. Then, present the new view controller and wait for the delegate to be called. Once the delegate is called, dismiss the view controller.</p>
                <p>On iOS, you present and dismiss the view controller from another view controller in your game, using the methods provided by the <c>UIViewController</c> class. On OS X, you use the <c><!--a target="_self" -->GKDialogController<!--/a--></c> class to present and dismiss the view controller.</p>
                <p>Your game should pause other activities before presenting the leaderboard.</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	The <c>GKLeaderboardViewController</c> class is not intended to be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.DidFinish">
            <summary>
            Called when the leaderboard view is dismissed. (required)
            <br></br>Equivalent to implementing the native <c>leaderboardViewControllerDidFinish:</c> method of <c>GKLeaderboardViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.UP_GKLeaderboardViewController_get_category(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.UP_GKLeaderboardViewController_set_category(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.UP_GKLeaderboardViewController_get_leaderboardDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.UP_GKLeaderboardViewController_set_leaderboardDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.UP_GKLeaderboardViewController_get_timeScope(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.UP_GKLeaderboardViewController_set_timeScope(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController" /> class.
            <br></br>Equivalent to the native <c>[[GKLeaderboardViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.ClassExists">
            <summary>
            Returns whether the native GKLeaderboardViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.category">
            <summary>
            The named leaderboard that is displayed by the view controller.
            <br></br>Equivalent to the native <c>category</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>category</c> property must either be <c>null</c> or it must match a leaderboard identifier for a leaderboard you defined in iTunes Connect. If <c>null</c>, the view displays scores for the default leaderboard. Default is <c>null</c>.</p>
                <p>When the view controller is presented, the initial leaderboard shown is based on the value of this property. If the player changes which leaderboard they are viewing, the <c>category</c> property is automatically updated. For example, you can read the <c>category</c> property after the screen is dismissed, and set that value the next time you initialize a new leaderboard view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.leaderboardDelegate">
            <summary>
            The view controller’s delegate.
            <br></br>Equivalent to the native <c>leaderboardDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Before displaying the leaderboard, you must set a delegate.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardViewController.timeScope">
            <summary>
            A time filter used to restrict which scores are displayed to the player.
            <br></br>Equivalent to the native <c>timeScope</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property determines which tab view is displayed to the player. The default value is <c>GKLeaderboardTimeScopeAllTime</c>, which shows the best score each player has earned. For more information on time scopes, see <em>GKLeaderboard Class Reference</em>.</p>
                <p>If the player changes which tab they view, the <c>timeScope</c> property is automatically updated. For example, you can read the <c>timeScope</c> property after the view controller is dismissed, and set that value the next time you initialize a new leaderboard view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLeaderboardViewControllerDelegate">
            <summary>
            The <c>GKLeaderboardViewControllerDelegate</c> protocol is implemented by delegates of the <c>GKLeaderboardViewController</c> class. The delegate is called when the player dismisses the leaderboard.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewControllerDelegate.UP_GKLeaderboardViewControllerDelegate_set__leaderboardViewControllerDidFinish__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLeaderboardViewControllerDelegate.DidFinish(U3DXT.iOS.Native.GameKit.GKLeaderboardViewController)">
            <summary>
            (<b>required</b>) Called when the leaderboard view is dismissed. (required)
            <br></br>Equivalent to the native <c>leaderboardViewControllerDidFinish:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The leaderboard view controller that was dismissed by the player.</p>
                <b>Discussion</b>
                <p>Your delegate should dismiss the view controller. If your game paused any gameplay or other activities, it can restart those services in this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLeaderboardViewControllerDelegate._leaderboardViewControllerDidFinish__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_leaderboardViewControllerDidFinish__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLocalPlayer">
            <summary>
            The <c>GKLocalPlayer</c> class is a special subclass of <c>GKPlayer</c> that represents the authenticated player running your game on the device. At any given time, only one player may be authenticated on the device; this player must log out before another player can log in.
            </summary>
            <remarks>
                <p>Your game must authenticate the local player before using any Game Center features. Authenticating the player ensures that the player has created an account and is connected to Game Center. To authenticate the local player, retrieve the shared instance of the local player by calling the <c>localPlayer</c> class method and set its <c>authenticateHandler</c> property.</p>
                <p>You can see whether the local player is authenticated by reading the <c>authenticated</c> property. If <c>authenticated</c> is <c>true</c>, then the local player’s other properties are valid, and you can call other Game Center methods.</p>
                <p>Call the <c>loadFriendsWithCompletionHandler:</c> method to retrieve the player identifiers for the local player’s friends.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKLocalPlayer.GKPlayerAuthenticationDidChangeNotificationName">
            <summary>
            Constant name for the native <c>GKPlayerAuthenticationDidChangeNotificationName</c> notification.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKLocalPlayer.PlayerAuthenticationDidChange">
            <summary>
                <b>GKPlayerAuthenticationDidChangeNotificationName</b> Posted after the <c>authenticated</c> property of the shared local player object changes. <b>Availability</b><ul><li>Available in iOS 4.1 and later.</li></ul><br></br>Equivalent to adding the event handler as an observer to the native <c>GKPlayerAuthenticationDidChangeNotificationName</c> notification.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKLocalPlayer.AllNotifications">
            <summary>
            Occurs when this object sends any notification.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLocalPlayer.AllInstances">
            <summary>
            Static class for notifications of all instances of the <c>GKLocalPlayer</c> class.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKLocalPlayer.AllInstances.PlayerAuthenticationDidChange">
            <summary>
                <b>GKPlayerAuthenticationDidChangeNotificationName</b> Posted after the <c>authenticated</c> property of the shared local player object changes. <b>Availability</b><ul><li>Available in iOS 4.1 and later.</li></ul><br></br>Equivalent to adding the event handler as an observer to the native <c>GKPlayerAuthenticationDidChangeNotificationName</c> notification.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_localPlayer">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_get_authenticated(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_set_authenticateHandler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_get_friends(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_get_underage(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_authenticateWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_generateIdentityVerificationSignatureWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_loadDefaultLeaderboardCategoryIDWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_loadDefaultLeaderboardIdentifierWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_loadFriendsWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_registerListener_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_setDefaultLeaderboardCategoryID_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_setDefaultLeaderboardIdentifier_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_unregisterAllListeners(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_unregisterListener_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UP_GKLocalPlayer_loadPlayersForIdentifiers_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKLocalPlayer" /> class.
            <br></br>Equivalent to the native <c>[[GKLocalPlayer alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayer.ClassExists">
            <summary>
            Returns whether the native GKLocalPlayer class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.LocalPlayer">
            <summary>
            Retrieves the shared instance of the local player.
            <br></br>Equivalent to the native <c>localPlayer</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The local player object.</p>
                <b>Discussion</b>
                <p>You never directly create a local player object. Instead, you retrieve the  singleton  object by calling this class method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.LoadPlayers(System.Object[],System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads information from Game Center about a list of players.
            <br></br>Equivalent to the native <c>loadPlayersForIdentifiers:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifiers</em>
                <p>An array of <c>String</c> objects, each a unique identifier for a Game Center player.</p>
                <em>completionHandler</em>
                <p>A block to be called when the player data is retrieved from Game Center.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>players</em>
                <p>An array of <c>GKPlayer</c> objects, one per identifier. If an error occurred, this may be non-<c>null</c>. In that case, the array holds whatever data Game Kit was able to retrieve for the requested players.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, this is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="identifiers">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayer.authenticated">
            <summary>
            A Boolean value that indicates whether a local player is currently signed in to Game Center. (read-only)
            <br></br>Equivalent to the native <c>authenticated</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayer.authenticateHandler">
            <summary>
            A handler called to process an authentication-related event.
            <br></br>Equivalent to the native <c>authenticateHandler</c> property.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>This parameter is <c>null</c> if the authentication process is complete. Otherwise, it contains a view controller that your game should display to the player.</p>
                <em>error</em>
                <p>This parameter contains an error object that describes any error that occurred.</p>
                <b>Discussion</b>
                <p>Your game should authenticate the player as early as possible after launching, ideally as soon as you can present a user interface to the player. For example, your game may be launched because the player accepted an invitation to join a match or to take a turn in a turn-based match, so you want your game to authenticate the player and process the match invitation as quickly as possible. After you set a handler, authentication begins automatically and is repeated when your game moves to the background and then back to the foreground.</p>
                <p>During the authentication process, Game Kit calls your handler one or more times to handle specific authentication events. Your handler must handle three kinds of events:</p>
                <ul class="ul">
                    <li class="li">
                        <p>If the device does not have an authenticated player, Game Kit passes a view controller to your authenticate handler. When presented, this view controller displays the authentication user interface. Your game should pause other activities that require user interaction (such as your game loop), present this view controller and then return. When the player finishes interacting with it, the view controller is dismissed automatically.</p>
                    </li>
                    <li class="li">
                        <p>If the authentication process succeeded, the <c>GKLocalPlayer</c> singleton object’s <c>authenticated</c> property is set to <c>true</c> and the object’s other properties are set to match those of the connected player. </p>
                    </li>
                    <li class="li">
                        <p>If the authentication process failed, the <c>GKLocalPlayer</c> singleton object’s <c>authenticated</c> property is set to <c>false</c> and the object’s other properties are cleared. </p>
                    </li>
                </ul>
                <p>Each time the authentication handler is called, the data stored in the local player singleton object may have changed. A new player may have logged into the device or the player may have simply logged out from Game Center. Because of both of these possibilities, your authentication handler must be prepared to update any other objects that assume that a particular player is logged in. For more information, see  “Authenticating the Local Player in a Multitasking App”  in <em>Game Center Programming Guide</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayer.friends">
            <summary>
            An array of <c>String</c> objects containing the player identifiers for the local player’s friends. (read-only)
            <br></br>Equivalent to the native <c>friends</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is invalid until a call to <c>loadFriendsWithCompletionHandler:</c> succeeds.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayer.underage">
            <summary>
            A Boolean value that declares whether the local player is underage. (read-only)
            <br></br>Equivalent to the native <c>underage</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Some Game Center features are disabled if the local player is underage. Your game can also test this property if it wants to disable some of its own features based on the player’s age.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.Authenticate(System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Authenticates the local player on the device. ( Deprecated in iOS 6.0.  Set the <c>authenticateHandler</c> property instead.)
            <br></br>Equivalent to the native <c>authenticateWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the player has authenticated or when an error occurs.</p>
                <p>The block takes the following parameter:</p>
                <p>
                </p>	error<p>This parameter is <c>null</c> if the player successfully authenticated. Otherwise, it contains an error object that describes the error that occurred.</p><b>Discussion</b><p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p><p>Your game should authenticate the player as early as possible after launching, ideally as soon as you can present a user interface to the player. For example, your game may be launched because the player accepted an invitation to join a match or to take a turn in a turn-based match, so you want your game to authenticate the player and process the match invitation as quickly as possible.</p><p>If there is not an authenticated player on the device when your game calls this method, Game Kit displays a user interface that allows the player to sign in with their credentials (or to create a new account if he or she has never used Game Center). Your game should pause other activities that require user interaction (such as a real time game loop) before attempting to authenticate the local player.</p><p>Game Kit maintains a strong reference to your completion handler even after successfully authenticating a local player. If your game moves into the background, Game Kit automatically authenticates the player again whenever your game moves back to the foreground. Game Kit calls your same completion handler each time it authenticates the local player. Be mindful that in block programming, any Objective-C object referenced inside a block is also strongly referenced by the block until the block is released. Because Game Kit maintains a strong reference to your completion handler until your game terminates, any objects referenced from within your authentication handler are also held indefinitely.</p><p>Each time the completion handler is called, the data stored in the local player singleton object may have changed. A new player may have logged into the device or the player may have simply logged out from Game Center. Because of both of these possibilities, your authentication handler must be prepared to update any other objects that assume that a particular player is logged in. For more information, see  “Authenticating the Local Player in a Multitasking App”  in <em>Game Center Programming Guide</em>.</p><b>Availability</b><ul><li>Available in iOS 4.1 and later.</li><li>Deprecated in iOS 6.0.</li></ul></remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.GenerateIdentityVerificationSignature(System.Action{U3DXT.iOS.Native.Foundation.NSURL,U3DXT.iOS.Native.Foundation.NSData,U3DXT.iOS.Native.Foundation.NSData,System.UInt64,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Generates a signature that allows a third party server to authenticate the local player.
            <br></br>Equivalent to the native <c>generateIdentityVerificationSignatureWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the request completes.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>	publicKeyUrl<p>The URL for the public encryption key.</p>signature<p>The verification signature data generated.</p>salt<p>A random <c>String</c> used to compute the hash and keep it randomized.</p>timestamp<p>The date and time that the signature was created.</p>error<p>If an error occurred, this parameter holds an error object that explains the error. Otherwise, the value of this parameter is <c>null</c>.</p><b>Availability</b><ul><li>Available in iOS 7.0 and later.</li></ul></remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.LoadDefaultLeaderboardCategoryID(System.Action{System.String,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the category identifier for the local player’s default leaderboard. ( Deprecated in iOS 7.0.  Use the <c>loadDefaultLeaderboardIdentifierWithCompletionHandler:</c> method instead.)
            <br></br>Equivalent to the native <c>loadDefaultLeaderboardCategoryIDWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the request completes.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>	categoryID<p>The category ID string for the local player’s default leaderboard.</p>error<p>If an error occurred, this parameter holds an error object that explains the error. Otherwise, the value of this parameter is <c>null</c>.</p><b>Discussion</b><p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p><b>Availability</b><ul><li>Available in iOS 6.0 and later.</li><li>Deprecated in iOS 7.0.</li></ul><b>See Also</b><ul><li><c>– setDefaultLeaderboardCategoryID:completionHandler:</c></li></ul></remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.LoadDefaultLeaderboardIdentifier(System.Action{System.String,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the category identifier for the local player’s default leaderboard.
            <br></br>Equivalent to the native <c>loadDefaultLeaderboardIdentifierWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the request completes.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>	categoryID<p>The category ID string for the local player’s default leaderboard.</p>error<p>If an error occurred, this parameter holds an error object that explains the error. Otherwise, the value of this parameter is <c>null</c>.</p><b>Discussion</b><p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p><b>Availability</b><ul><li>Available in iOS 7.0 and later.</li></ul></remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.LoadFriends(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Retrieves a list of player identifiers for the local player’s friends.
            <br></br>Equivalent to the native <c>loadFriendsWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the request completes.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>	friendIDs<p>An array of <c>String</c> objects containing the player identifiers for the players that are friends of the local player. If an error occurred, this value can be non-<c>null</c>. In that case, the array contains the data that Game Kit was able to download before the error occurred.</p>error<p>If an error occurred, this parameter holds an error object that explains the error. Otherwise, the value of this parameter is <c>null</c>.</p><b>Discussion</b><p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p><p>Once this call is completed, the <c>friends</c> property of the shared local player object is set to the same list of players returned in the completion handler.</p><b>Availability</b><ul><li>Available in iOS 4.1 and later.</li></ul><b>See Also</b><ul><li>    <c>@property friends</c></li></ul></remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.RegisterListener(U3DXT.iOS.Native.GameKit.GKLocalPlayerListener)">
            <summary>
            Register a listener for a particular event.
            <br></br>Equivalent to the native <c>registerListener:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>listener</em>
                <p>The <c>GKLocalPlayerListener</c> object containing the selector information to listen to.</p>
                <b>Discussion</b>
                <p>Only register a listener a single time. Registering a listener multiple times will result in undefined behavior.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="listener">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.SetDefaultLeaderboardCategoryID(System.String,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Sets the category identifier for the local player’s default leaderboard. ( Deprecated in iOS 7.0.  Use the <c>setDefaultLeaderboardIdentifier:completionHandler:</c> method instead.)
            <br></br>Equivalent to the native <c>setDefaultLeaderboardCategoryID:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>categoryID</em>
                <p>The category ID string for one of your game’s leaderboards.</p>
                <em>completionHandler</em>
                <p>A block to be called when the request completes.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>	error<p>If an error occurred, this parameter holds an error object that explains the error. Otherwise, the value of this parameter is <c>null</c>.</p><b>Discussion</b><p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p><p>The default leaderboard is configured in iTunes Connect as part of configuring your game’s leaderboards. All players normally start with this leaderboard as the default leaderboard. Calling this method changes the default leaderboard only for the local player.</p><b>Availability</b><ul><li>Available in iOS 6.0 and later.</li><li>Deprecated in iOS 7.0.</li></ul><b>See Also</b><ul><li><c>– loadDefaultLeaderboardCategoryIDWithCompletionHandler:</c></li></ul></remarks>
            <param name="catogoryID">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.SetDefaultLeaderboardIdentifier(System.String,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Sets the default leaderboard for the current game.
            <br></br>Equivalent to the native <c>setDefaultLeaderboardIdentifier:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>leaderboardIdentifier</em>
                <p>The identifier of the leaderboard to be set as the default leaderboard.</p>
                <em>completionHandler</em>
                <p>A block to be called when the request completes.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>	error<p>If an error occurred, this parameter holds an error object that explains the error. Otherwise, the value of this parameter is <c>null</c>.</p><b>Discussion</b><p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p><p>The default leaderboard is configured in iTunes Connect as part of configuring your game’s leaderboards. All players normally start with this leaderboard as the default leaderboard. Calling this method changes the default leaderboard only for the local player.</p><b>Availability</b><ul><li>Available in iOS 7.0 and later.</li></ul></remarks>
            <param name="leaderboardIdentifier">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UnregisterAllListeners">
            <summary>
            Unregister all listeners in your game.
            <br></br>Equivalent to the native <c>unregisterAllListeners</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayer.UnregisterListener(U3DXT.iOS.Native.GameKit.GKLocalPlayerListener)">
            <summary>
            Unregister a specific listener.
            <br></br>Equivalent to the native <c>unregisterListener:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>listener</em>
                <p>A <c>GKLocalPlayerListener</c> object containing the listener to unregister.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="listener">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener">
            <summary>
            The <c>GKLocalPlayerListener</c> protocol inherits the methods from <c>GKChallengeListener</c>, <c>GKInviteEventHandler</c>, and <c>GKTurnBasedEventListener</c> in order to handle multiple events.
            </summary>
            <remarks>
                <p>Do not implement <c>GKChallengeListener</c>, <c>GKInviteEventHandler</c>, and <c>GKTurnBasedEventListener</c> directly, implement <c>GKLocalPlayerListener</c> instead. You can listen for and handle multiple events using <c>GKLocalPlayerListener</c>.</p>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_didRequestMatchWithPlayers__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_receivedExchangeCancellation_forMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_receivedExchangeReplies_forCompletedExchange_forMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_matchEnded__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_receivedExchangeRequest_forMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_receivedTurnEventForMatch_didBecomeActive__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_didReceiveChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_wantsToPlayChallenge__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_didCompleteChallenge_issuedByFriend__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_issuedChallengeWasCompleted_byFriend__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.UP_GKLocalPlayerListener_set__player_didAcceptInvite__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.DidRequestMatchWithPlayers(U3DXT.iOS.Native.GameKit.GKPlayer,System.Object[])">
            <summary>
            (optional) Initiates a match from Game Center with the requested players. (required)
            <br></br>Equivalent to the native <c>player:didRequestMatchWithPlayers:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>playerIDsToInvite</em>
                <p>An array of <c>String</c> objects containing the player identifiers to invite to the match.</p>
                <b>Discussion</b>
                <p>When this method is called, you should create a new match using the player identifiers provided and present a <c>GKTurnBasedMatchmakerViewController</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="playerIDsToInvite">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.ReceivedExchangeCancellation(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKTurnBasedExchange,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Called when the exchange is cancelled. (required)
            <br></br>Equivalent to the native <c>player:receivedExchangeCancellation:forMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>exchange</em>
                <p>A <c>GKTurnBasedExchange</c> object containing the exchange that is cancelled.</p>
                <em>match</em>
                <p>The <c>GKTurnBasedMatch</c> object containing the current match information.</p>
            </remarks>
            <param name="player">
            </param>
            <param name="exchange">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.ReceivedExchangeReplies(U3DXT.iOS.Native.GameKit.GKPlayer,System.Object[],U3DXT.iOS.Native.GameKit.GKTurnBasedExchange,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Called when the exchange is completed. (required)
            <br></br>Equivalent to the native <c>player:receivedExchangeReplies:forCompletedExchange:forMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>replies</em>
                <p>An array of <c>GKTurnBasedExchange</c> objects containing the replies from other players.</p>
                <em>exchange</em>
                <p>A <c>GKTurnBasedExchange</c> object containing the exchange that is completed.</p>
                <em>match</em>
                <p>The <c>GKTurnBasedMatch</c> object containing the current game data.</p>
                <b>Discussion</b>
                <p>This method is called when all of the players have either responded to the exchange or timed-out. The result is then sent to the current player and the initiator of the exchange.</p>
            </remarks>
            <param name="player">
            </param>
            <param name="replies">
            </param>
            <param name="exchange">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.Ended(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Called when the match has ended. (required)
            <br></br>Equivalent to the native <c>player:matchEnded:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.ReceivedExchangeRequest(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKTurnBasedExchange,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Called when a player receives an exchange request from another player. (required)
            <br></br>Equivalent to the native <c>player:receivedExchangeRequest:forMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>exchange</em>
                <p>A <c>GKTurnBasedExchange</c> object containing the requested exchange.</p>
                <em>match</em>
                <p>The <c>GKTurnBasedMatch</c> object containing the current game data.</p>
            </remarks>
            <param name="player">
            </param>
            <param name="exchange">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.ReceivedTurnEvent(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch,System.Boolean)">
            <summary>
            (optional) Activates the player’s turn. (required)
            <br></br>Equivalent to the native <c>player:receivedTurnEventForMatch:didBecomeActive:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>match</em>
                <p>The <c>GKTurnBasedMatch</c> object containing the current game data.</p>
                <em>didBecomeActive</em>
                <p>Denotes whether the app should be launched or brought to the foreground.</p>
                <b>Discussion</b>
                <p>This method is called when the it becomes the player’s turn. It is also called when any of the following events happen:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The current turn has a time-out associated with it and the turn is about to expire.</p>
                    </li>
                    <li class="li">
                        <p>Player accepts an invite from another player.</p>
                    </li>
                    <li class="li">
                        <p>Turn was passed to another player. In this case, <c>didBecomeActive</c> is <c>false</c>.</p>
                    </li>
                    <li class="li">
                        <p>Match data is saved by another player.</p>
                    </li>
                    <li class="li">
                        <p>Player receives a reminder.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="match">
            </param>
            <param name="didBecomeActive">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.DidReceive(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called when a player receives a challenge and doesn’t want to address it immediately. (required)
            <br></br>Equivalent to the native <c>player:didReceiveChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The player that receives the challenge.</p>
                <em>challenge</em>
                <p>The challenge sent to the player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.WantsToPlay(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKChallenge)">
            <summary>
            (optional) Called when a player wants to start a game with the intention of completing a challenge. (required)
            <br></br>Equivalent to the native <c>player:wantsToPlayChallenge:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The player who selected the challenge.</p>
                <em>challenge</em>
                <p>The challenge to be played by the player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="challenge">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.DidComplete(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKChallenge,U3DXT.iOS.Native.GameKit.GKPlayer)">
            <summary>
            (optional)
            <br></br>Equivalent to the native <c>player:didCompleteChallenge:issuedByFriend:</c> method.
            </summary>
            <remarks>
            </remarks>
            <param name="player">
            </param>
            <param name="challenge">
            </param>
            <param name="friendPlayer">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.IssuedChallengeWasCompleted(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKChallenge,U3DXT.iOS.Native.GameKit.GKPlayer)">
            <summary>
            (optional)
            <br></br>Equivalent to the native <c>player:issuedChallengeWasCompleted:byFriend:</c> method.
            </summary>
            <remarks>
            </remarks>
            <param name="player">
            </param>
            <param name="challenge">
            </param>
            <param name="friendPlayer">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener.DidAccept(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKInvite)">
            <summary>
            (optional) Called when another player accepts a match invite from the local player. (required)
            <br></br>Equivalent to the native <c>player:didAcceptInvite:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The player identifier associated with the invitation.</p>
                <em>invite</em>
                <p>The invitation accepted by the player.</p>
            </remarks>
            <param name="player">
            </param>
            <param name="invite">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_didRequestMatchWithPlayers__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didRequestMatchWithPlayers__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_receivedExchangeCancellation_forMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_receivedExchangeCancellation_forMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_receivedExchangeReplies_forCompletedExchange_forMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_receivedExchangeReplies_forCompletedExchange_forMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_matchEnded__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_matchEnded__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_receivedExchangeRequest_forMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_receivedExchangeRequest_forMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_receivedTurnEventForMatch_didBecomeActive__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_receivedTurnEventForMatch_didBecomeActive__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_didReceiveChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didReceiveChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_wantsToPlayChallenge__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_wantsToPlayChallenge__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_didCompleteChallenge_issuedByFriend__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didCompleteChallenge_issuedByFriend__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_issuedChallengeWasCompleted_byFriend__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_issuedChallengeWasCompleted_byFriend__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKLocalPlayerListener._player_didAcceptInvite__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didAcceptInvite__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatch">
            <summary>
            A <c>GKMatch</c> object provides a peer-to-peer network between a group of devices that are connected to Game Center. Matches provide transmit both voice and game data. Your game never directly allocates <c>GKMatch</c> objects. Instead, it uses the <c>GKMatchmaker</c> class to programmatically find a match with other interested players or a <c>GKMatchmakerViewController</c> object to display a user interface to the player.
            </summary>
            <remarks>
                <p>After your game receives a match object, set its delegate and then wait until the other participants are connected to the match. You can read the <c>expectedPlayerCount</c> property to determine how many players have not connected to the match.</p>
                <p>Each device in the match is identified by the player identifier for the player authenticated on that device. Your game transmits its own data to other players by calling either the <c>sendDataToAllPlayers:withDataMode:error:</c> method or the <c>sendData:toPlayers:withDataMode:error:</c> method. To allow voice chat, call <c>voiceChatWithName:</c> to create one or more voice channels.</p>
                <p>When you are finished with the match, call the match’s <c>disconnect</c> method.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKMatch.DidFail">
            <summary>
            Called when the match cannot connect to any other players.
            <br></br>Equivalent to implementing the native <c>match:didFailWithError:</c> method of <c>GKMatchDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatch.DidFailEventArgs">
            <summary>
            Event arguments for DidFail.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.DidFailEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatch.DidFailEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKMatch.DidReceive">
            <summary>
            Called when data is received from a player. (required)
            <br></br>Equivalent to implementing the native <c>match:didReceiveData:fromPlayer:</c> method of <c>GKMatchDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatch.DidReceiveEventArgs">
            <summary>
            Event arguments for DidReceive.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.DidReceiveEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSData,System.String)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatch.DidReceiveEventArgs.data">
            <summary>data</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatch.DidReceiveEventArgs.playerID">
            <summary>playerID</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKMatch.PlayerDidChangeState">
            <summary>
            Called when a player connects to or disconnects from the match.
            <br></br>Equivalent to implementing the native <c>match:player:didChangeState:</c> method of <c>GKMatchDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatch.PlayerDidChangeStateEventArgs">
            <summary>
            Event arguments for PlayerDidChangeState.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.PlayerDidChangeStateEventArgs.#ctor(System.String,U3DXT.iOS.Native.GameKit.GKPlayerConnectionState)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatch.PlayerDidChangeStateEventArgs.playerID">
            <summary>playerID</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatch.PlayerDidChangeStateEventArgs.state">
            <summary>state</summary>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatch.shouldReinvitePlayerHandler">
            <summary>
            Called when a player in a two-player match was disconnected.
            <br></br>Equivalent to implementing the native <c>match:shouldReinvitePlayer:</c> method of <c>GKMatchDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_get_expectedPlayerCount(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_get_playerIDs(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_chooseBestHostPlayerWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_disconnect(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_rematchWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_sendData_toPlayers_withDataMode_error_(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_sendDataToAllPlayers_withDataMode_error_(System.String,System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.UP_GKMatch_voiceChatWithName_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKMatch" /> class.
            <br></br>Equivalent to the native <c>[[GKMatch alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatch.ClassExists">
            <summary>
            Returns whether the native GKMatch class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatch.Delegate">
            <summary>
            The delegate for the match.
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You must set a delegate to receive data from other members of the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatch.expectedPlayerCount">
            <summary>
            The remaining number of players who have not yet connected to the match. (read-only)
            <br></br>Equivalent to the native <c>expectedPlayerCount</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is decremented whenever a player connects to the match. When its value reaches <c>0</c>, all expected players are connected, and your game can begin the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatch.playerIDs">
            <summary>
            An array of <c>String</c> objects containing the player identifiers for remote players in the match. (read-only)
            <br></br>Equivalent to the native <c>playerIDs</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>playerIDs</c> property initially includes the player identifiers for any remote players already connected to the match; the array may initially be empty. As each new player connects to the match, that player’s identifier is added to the array. The player identifier for the local player is not included in this array.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property expectedPlayerCount</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.ChooseBestHostPlayer(System.Action{System.String})">
            <summary>
            Determines the best player in the game to act as the server for a client-server match.
            <br></br>Equivalent to the native <c>chooseBestHostPlayerWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the score is reported.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>
                <em>playerID</em>
                <p>The player identifier for the player with the best estimated network performance, or <c>null</c> if a player could not currently be determined.</p>
                <b>Discussion</b>
                <p>Calling this method causes Game Kit to attempt to estimate which player has the best overall network connection using a variety of metrics such as bandwidth, latency and network reliability. Typically, you call this method when your game implements a client-server model on top of the match’s peer-to-peer connection. See  <!--a target="_self" -->“Designing Your Network Game”<!--/a-->  in <em>Game Center Programming Guide</em>.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.Disconnect">
            <summary>
            Disconnects the local player from the match.
            <br></br>Equivalent to the native <c>disconnect</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Your game should call <c>disconnect</c> before removing the last strong reference to the match object. Calling <c>disconnect</c> notifies other players that you have left the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.Rematch(System.Action{U3DXT.iOS.Native.GameKit.GKMatch,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Create a new match with the list of players from an existing match.
            <br></br>Equivalent to the native <c>rematchWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the match is created.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>
                <em>match</em>
                <p>The new match. If an error occurred, this parameter’s value is <c>null</c>.</p>
                <em>error</em>
                <p>If an error occurred, this parameter holds an error object that describes the problem. If the match was successfully recreated, this parameter’s value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>Calling this method uses auto-matching to recreate a previous match. A new match with the same set of players is created and returned. If your game attempts to recreate matches using this method, each instance of your game on each device should call this method.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.SendData(U3DXT.iOS.Native.Foundation.NSData,System.Object[],U3DXT.iOS.Native.GameKit.GKMatchSendDataMode,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Transmits data to a list of connected players.
            <br></br>Equivalent to the native <c>sendData:toPlayers:withDataMode:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>data</em>
                <p>The bytes to be sent.</p>
                <em>playerIDs</em>
                <p>An array of <c>String</c> objects containing the identifier strings for the list of players who should receive the data.</p>
                <em>mode</em>
                <p>The mechanism used to send the data.</p>
                <em>error</em>
                <p>If the data could not be queued, on return, this parameter holds an <c>NSError</c> object describing the error.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the data was successfully queued for transmission; <c>false</c> if the match was unable to queue the data.</p>
                <b>Discussion</b>
                <p>The match queues the data and transmits it when the network becomes available.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="data">
            </param>
            <param name="playerIDs">
            </param>
            <param name="mode">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.SendDataToAllPlayers(U3DXT.iOS.Native.Foundation.NSData,U3DXT.iOS.Native.GameKit.GKMatchSendDataMode,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Transmits data to all players connected to the match.
            <br></br>Equivalent to the native <c>sendDataToAllPlayers:withDataMode:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>data</em>
                <p>The bytes to be sent.</p>
                <em>mode</em>
                <p>The mechanism used to send the data.</p>
                <em>error</em>
                <p>If the data could not be queued, on return, this parameter holds an <c>NSError</c> object describing the error.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the data was successfully queued for transmission; <c>false</c> if the match was unable to queue the data.</p>
                <b>Discussion</b>
                <p>The match queues the data and transmits it when the network becomes available.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="data">
            </param>
            <param name="mode">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatch.VoiceChat(System.String)">
            <summary>
            Joins a voice channel.
            <br></br>Equivalent to the native <c>voiceChatWithName:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>name</em>
                <p>The channel to join.</p>
                <b>Return Value</b>
                <p>An autoreleased voice chat object for the voice channel, or <c>null</c> if an error occurred.</p>
                <b>Discussion</b>
                <p>Calling this method joins a voice channel, creating it if necessary. Your game should keep a strong reference to the voice chat object until the player leaves the channel. All participants who join a channel with the same name are connected to each other.</p>
                <p>A single match can have multiple voice chat channels, and any player in the match can join multiple channels simultaneously. For example, a team-based game might create a channel for each team, and a single channel that includes all of the players.</p>
                <p>Voice chat objects are dependent on the network connection provided by the match. When the player disconnects from the match, all voice channels associated with that match stop working. Typically, you should exit any voice channels and release any strong references to the channels before disconnecting from the match.</p>
                <p>Parental controls may prevent a player from joining a voice chat. If the player is not permitted to join the voice channel, a <c>null</c> object is returned to your application.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="name">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchDelegate">
            <summary>
            The <c>GKMatchDelegate</c> protocol is implemented to receive status updates and network data from players connected to a <c>GKMatch</c> object.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.UP_GKMatchDelegate_set__match_didFailWithError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.UP_GKMatchDelegate_set__match_didReceiveData_fromPlayer__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.UP_GKMatchDelegate_set__match_player_didChangeState__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.UP_GKMatchDelegate_set__match_shouldReinvitePlayer__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.DidFail(U3DXT.iOS.Native.GameKit.GKMatch,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Called when the match cannot connect to any other players.
            <br></br>Equivalent to the native <c>match:didFailWithError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>The match that received the error.</p>
                <em>error</em>
                <p>The error that occurred.</p>
                <b>Discussion</b>
                <p>This method is called if the match cannot connect to any other players associated with the match. It usually means a serious networking error has occurred.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.DidReceive(U3DXT.iOS.Native.GameKit.GKMatch,U3DXT.iOS.Native.Foundation.NSData,System.String)">
            <summary>
            (<b>required</b>) Called when data is received from a player. (required)
            <br></br>Equivalent to the native <c>match:didReceiveData:fromPlayer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>The match that received the data.</p>
                <em>data</em>
                <p>The bytes sent by the player.</p>
                <em>player</em>
                <p>The string identifier for the player that sent the data.</p>
                <b>Discussion</b>
                <p>Your game defines its own format for data packets it transmits and receives over the network.</p>
                <p>
                    <strong>Important:</strong>  Data received from other players should be treated as <em>untrusted</em> data. Be sure to validate the data you receive from the match and write your code carefully to avoid security vulnerabilities. See the Secure Coding Guide for more information.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
            <param name="data">
            </param>
            <param name="playerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.PlayerDidChangeState(U3DXT.iOS.Native.GameKit.GKMatch,System.String,U3DXT.iOS.Native.GameKit.GKPlayerConnectionState)">
            <summary>
            (optional) Called when a player connects to or disconnects from the match.
            <br></br>Equivalent to the native <c>match:player:didChangeState:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>The match that the player is connected to.</p>
                <em>player</em>
                <p>The identifier for the player whose state changed.</p>
                <em>state</em>
                <p>The state the player moved to.</p>
                <b>Discussion</b>
                <p>Your game implements this method to be notified when players connect to or disconnect from the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
            <param name="playerID">
            </param>
            <param name="state">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchDelegate.ShouldReinvitePlayer(U3DXT.iOS.Native.GameKit.GKMatch,System.String)">
            <summary>
            (optional) Called when a player in a two-player match was disconnected.
            <br></br>Equivalent to the native <c>match:shouldReinvitePlayer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>The match that lost the player.</p>
                <em>playerID</em>
                <p>The identifier for the player whose connection failed.</p>
                <b>Return Value</b>
                <p>Your game should return <c>true</c> if it wants Game Kit to attempt to reconnect the player, <c>false</c> if it wants to terminate the match.</p>
                <b>Discussion</b>
                <p>Occasionally, players may get disconnected from a match. If your game implements this method in the match delegate and the match only contains two players, Game Kit calls this method after a player gets disconnected. If your delegate allows Game Kit to reconnect to the other player, it reconnects the other player. Your <c>match:player:didChangeState:</c> method is called when the other player is reconnected.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
            <param name="playerID">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchDelegate._match_didFailWithError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_match_didFailWithError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchDelegate._match_didReceiveData_fromPlayer__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_match_didReceiveData_fromPlayer__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchDelegate._match_player_didChangeState__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_match_player_didChangeState__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchDelegate._match_shouldReinvitePlayer__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_match_shouldReinvitePlayer__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchRequest">
            <summary>
            A <c>GKMatchRequest</c> object is used to specify the parameters for a new live or turn-based match. You initialize a match request object, then pass it to another object to actually create the match. The kind of object you pass it to depends on which kind of match you want and whether you want to display the standard matchmaking user interface. See  Table 1 .
            </summary>
            <remarks>
                <table class="graybox" border="0" cellspacing="0" cellpadding="5">
                    <caption class="tablecaption">
                        <strong class="caption_number">Table 1</strong>  The class of object that receives the match request object.</caption>
                    <tr>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>
                            </p>
                        </th>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>Live Match</p>
                        </th>
                        <th scope="col" class="TableHeading_TableRow_TableCell">
                            <p>Turn-based Match</p>
                        </th>
                    </tr>
                    <tr>
                        <td class="rowhead" scope="row">
                            <p>Creating a match using the standard user interface</p>
                        </td>
                        <td>
                            <p>
                                <c>GKMatchmakerViewController</c>
                            </p>
                        </td>
                        <td>
                            <p>
                                <c>GKTurnBasedMatchmakerViewController</c>
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <td class="rowhead" scope="row">
                            <p>Creating a match programmatically for a custom user interface</p>
                        </td>
                        <td>
                            <p>
                                <c>GKMatchmaker</c>
                            </p>
                        </td>
                        <td>
                            <p>
                                <c>GKTurnBasedMatch</c>
                            </p>
                        </td>
                    </tr>
                </table>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_maxPlayersAllowedForMatchOfType_(System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_get_defaultNumberOfPlayers(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_set_defaultNumberOfPlayers(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_set_inviteeResponseHandler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_get_inviteMessage(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_set_inviteMessage(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_get_maxPlayers(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_set_maxPlayers(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_get_minPlayers(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_set_minPlayers(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_get_playerAttributes(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_set_playerAttributes(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_get_playerGroup(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_set_playerGroup(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_get_playersToInvite(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.UP_GKMatchRequest_set_playersToInvite(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKMatchRequest" /> class.
            <br></br>Equivalent to the native <c>[[GKMatchRequest alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.ClassExists">
            <summary>
            Returns whether the native GKMatchRequest class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchRequest.MaxPlayersAllowed(U3DXT.iOS.Native.GameKit.GKMatchType)">
            <summary>
            Returns the maximum number of players allowed in the match request for a given match type.
            <br></br>Equivalent to the native <c>maxPlayersAllowedForMatchOfType:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchType</em>
                <p>The kind of match. See  “Match Type.” </p>
                <b>Return Value</b>
                <p>The maximum number of allowed players for that type of match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="matchType">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.defaultNumberOfPlayers">
            <summary>
            The default number of players for the match.
            <br></br>Equivalent to the native <c>defaultNumberOfPlayers</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If this property is not set, then the default number of players is equal to the value stored in the <c>maxPlayers</c> property. The default number of players determines the number of invitees shown in the standard matchmaking user interface. The player can choose to override this to add or remove slots.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.inviteeResponseHandler">
            <summary>
            A block to be called when a response from an invited player is returned to your game.
            <br></br>Equivalent to the native <c>inviteeResponseHandler</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The block takes the following parameters:</p>
                <p>
                </p>
                <em>playerID</em>
                <p>The identifier for the player.</p>
                <em>GKInviteeResponse</em>
                <p>The nature of the response. See  “Invitee Responses.” </p>
                <p>An invitee response handler is called whenever you programmatically invite specific players to join a match. It is called once for each player invited to the match. Typically, your game uses the responses to update the custom user interface. For example, you want the player to be able to perform any of the following tasks:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Start the match.</p>
                    </li>
                    <li class="li">
                        <p>Invite an additional set of specific players.</p>
                    </li>
                    <li class="li">
                        <p>Use matchmaking to fill the remaining match slots.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.inviteMessage">
            <summary>
            The string displayed on another player’s device when invited to join a match.
            <br></br>Equivalent to the native <c>inviteMessage</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.maxPlayers">
            <summary>
            The maximum number of players that may join the match.
            <br></br>Equivalent to the native <c>maxPlayers</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The maximum number of players must be equal or greater than the minimum number of players. The maximum number of players may be no more than value returned by the <c>maxPlayersAllowedForMatchOfType:</c> method for the kind of match you plan to create.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.minPlayers">
            <summary>
            The minimum number of players that may join the match.
            <br></br>Equivalent to the native <c>minPlayers</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The minimum number of players must be at least 2.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.playerAttributes">
            <summary>
            A mask that specifies the role that the local player would like to play in the game.
            <br></br>Equivalent to the native <c>playerAttributes</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If this value is <c>0</c> (the default), this property is ignored. If the value is nonzero, then automatching uses the value as a mask that restricts the role the player can play in the group. Automatching with player attributes matches new players into the game so that the bitwise OR of the masks of all the players in the resulting match equals <c>0xFFFFFFFF</c>.</p>
                <p>For more information, see <em>Game Center Programming Guide</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.playerGroup">
            <summary>
            A number identifying a subset of players allowed to join the match.
            <br></br>Equivalent to the native <c>playerGroup</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If your game sets the <c>playerGroup</c> property, only players whose requests share the same <c>playerGroup</c> value are automatched by Game Center. The value of a player group is arbitrary. For example, you could define different <c>playerGroup</c> values to implement any of the following filters:</p>
                <ul class="ul">
                    <li class="li">
                        <p>A game could restrict players based on skill level.</p>
                    </li>
                    <li class="li">
                        <p>A game that provides multiple game modes could use it to filter players into the specific game they want to play.</p>
                    </li>
                    <li class="li">
                        <p>A game that provides bonus content through in-app purchase could match players who own the same content with each other. </p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchRequest.playersToInvite">
            <summary>
            A list of player identifers for players to invite to the match.
            <br></br>Equivalent to the native <c>playersToInvite</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The property holds an array of <c>String</c> objects, each of which is an identifier for a player on Game Center. If the value of the property is non-<c>null</c>, when you use the request to create a match, Game Center invites those players to the match. If <c>null</c> (the default), no players are invited. The exact behavior for matchmaking depends on the kind of match being created and the class used to create the match. For more information, see <em>Game Center Programming Guide</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchSendDataMode">
            <summary>
            The mechanism used to transmit data to other players.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchSendDataMode.Unreliable">
            <summary>
                <p>The data is sent once and is not sent again if a transmission error occurs. Use this for small packets of data that must arrive quickly to be useful to the recipient.</p>
                <p>Data transmitted unreliably may be received out of order by recipients. Typically, you build your own game-specific error handling on top of this mechanism.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKMatchSendDataUnreliable</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchSendDataMode.Reliable">
            <summary>
                <p>The data is sent continuously until it is successfully received by the intended recipients or the connection times out. Use this when you need to guarantee delivery and speed is not critical.</p>
                <p>Reliable transmissions are delivered in the order they were sent.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKMatchSendDataReliable</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchType">
            <summary>
            The kind of match being created.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchType.TurnBased">
            <summary>
                <p>A turn-based match hosted by Game Center. It is represented by a <c>GKTurnBasedMatch</c> object.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKMatchTypeTurnBased</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchType.PeerToPeer">
            <summary>
                <p>A peer-to-peer match hosted by Game Center. It is represented by a <c>GKMatch</c> object.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKMatchTypePeerToPeer</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchType.Hosted">
            <summary>
                <p>A match hosted on your private server.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKMatchTypeHosted</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchmaker">
            <summary>
            The <c>GKMatchmaker</c> class is used to programmatically create matches to other players and to receive match invitations sent by other players.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>Matches can be either <strong>peer-to-peer</strong> or <strong>hosted</strong>. A peer-to-peer match is fully supported in Game Kit by the <c>GKMatch</c> class. A <c>GKMatch</c> object provides all of the network connections between the devices and routes the network data through Game Center if necessary. In contrast, a hosted match uses matchmaking to find the players for a match, but your game implements its own networking between the participants, routing through your own server if necessary.</p>
                <p>
                    <strong>Note:</strong> Hosted matches are intended for developers who already have a networking game service but who want to use Game Center to find players for a match. Because you need to design and implement your own networking code, you can define your own protocols to connect to your server.</p>
                <p>
                </p>
                <p>To receive invitations from other players, your game must provide an invitation handler. After your game successfully authenticates the local player, it should immediately set the <c>inviteHandler</c> property. The invite handler is called immediately if your game was launched in response to a push notification.</p>
                <p>To programmatically search for other players, start by creating a <c>GKMatchRequest</c> object that describes the match you are interested in. Then, call the shared matchmaker’s <c>findMatchForRequest:withCompletionHandler:</c> method to create a peer-to-peer match, or its <c>findPlayersForHostedMatchRequest:withCompletionHandler:</c> method to create a hosted match. In either case, Game Center matches players into a match and calls your completion handler. If the match does not have enough players (for example, you invited a specific list of players and some declined the invitation), you can create another match request and call the <c>addPlayersToMatch:matchRequest:completionHandler:</c> method to add more participants to the match. Once the match is complete, call the <c>finishMatchmakingForMatch:</c> method.</p>
                <p>If you implement programmatic matchmaking and invite specific players to the match, you should also implement an invitee response handler. This handler is notified as invitations are processed, allowing you to update your game’s custom user interface to display which players are connected to the match.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_sharedMatchmaker">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_set_inviteHandler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_addPlayersToMatch_matchRequest_completionHandler_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_cancel(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_cancelInviteToPlayer_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_findMatchForRequest_withCompletionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_findPlayersForHostedMatchRequest_withCompletionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_finishMatchmakingForMatch_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_matchForInvite_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_queryActivityWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_queryPlayerGroupActivity_withCompletionHandler_(System.String,System.UInt32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_startBrowsingForNearbyPlayersWithReachableHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.UP_GKMatchmaker_stopBrowsingForNearbyPlayers(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKMatchmaker" /> class.
            <br></br>Equivalent to the native <c>[[GKMatchmaker alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmaker.ClassExists">
            <summary>
            Returns whether the native GKMatchmaker class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.SharedMatchmaker">
            <summary>
            Returns the singleton matchmaker instance.
            <br></br>Equivalent to the native <c>sharedMatchmaker</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The shared matchmaker instance.</p>
                <b>Discussion</b>
                <p>Games do not create a <c>GKMatchmaker</c> object. Instead, they retrieve the shared singleton by calling this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmaker.inviteHandler">
            <summary>
            A block to be called when an invitation to join a match is accepted by the local player. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>inviteHandler</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The block takes the following parameters:</p>
                <p>
                </p>
                <em>acceptedInvite</em>
                <p>The invitation accepted by the player.</p>
                <em>playerIDsToInvite</em>
                <p>An array of <c>String</c> objects containing player identifiers for additional players to invite into the game.</p>
                <p>Your block should respond to the invitation in one of two ways:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Display the standard user interface by initializing a new <c>GKMatchmakerViewController</c> object, passing the invitation object and the list of player identifiers as parameters.</p>
                    </li>
                    <li class="li">
                        <p>Create a match programmatically by calling the <c>matchForInvite:completionHandler:</c> method on the shared matchmaker instance.</p>
                    </li>
                </ul>
                <p>If your game receives an invitation while it is already running, it should transition to multiplayer play. It should clean up any existing content, such as ending the current match the player is playing, and then process the invitation.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.AddPlayersToMatch(U3DXT.iOS.Native.GameKit.GKMatch,U3DXT.iOS.Native.GameKit.GKMatchRequest,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Adds players to an existing match.
            <br></br>Equivalent to the native <c>addPlayersToMatch:matchRequest:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>A previously created match.</p>
                <em>matchRequest</em>
                <p>The parameters for the new match request.</p>
                <em>completionHandler</em>
                <p>A block to be called when matchmaking completes.</p>
                <p>The block takes the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If matchmaking was successful, this parameter contains <c>null</c>. Otherwise, this parameter holds an error object that describes the error that occurred.</p>
                <b>Discussion</b>
                <p>This method updates an existing match object by adding additional players.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a different thread than the thread originally used to invoke the method. This means that the code in your block needs to be thread safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
            <param name="matchRequest">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.Cancel">
            <summary>
            Cancels a pending matchmaking request.
            <br></br>Equivalent to the native <c>cancel</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The completion handler receives a callback with a <c>GKErrorCancelled</c> error.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.CancelInviteToPlayer(System.String)">
            <summary>
            Cancels a pending invitation to another player.
            <br></br>Equivalent to the native <c>cancelInviteToPlayer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerID</em>
                <p>The player identifier for a player previously invited to the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="playerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.FindMatch(U3DXT.iOS.Native.GameKit.GKMatchRequest,System.Action{U3DXT.iOS.Native.GameKit.GKMatch,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Initiates a request to find players for a peer-to-peer match.
            <br></br>Equivalent to the native <c>findMatchForRequest:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>request</em>
                <p>The configuration for the desired match.</p>
                <em>completionHandler</em>
                <p>A block to be called when the match has been created. This block receives the following parameters:</p>
                <p>
                </p>
                <em>match</em>
                <p>If matchmaking was successful, this parameter contains the created match. Otherwise, this parameter is <c>null</c>.</p>
                <em>error</em>
                <p>If matchmaking was successful, this parameter contains <c>null</c>. Otherwise, this parameter holds an error object that describes the error that occurred.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a different thread than the thread originally used to invoke the method. This means that the code in your block needs to be thread safe.</p>
                <p>On iOS 6, if the match request’s <c>playersToInvite</c> property is non-<c>NIL</c>, Game Center sends invitations only out to the players listed in the property. If the <c>playersToInvite</c> property is <c>NIL</c>, then it searches for any waiting players that match the request. If your game wants to perform programmatic matchmaking for the remaining slots, it should call the <c>addPlayersToMatch:matchRequest:completionHandler:</c> method with a match request whose <c>playersToInvite</c> property is <c>NIL</c>.</p>
                <p>Prior to iOS 6, the match request’s <c>playersToInvite</c> property is ignored and this method only searches for available players.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– cancel</c>
                    </li>
                </ul>
            </remarks>
            <param name="request">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.FindPlayers(U3DXT.iOS.Native.GameKit.GKMatchRequest,System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Initiates a request to find players for a hosted match.
            <br></br>Equivalent to the native <c>findPlayersForHostedMatchRequest:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>request</em>
                <p>The configuration for the desired match.</p>
                <em>completionHandler</em>
                <p>A block to be called when the match has been created. This block receives the following parameters:</p>
                <p>
                </p>
                <em>playerIDs</em>
                <p>If matchmaking was successful, this parameter contains an array of <c>String</c> objects containing the players to connect into the match. Otherwise, this parameter is <c>null</c>.</p>
                <em>error</em>
                <p>If matchmaking was successful, this parameter contains <c>null</c>. Otherwise, this parameter holds an error object that describes the error that occurred.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a different thread than the thread originally used to invoke the method. This means that the code in your block needs to be thread safe. When your completion handler is called, your game should connect those players to your own server.</p>
                <p>On iOS 6, if the match request’s <c>playersToInvite</c> property is non-<c>NIL</c>, Game Center sends invitations only out to the players listed in the property. If the <c>playersToInvite</c> property is <c>NIL</c>, then it searches for any waiting players that match the request. Prior to iOS 6, the match request’s <c>playersToInvite</c> property is ignored and this method only searches for available players.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– cancel</c>
                    </li>
                </ul>
            </remarks>
            <param name="request">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.FinishMatchmaking(U3DXT.iOS.Native.GameKit.GKMatch)">
            <summary>
            Informs Game Center that programmatic matchmaking has finished.
            <br></br>Equivalent to the native <c>finishMatchmakingForMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>The match that has completed the matchmaking process.</p>
                <b>Discussion</b>
                <p>If your game uses programmatic matchmaking, it makes a series of calls to the <c>findMatchForRequest:withCompletionHandler:</c> and <c>addPlayersToMatch:matchRequest:completionHandler:</c> methods to fill a match with players. When the match has the proper number of players, call the<c>finishMatchmakingForMatch:</c> method before starting the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.Match(U3DXT.iOS.Native.GameKit.GKInvite,System.Action{U3DXT.iOS.Native.GameKit.GKMatch,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Creates a match from an accepted invitation.
            <br></br>Equivalent to the native <c>matchForInvite:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>invite</em>
                <p>The invitation accepted by the player.</p>
                <em>completionHandler</em>
                <p>A block to be called when the match has been created. This block receives the following parameters:</p>
                <p>
                </p>
                <em>match</em>
                <p>If the match was successfully created, this parameter contains the created match. Otherwise, this parameter is <c>null</c>.</p>
                <em>error</em>
                <p>If the match was successfully created, this parameter contains <c>null</c>. Otherwise, this parameter holds an error object that describes the error that occurred.</p>
                <b>Discussion</b>
                <p>When using this method to create a match, your game should display its own user interface to inform the player that he or she has been connected to a match.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a different thread than the thread originally used to invoke the method. This means that the code in your block needs to be thread safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property inviteHandler</c></li>
                </ul>
            </remarks>
            <param name="invite">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.QueryActivity(System.Action{System.Int32,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Initiates a search for activity in all player groups.
            <br></br>Equivalent to the native <c>queryActivityWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block that takes the following parameters:</p>
                <p>
                </p>
                <em>activity</em>
                <p>The amount of activity in the player group.</p>
                <em>error</em>
                <p>If the search completed successfully, this parameter is <c>null</c>; otherwise, this parameter holds an error object that describes the error that occurred.</p>
                <b>Discussion</b>
                <p>A query allows your game to see how many players have recently searched for a match, across all player groups.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a different thread than the thread originally used to invoke the method. This means that the code in your block needs to be thread safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.QueryPlayerGroupActivity(System.UInt32,System.Action{System.Int32,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Queries Game Center for the activity in a player group.
            <br></br>Equivalent to the native <c>queryPlayerGroupActivity:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerGroup</em>
                <p>A number that uniquely identifies a subset of players of your game.</p>
                <em>completionHandler</em>
                <p>A block that is called when the search completes. The block takes the following parameters:</p>
                <p>
                </p>
                <em>activity</em>
                <p>The amount of activity in the player group.</p>
                <em>error</em>
                <p>If the search completed successfully, this parameter is <c>null</c>; otherwise, this parameter holds an error object that describes the error that occurred.</p>
                <b>Discussion</b>
                <p>A query allows your game to see how many players have recently searched for a match. As a result, you can present a user interface that shows the relative activity in each player group. For example, if one group sees less activity than others, you might display a warning so that players are aware that finding a match may take longer.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a different thread than the thread originally used to invoke the method. This means that the code in your block needs to be thread safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="playerGroup">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.StartBrowsing(System.Action{System.String,System.Boolean})">
            <summary>
            Enables the matchmaking process to find nearby players through Bluetooth or WiFi (same subnet only).
            <br></br>Equivalent to the native <c>startBrowsingForNearbyPlayersWithReachableHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>reachableHandler</em>
                <p>A block called when the reachability for a player changes. The block takes the following parameters:</p>
                <p>
                </p>
                <em>playerID</em>
                <p>The player identifier for the player whose reachability status has changed.</p>
                <em>reachable</em>
                <p>
                    <c>true</c> if a new player has been discovered locally, <c>false</c> if a previously discovered player has disappeared.</p>
                <b>Discussion</b>
                <p>You only use this method when you are implementing programmatic matchmaking. After enabling browsing for nearby players, use the responses to populate your user interface with information about nearby players. If a player wants to invite a player to a game, add that player’s player identifier to a match request and call either the <c>findMatchForRequest:withCompletionHandler:</c> to create a match or <c>addPlayersToMatch:matchRequest:completionHandler:</c> method to update a match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="reachableHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmaker.StopBrowsing">
            <summary>
            Ends the search for nearby players.
            <br></br>Equivalent to the native <c>stopBrowsingForNearbyPlayers</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController">
            <summary>
            The <c>GKMatchmakerViewController</c> class is used to present a standard user interface to the player. This interface allows them to invite friends to a match or to allow Game Center to fill the remaining players needed for a match.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To show a matchmaking screen, initialize a new <c>GKMatchmakerViewController</c> object and set the delegate. Configure the view controller’s other properties to match your specific needs, then present the new view controller. and wait for the delegate to be called. The view controller’s delegate is notified when the matchmaking process is completed or canceled. In either situation, you dismiss the view controller.</p>
                <p>If the user is creating the match, your game initializes the matchmaker view controller by creating a <c>GKMatchRequest</c> object that describes the desired match. This match request is passed to the <c>initWithMatchRequest:</c> method. When this view controller is displayed, the local player can invite other players into the match.</p>
                <p>If your game receives an invitation from another player, it receives a <c>GKInvite</c> object representing the match the player was invited to. You initialize the matchmaker view controller by passing the <c>GKInvite</c> object received from Game Kit to the <c>initWithInvite:</c> method. When this view controller is presented to the player, the player joins the existing match, but is not allowed to invite others to the match.</p>
                <p>On iOS, you present and dismiss the view controller from another view controller in your game, using the methods provided by the <c>UIViewController</c> class. On OS X, you use the <c><!--a target="_self" -->GKDialogController<!--/a--></c> class to present and dismiss the view controller.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFail">
            <summary>
            Called when the view controller encounters an unrecoverable error. (required)
            <br></br>Equivalent to implementing the native <c>matchmakerViewController:didFailWithError:</c> method of <c>GKMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFailEventArgs">
            <summary>
            Event arguments for DidFail.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFailEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFailEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFindMatch">
            <summary>
            Called when a peer-to-peer match is found.
            <br></br>Equivalent to implementing the native <c>matchmakerViewController:didFindMatch:</c> method of <c>GKMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFindMatchEventArgs">
            <summary>
            Event arguments for DidFindMatch.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFindMatchEventArgs.#ctor(U3DXT.iOS.Native.GameKit.GKMatch)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFindMatchEventArgs.match">
            <summary>match</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFindPlayers">
            <summary>
            Called when a hosted match is found.
            <br></br>Equivalent to implementing the native <c>matchmakerViewController:didFindPlayers:</c> method of <c>GKMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFindPlayersEventArgs">
            <summary>
            Event arguments for DidFindPlayers.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFindPlayersEventArgs.#ctor(System.Object[])">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidFindPlayersEventArgs.playerIDs">
            <summary>playerIDs</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidReceiveAcceptFromHostedPlayer">
            <summary>
            Called when a player in a hosted match accepts the invitation.
            <br></br>Equivalent to implementing the native <c>matchmakerViewController:didReceiveAcceptFromHostedPlayer:</c> method of <c>GKMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidReceiveAcceptFromHostedPlayerEventArgs">
            <summary>
            Event arguments for DidReceiveAcceptFromHostedPlayer.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidReceiveAcceptFromHostedPlayerEventArgs.#ctor(System.String)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.DidReceiveAcceptFromHostedPlayerEventArgs.playerID">
            <summary>playerID</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.WasCancelled">
            <summary>
            Called when the user cancels the matchmaking request (required)
            <br></br>Equivalent to implementing the native <c>matchmakerViewControllerWasCancelled:</c> method of <c>GKMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_get_defaultInvitationMessage(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_set_defaultInvitationMessage(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_get_hosted(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_set_hosted(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_get_matchmakerDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_set_matchmakerDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_get_matchRequest(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_addPlayersToMatch_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_alloc_initWithInvite_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_alloc_initWithMatchRequest_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_setHostedPlayer_connected_(System.String,System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.UP_GKMatchmakerViewController_setHostedPlayerReady_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController" /> class.
            <br></br>Equivalent to the native <c>[[GKMatchmakerViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.ClassExists">
            <summary>
            Returns whether the native GKMatchmakerViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.defaultInvitationMessage">
            <summary>
            The default invitation message used to initialize an invitation. ( Deprecated in iOS 7.0.  Set the message on the match request instead.)
            <br></br>Equivalent to the native <c>defaultInvitationMessage</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Your game sets this property to change the default invitation text displayed when the local player creates a new invitation. The local player may edit the text before sending the invitation.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.hosted">
            <summary>
            A Boolean value that indicates whether the match is hosted or peer-to-peer.
            <br></br>Equivalent to the native <c>hosted</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of the <c>hosted</c> property determines which methods of the delegate are called when the match is complete. If <c>true</c>, this is a hosted match, and the delegate’s <c>matchmakerViewController:didFindPlayers</c> method is to provide the list of players to your game. If <c>false</c>, this is a peer-to-peer match, and <c>matchmakerViewController:didCreateMatch</c> is called with a <c>GKMatch</c> object. The default value is <c>false</c>.</p>
                <p>Hosted matches require you to provide a server that hosts the participants in the match. For more information on implementing hosted matches, see  “Real-Time Matches” .</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.matchmakerDelegate">
            <summary>
            The delegate for the matchmaker view controller.
            <br></br>Equivalent to the native <c>matchmakerDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A delegate is required to receive feedback when the match is created.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.matchRequest">
            <summary>
            The configuration for the desired match. (read-only)
            <br></br>Equivalent to the native <c>matchRequest</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.AddPlayersToMatch(U3DXT.iOS.Native.GameKit.GKMatch)">
            <summary>
            Adds new players to an existing match instead of starting a new match.
            <br></br>Equivalent to the native <c>addPlayersToMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>An existing match that you want to add players to.</p>
                <b>Discussion</b>
                <p>Your game calls this method prior to presenting the view controller to the player. Calling this method instructs the view controller to add new players to the provided match rather than creating a new match.</p>
                <p>When called, this method sets the delegate on the match to <c>null</c> and updates the view controller’s user interface to display the players already connected to the match.</p>
                <p>
                    <strong>Important:</strong> Only one device connected to the match should call this method.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.#ctor(U3DXT.iOS.Native.GameKit.GKInvite)">
            <summary>
            Creates an instance of the native GKMatchmakerViewController and initializes the object. Initializes a matchmaker view controller to respond to an invitation received from another player.
            <br></br>Equivalent to the native <c>[[GKMatchmakerViewController alloc] initWithInvite:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>invite</em>
                <p>The invitation received from the other player.</p>
                <b>Return Value</b>
                <p>An initialized matchmaker view controller object. If an error occurred, <c>NULL</c> is returned.</p>
                <b>Discussion</b>
                <p>The user is allowed to join the match that the user was invited to, but is not allowed to invite others to the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="invite">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.#ctor(U3DXT.iOS.Native.GameKit.GKMatchRequest)">
            <summary>
            Creates an instance of the native GKMatchmakerViewController and initializes the object. Initializes a matchmaker view controller to create a new match.
            <br></br>Equivalent to the native <c>[[GKMatchmakerViewController alloc] initWithMatchRequest:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>request</em>
                <p>A request containing the characteristics for the desired match.</p>
                <b>Return Value</b>
                <p>An initialized matchmaker view controller object. If an error occurred, <c>NULL</c> is returned.</p>
                <b>Discussion</b>
                <p>Your game uses the <c>initWithMatchRequest:</c> method when it wants the local user to create a new match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="request">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.SetHostedPlayer(System.String,System.Boolean)">
            <summary>
            Updates a player’s status on the view to show that the player has connected or disconnected from your server.
            <br></br>Equivalent to the native <c>setHostedPlayer:connected:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerID</em>
                <p>The identifier string for a player that connected to the external server.</p>
                <em>connected</em>
                <p>A Boolean value that states whether the player is connected to the hosted match.</p>
                <b>Discussion</b>
                <p>When setting up a hosted match, each device should instantiate a matchmaker view controller and display it to the player. Then, when a new player connects to your server, your server should notify all participating devices already connected to your server. Each participating device should then call this method to update that player’s status in the matchmaking interface. Similarly, if a player disconnects from the server, your server should inform each device so that the devices can update their user interface.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="playerID">
            </param>
            <param name="connected">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewController.SetHostedPlayerReady(System.String)">
            <summary>
            Informs the controller that a player has joined a hosted match. ( Deprecated in iOS 5.0.  Use <c>setHostedPlayer:connected:</c> instead.)
            <br></br>Equivalent to the native <c>setHostedPlayerReady:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The identifier string for a player that connected to the external server.</p>
                <b>Discussion</b>
                <p>In a hosted match, when a new player connects to the server, your server should inform all participating devices connected to the match. Each participating device must separately call this method to update its matchmaking user interface.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 5.0.</li>
                </ul>
            </remarks>
            <param name="playerID">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate">
            <summary>
            A class implements the <c>GKMatchmakerViewControllerDelegate</c> protocol to receive notifications from a <c>GKMatchmakerViewController</c> object. The delegate is called if a new match has been successfully created, if the user cancels matchmaking, and if an error occurs. In all three cases, the delegate should dismiss the view controller.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.UP_GKMatchmakerViewControllerDelegate_set__matchmakerViewController_didFailWithError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.UP_GKMatchmakerViewControllerDelegate_set__matchmakerViewController_didFindMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.UP_GKMatchmakerViewControllerDelegate_set__matchmakerViewController_didFindPlayers__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.UP_GKMatchmakerViewControllerDelegate_set__matchmakerViewController_didReceiveAcceptFromHostedPlayer__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.UP_GKMatchmakerViewControllerDelegate_set__matchmakerViewControllerWasCancelled__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.DidFail(U3DXT.iOS.Native.GameKit.GKMatchmakerViewController,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (<b>required</b>) Called when the view controller encounters an unrecoverable error. (required)
            <br></br>Equivalent to the native <c>matchmakerViewController:didFailWithError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that received the error.</p>
                <em>error</em>
                <p>An error object that describes the error.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.DidFindMatch(U3DXT.iOS.Native.GameKit.GKMatchmakerViewController,U3DXT.iOS.Native.GameKit.GKMatch)">
            <summary>
            (optional) Called when a peer-to-peer match is found.
            <br></br>Equivalent to the native <c>matchmakerViewController:didFindMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that performed the matchmaking.</p>
                <em>match</em>
                <p>A completed match.</p>
                <b>Discussion</b>
                <p>This method is called when the view controller’s <c>hosted</c> property is <c>false</c>. Although optional in the protocol, if your game attaches a delegate to the view controller for a peer-to-peer match, the view controller expects your game to provide an implementation of this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– matchmakerViewController:didFindPlayers:</c>
                    </li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.DidFindPlayers(U3DXT.iOS.Native.GameKit.GKMatchmakerViewController,System.Object[])">
            <summary>
            (optional) Called when a hosted match is found.
            <br></br>Equivalent to the native <c>matchmakerViewController:didFindPlayers:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that performed the matchmaking.</p>
                <em>playerIDs</em>
                <p>An array of <c>String</c> objects containing player identifier for the matched players.</p>
                <b>Discussion</b>
                <p>This method is called when the view controller’s <c>hosted</c> property is <c>true</c>. Although optional in the protocol, if your game attaches a delegate to the view controller for a hosted match, the view controller expects your game to provide an implementation of this method.</p>
                <p>The view controller returns the list of players to your game by calling this method. Your game is responsible for connecting these players to your own server and then using that server to relay messages between the players.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– matchmakerViewController:didFindMatch:</c>
                    </li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
            <param name="playerIDs">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.DidReceiveAcceptFromHostedPlayer(U3DXT.iOS.Native.GameKit.GKMatchmakerViewController,System.String)">
            <summary>
            (optional) Called when a player in a hosted match accepts the invitation.
            <br></br>Equivalent to the native <c>matchmakerViewController:didReceiveAcceptFromHostedPlayer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that accepted the invitation..</p>
                <em>playerID</em>
                <p>The identifier of the accepting player.</p>
                <b>Discussion</b>
                <p>After a player accepts an invitation, that player’s device should connect to your server. Once the connection is established, your game should call the view controller’s <c>setHostedPlayer:connected:</c> method to update the player’s connection status.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
            <param name="playerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate.WasCancelled(U3DXT.iOS.Native.GameKit.GKMatchmakerViewController)">
            <summary>
            (<b>required</b>) Called when the user cancels the matchmaking request (required)
            <br></br>Equivalent to the native <c>matchmakerViewControllerWasCancelled:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that received the cancellation.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate._matchmakerViewController_didFailWithError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_matchmakerViewController_didFailWithError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate._matchmakerViewController_didFindMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_matchmakerViewController_didFindMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate._matchmakerViewController_didFindPlayers__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_matchmakerViewController_didFindPlayers__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate._matchmakerViewController_didReceiveAcceptFromHostedPlayer__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_matchmakerViewController_didReceiveAcceptFromHostedPlayer__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKMatchmakerViewControllerDelegate._matchmakerViewControllerWasCancelled__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_matchmakerViewControllerWasCancelled__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKNotificationBanner">
            <summary>
            The <c>GKNotificationBanner</c> class allows your game to display a notification banner that displays text to the player. The behavior of this banner is identical to other banners used by Game Kit.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKNotificationBanner.UP_GKNotificationBanner_showBannerWithTitle_message_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKNotificationBanner.UP_GKNotificationBanner_showBannerWithTitle_message_duration_completionHandler_(System.String,System.String,System.Double,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKNotificationBanner.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKNotificationBanner.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKNotificationBanner.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKNotificationBanner" /> class.
            <br></br>Equivalent to the native <c>[[GKNotificationBanner alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKNotificationBanner.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKNotificationBanner.ClassExists">
            <summary>
            Returns whether the native GKNotificationBanner class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKNotificationBanner.ShowBanner(System.String,System.String,System.Action)">
            <summary>
            Displays a banner to the player.
            <br></br>Equivalent to the native <c>showBannerWithTitle:message:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>title</em>
                <p>The title of the banner.</p>
                <em>message</em>
                <p>A secondary message to be displayed.</p>
                <em>completionHandler</em>
                <p>A block to be called after the score is reported.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="title">
            </param>
            <param name="message">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKNotificationBanner.ShowBanner(System.String,System.String,System.Double,System.Action)">
            <summary>
            Displays a banner to the player for a specified period of time.
            <br></br>Equivalent to the native <c>showBannerWithTitle:message:duration:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>title</em>
                <p>The title of the banner.</p>
                <em>message</em>
                <p>A secondary message to be displayed.</p>
                <em>duration</em>
                <p>The amount of time that the banner should be displayed to the player.</p>
                <em>completionHandler</em>
                <p>A block to be called after the score is reported.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="title">
            </param>
            <param name="message">
            </param>
            <param name="duration">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPeerConnectionState">
            <summary>
            The state of a peer known to the session.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>States are not mutually exclusive. For example, a peer can be available for other peers to discover while it is attempting to connect to another peer.</p>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerConnectionState.Unavailable">
            <summary>
                <p>A peer that is no longer interested in receiving connections.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPeerStateUnavailable</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerConnectionState.Available">
            <summary>
                <p>A peer not connected to the session, but one that the session can connect to.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPeerStateAvailable</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerConnectionState.Connecting">
            <summary>
                <p>A peer attempting to connect to the session.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPeerStateConnecting</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerConnectionState.Connected">
            <summary>
                <p>A peer connected to the session.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPeerStateConnected</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerConnectionState.Disconnected">
            <summary>
                <p>A peer that disconnected from the session.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPeerStateDisconnected</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPeerPickerConnectionType">
            <summary>
            Network connections available to the peer picker dialog.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerPickerConnectionType.Nearby">
            <summary>
                <p>A Bluetooth connection to a device.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPeerPickerConnectionTypeNearby</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerPickerConnectionType.Online">
            <summary>
                <p>An Internet-based connection.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPeerPickerConnectionTypeOnline</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPeerPickerController">
            <summary>
            The <c>GKPeerPickerController</c> class provides a standard user interface to allow one iOS device to discover and connect to another. The result is a configured <c>GKSession</c> object connecting the two devices. To use a <c>GKPeerPickerController</c> object, your application creates the controller, adds a delegate, configures the allowed connection types, and then shows the peer picker. The delegate is called as the user makes selections within the peer picker interface.
            </summary>
            <remarks>
                <p>In iOS 3.0, the peer picker can be configured to select between Bluetooth and Internet connections.</p>
                <p>
                    <strong>Important:</strong> Although users can select Internet connections in the peer picker, <c>GKPeerPickerController</c> has no user interface for configuring them. If your application configures the peer picker to allow Internet connections, your application must also dismiss the peer picker and present its own interface to configure an Internet connection.</p>
                <p>
                </p>
                <p>On iOS 3.0, your application should release the peer picker object after it dismisses the peer picker dialog. On iOS 3.1 or later, your application may release the peer picker after it is shown to the user. If you do this, the peer picker controller is automatically deallocated after the dialog is dismissed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidConnectPeer">
            <summary>
            Tells the delegate that the controller connected a peer to the session.
            <br></br>Equivalent to implementing the native <c>peerPickerController:didConnectPeer:toSession:</c> method of <c>GKPeerPickerControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidConnectPeerEventArgs">
            <summary>
            Event arguments for DidConnectPeer.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidConnectPeerEventArgs.#ctor(System.String,U3DXT.iOS.Native.GameKit.GKSession)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidConnectPeerEventArgs.peerID">
            <summary>peerID</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidConnectPeerEventArgs.session">
            <summary>session</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidSelect">
            <summary>
            Tells the delegate that the user selected a connection type.
            <br></br>Equivalent to implementing the native <c>peerPickerController:didSelectConnectionType:</c> method of <c>GKPeerPickerControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidSelectEventArgs">
            <summary>
            Event arguments for DidSelect.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidSelectEventArgs.#ctor(U3DXT.iOS.Native.GameKit.GKPeerPickerConnectionType)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidSelectEventArgs.type">
            <summary>type</summary>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerController.getSessionHandler">
            <summary>
            Asks the delegate to return a session for the specified connection type.
            <br></br>Equivalent to implementing the native <c>peerPickerController:sessionForConnectionType:</c> method of <c>GKPeerPickerControllerDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKPeerPickerController.DidCancel">
            <summary>
            Tells the delegate that the user canceled the connection attempt.
            <br></br>Equivalent to implementing the native <c>peerPickerControllerDidCancel:</c> method of <c>GKPeerPickerControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.UP_GKPeerPickerController_get_connectionTypesMask(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.UP_GKPeerPickerController_set_connectionTypesMask(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.UP_GKPeerPickerController_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.UP_GKPeerPickerController_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.UP_GKPeerPickerController_get_visible(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.UP_GKPeerPickerController_dismiss(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.UP_GKPeerPickerController_show(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKPeerPickerController" /> class.
            <br></br>Equivalent to the native <c>[[GKPeerPickerController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerController.ClassExists">
            <summary>
            Returns whether the native GKPeerPickerController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerController.connectionTypesMask">
            <summary>
            A mask that determines the types of connections a dialog presents to the user.
            <br></br>Equivalent to the native <c>connectionTypesMask</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Your application configures the connection types it allows before showing the peer picker. If your application allows more than one connection type, the peer picker offers the user a choice of which type of connection to use. The default value for the mask is <c>GKPeerPickerConnectionTypeNearby</c>.</p>
                <p>
                    <strong>Important:</strong> In iOS 3.0, <c>GKPeerPickerConnectionTypeNearby</c> is required to be one of the allowed connection types. An exception is thrown if your application does not include it.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerController.Delegate">
            <summary>
            The delegate of the peer picker controller.
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The delegate must adopt the <c>GKPeerPickerControllerDelegate</c> formal protocol.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerController.visible">
            <summary>
            A Boolean value that indicates whether the picker dialog is visible. (read-only)
            <br></br>Equivalent to the native <c>visible</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.Dismiss">
            <summary>
            Hides the peer picker dialog.
            <br></br>Equivalent to the native <c>dismiss</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The controller’s delegate is responsible for dismissing the peer picker when it is no longer needed.</p>
                <p>On iOS 3.1 or later, the peer picker is retained when it is shown, and autoreleased when it is dismissed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerController.Show">
            <summary>
            Displays the peer picker dialog to the user.
            <br></br>Equivalent to the native <c>show</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>On iOS 3.1 or later, the peer picker is retained when it is shown, and autoreleased when it is dismissed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate">
            <summary>
            The  GKPeerPickerControllerDelegate  protocol is implemented on an object to customize the behavior of a <c>GKPeerPickerController</c> object. The delegate is called by the peer picker to create a session object and to respond as the session is configured by the controller.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.UP_GKPeerPickerControllerDelegate_set__peerPickerController_didConnectPeer_toSession__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.UP_GKPeerPickerControllerDelegate_set__peerPickerController_didSelectConnectionType__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.UP_GKPeerPickerControllerDelegate_set__peerPickerController_sessionForConnectionType__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.UP_GKPeerPickerControllerDelegate_set__peerPickerControllerDidCancel__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.DidConnectPeer(U3DXT.iOS.Native.GameKit.GKPeerPickerController,System.String,U3DXT.iOS.Native.GameKit.GKSession)">
            <summary>
            (optional) Tells the delegate that the controller connected a peer to the session.
            <br></br>Equivalent to the native <c>peerPickerController:didConnectPeer:toSession:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>picker</em>
                <p>The controller that connected the peer.</p>
                <em>peerID</em>
                <p>The identification string for the peer that connected to the session.</p>
                <em>session</em>
                <p>The session that the peer is connected to.</p>
                <b>Discussion</b>
                <p>Once a peer is connected to the session, your application should take ownership of the session, dismiss the peer picker, and then use the session to communicate with the other peer.</p>
                <p>
                    <strong>Important:</strong> Although optional in the protocol, Game Kit expects your application to implement this method.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="picker">
            </param>
            <param name="peerID">
            </param>
            <param name="session">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.DidSelect(U3DXT.iOS.Native.GameKit.GKPeerPickerController,U3DXT.iOS.Native.GameKit.GKPeerPickerConnectionType)">
            <summary>
            (optional) Tells the delegate that the user selected a connection type.
            <br></br>Equivalent to the native <c>peerPickerController:didSelectConnectionType:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>picker</em>
                <p>The controller for the peer picker dialog.</p>
                <em>type</em>
                <p>The type of network connection chosen by the user.</p>
                <b>Discussion</b>
                <p>If the peer picker is configured to allow users to choose between multiple connection types, this method is called when users select the connection type they want to use. Your delegate implements this method if you want to override the behavior for a particular connection type.</p>
                <p>
                    <strong>Important:</strong> In iOS 3.0, the peer picker can configure Bluetooth connections (<c>GKPeerPickerConnectionTypeNearby</c>). If the user chooses an Internet connection (<c>GKPeerPickerConnectionTypeOnline</c>), your delegate should dismiss the dialog and present its own user interface to configure the Internet connection:</p>
                <p>
                </p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>- (void)peerPickerController:(GKPeerPickerController *)picker didSelectConnectionType:(GKPeerPickerConnectionType)type {  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>    if(type == GKPeerPickerConnectionTypeOnline) {  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>        [picker dismiss];  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>        [picker autorelease];  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>// Display your own user interface here.  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>}  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="picker">
            </param>
            <param name="type">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.GetSession(U3DXT.iOS.Native.GameKit.GKPeerPickerController,U3DXT.iOS.Native.GameKit.GKPeerPickerConnectionType)">
            <summary>
            (optional) Asks the delegate to return a session for the specified connection type.
            <br></br>Equivalent to the native <c>peerPickerController:sessionForConnectionType:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>picker</em>
                <p>The controller requesting the session.</p>
                <em>type</em>
                <p>The type of connection the controller wants to configure.</p>
                <b>Discussion</b>
                <p>Your delegate is responsible for providing a <c>GKSession</c> to use to find and connect to other devices. When the peer picker needs a session, it calls this method. Your application can either create a new session or return a previously created session to the peer picker. The session that your application returns to the peer picker must advertise itself as a peer (<c>GKSessionModePeer</c>).</p>
                <p>If your delegate does not implement this method and the user selected a network of type <c>GKPeerPickerConnectionTypeNearby</c>, the peer controller allocates a new session that advertises itself as a peer (<c>GKSessionModePeer</c>) with the default <c>sessionID</c> and <c>displayName</c> parameters.</p>
                <b>Special Considerations</b>
                <p>In iOS 3.0, your delegate receives requests only for networks of type <c>GKPeerPickerConnectionTypeNearby</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="picker">
            </param>
            <param name="type">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate.DidCancel(U3DXT.iOS.Native.GameKit.GKPeerPickerController)">
            <summary>
            (optional) Tells the delegate that the user canceled the connection attempt.
            <br></br>Equivalent to the native <c>peerPickerControllerDidCancel:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>picker</em>
                <p>The controller for the peer picker dialog.</p>
                <b>Discussion</b>
                <p>After this method returns, the controller dismisses the picker interface.</p>
                <p>
                    <strong>Important:</strong> Although optional in the protocol, Game Kit expects your application to implement this method.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="picker">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate._peerPickerController_didConnectPeer_toSession__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_peerPickerController_didConnectPeer_toSession__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate._peerPickerController_didSelectConnectionType__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_peerPickerController_didSelectConnectionType__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate._peerPickerController_sessionForConnectionType__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_peerPickerController_sessionForConnectionType__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPeerPickerControllerDelegate._peerPickerControllerDidCancel__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_peerPickerControllerDidCancel__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPhotoSize">
            <summary>
            The size of a photo loaded by Game Center.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPhotoSize.Normal">
            <summary>
                <p>Load a normal sized photo.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPhotoSizeNormal</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPhotoSize.Small">
            <summary>
                <p>Load a small photo.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPhotoSizeSmall</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPlayer">
            <summary>
                <c>GKPlayer</c> objects provide information about a player on Game Center.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>Every player account on Game Center is permanently assigned a unique <strong>player identifier</strong> string. Your game should use this string to store per-player information or to disambiguate between players. In most cases, Game Kit classes return player identifier strings to your game. For example, in a multiplayer match, the <c>GKMatch</c> object’s <c>playerIDs</c> property contains an array of the player identifiers for all the players connected to the match.</p>
                <p>To load information about a set of players, your game calls the <c>loadPlayersForIdentifiers:withCompletionHandler:</c> method, passing in an array of identifier strings. Your completion handler is called after the player data is downloaded from Game Center. For performance and resource reasons, player objects returned by the <c>loadPlayersForIdentifiers:withCompletionHandler:</c> method do not include player photos. To load the photo associated with a player, call the player object’s <c>loadPhotoForSize:withCompletionHandler:</c> method.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPlayer.GKPlayerDidChangeNotificationName">
            <summary>
            Constant name for the native <c>GKPlayerDidChangeNotificationName</c> notification.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKPlayer.DidChange">
            <summary>
                <b>GKPlayerDidChangeNotificationName</b> Posted when a player object’s data changes. <b>Availability</b><ul><li>Available in iOS 4.1 and later.</li></ul><br></br>Equivalent to adding the event handler as an observer to the native <c>GKPlayerDidChangeNotificationName</c> notification.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKPlayer.AllNotifications">
            <summary>
            Occurs when this object sends any notification.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPlayer.AllInstances">
            <summary>
            Static class for notifications of all instances of the <c>GKPlayer</c> class.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKPlayer.AllInstances.DidChange">
            <summary>
                <b>GKPlayerDidChangeNotificationName</b> Posted when a player object’s data changes. <b>Availability</b><ul><li>Available in iOS 4.1 and later.</li></ul><br></br>Equivalent to adding the event handler as an observer to the native <c>GKPlayerDidChangeNotificationName</c> notification.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.UP_GKPlayer_loadPlayersForIdentifiers_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.UP_GKPlayer_get_alias(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.UP_GKPlayer_get_displayName(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.UP_GKPlayer_get_isFriend(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.UP_GKPlayer_get_playerID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.UP_GKPlayer_loadPhotoForSize_withCompletionHandler_(System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKPlayer" /> class.
            <br></br>Equivalent to the native <c>[[GKPlayer alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPlayer.ClassExists">
            <summary>
            Returns whether the native GKPlayer class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.LoadPlayers(System.Object[],System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads information from Game Center about a list of players.
            <br></br>Equivalent to the native <c>loadPlayersForIdentifiers:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifiers</em>
                <p>An array of <c>String</c> objects, each a unique identifier for a Game Center player.</p>
                <em>completionHandler</em>
                <p>A block to be called when the player data is retrieved from Game Center.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>players</em>
                <p>An array of <c>GKPlayer</c> objects, one per identifier. If an error occurred, this may be non-<c>null</c>. In that case, the array holds whatever data Game Kit was able to retrieve for the requested players.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, this is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="identifiers">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPlayer.alias">
            <summary>
            A string chosen by the player to identify themselves to other players. (read-only)
            <br></br>Equivalent to the native <c>alias</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A player’s alias is used when a player is not a friend of the local player. Typically, you never display the alias string directly in your user interface. Instead use the <c>displayName</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPlayer.displayName">
            <summary>
            A string to display for the player. (read-only)
            <br></br>Equivalent to the native <c>displayName</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The display name for a player depends on whether the player is a friend of the local player authenticated on the device. If the player is a friend of the local player, then the display name is the actual name of the player. If the player is not a friend, then the display name is the player’s alias.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPlayer.isFriend">
            <summary>
            A Boolean value that indicates whether this player is a friend of the local player. (read-only)
            <br></br>Equivalent to the native <c>isFriend</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Players use the Game Center app to declare other players as friends.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKPlayer.playerID">
            <summary>
            A string assigned by Game Center to uniquely identify a player. (read-only)
            <br></br>Equivalent to the native <c>playerID</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The player identifier should never be displayed to the player. Use it only as a way to identify a particular player.</p>
                <p>Do not make assumptions about the contents of the player identifier string.  Its format and length are subject to change.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKPlayer.LoadPhoto(U3DXT.iOS.Native.GameKit.GKPhotoSize,System.Action{U3DXT.iOS.Native.UIKit.UIImage,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads a photo of this player from Game Center.
            <br></br>Equivalent to the native <c>loadPhotoForSize:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>size</em>
                <p>A constant that determines the size of the photo to load.</p>
                <em>completionHandler</em>
                <p>A block to be called when the player data is retrieved from Game Center.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>photo</em>
                <p>An image for the player. If an error occurred, this may still be non-<c>null</c>. In this case, the image reflects an image cached by Game Kit on the device.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation completed successfully, this is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <p>
                    <strong>Important:</strong> The size of the image returned to your game is dependent on both the constant you provided in the initial request and the user interface idiom of the device your game is running on.</p>
                <p>
                </p>
                <p>
                    <strong>Note:</strong> On OS X, the returned image is an <c><!--a target="_self" -->NSImage<!--/a--></c> object.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="size">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKPlayerConnectionState">
            <summary>
            The state of another player in the match.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPlayerConnectionState.Unknown">
            <summary>
                <p>The player is in an indeterminate state and cannot receive data.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPlayerStateUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPlayerConnectionState.Connected">
            <summary>
                <p>The player is connected to the match and can receive data.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPlayerStateConnected</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKPlayerConnectionState.Disconnected">
            <summary>
                <p>The player is disconnected from the match and cannot receive data.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKPlayerStateDisconnected</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKScore">
            <summary>
            A <c>GKScore</c> class holds information for a score that was earned by the player. Your game creates <c>GKScore</c> objects to post scores to a leaderboard on Game Center. When your game retrieves score information from a leaderboard, those scores are returned as <c>GKScore</c> objects.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication, see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To report a score to Game Center, your game allocates and initializes a new object, sets the <c>value</c> property to the score the player earned, and then calls the <c>reportScoreWithCompletionHandler:</c> method. The mechanism your game uses to calculate scores is up to you to design; scores are only compared within your game.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_reportScores_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_reportScores_withEligibleChallenges_withCompletionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_category(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_set_category(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_context(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_set_context(System.String,System.UInt64)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_date(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_formattedValue(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_leaderboardIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_set_leaderboardIdentifier(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_playerID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_rank(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_shouldSetDefaultLeaderboard(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_set_shouldSetDefaultLeaderboard(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_get_value(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_set_value(System.String,System.Int64)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_challengeComposeControllerWithPlayers_message_completionHandler_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_alloc_initWithCategory_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_alloc_initWithLeaderboardIdentifier_forPlayer_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_issueChallengeToPlayers_message_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.UP_GKScore_reportScoreWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKScore" /> class.
            <br></br>Equivalent to the native <c>[[GKScore alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.ClassExists">
            <summary>
            Returns whether the native GKScore class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.ReportScores(System.Object[],System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Reports a list of scores to Game Center
            <br></br>Equivalent to the native <c>reportScores:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scores</em>
                <p>An array of <c>GKScore</c> objects that contains the scores to report to Game Center.</p>
                <em>completionHandler</em>
                <p>A block to be called after the score is reported.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this parameter holds an error object that describes the problem. If the score was successfully reported, this parameter’s value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>Use this class method whenever you need to submit multiple scores at the same time. Calling this method reports each of the scores, exactly as if you called the <c>reportScoreWithCompletionHandler:</c> method on each score object in the array. However, the entire operation can typically be processed more efficiently using this method, and the completion handler is only called once. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="scores">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.ReportScores(System.Object[],System.Object[],System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Submit a list of scores and all eligible challenges.
            <br></br>Equivalent to the native <c>reportScores:withEligibleChallenges:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>scores</em>
                <p>An array of <c>GKScore</c> objects that contains all of the scores to be reported.</p>
                <em>challenges</em>
                <p>An array of <c>GKChallenge</c> objects that represents all challenges associated with the reported scores. If an error occurred, this parameter may be non-<c>null</c>, in which case the array holds whatever challenge information Game Kit was able to fetch.</p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="scores">
            </param>
            <param name="challenges">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.category">
            <summary>
            The leaderboard that this score belongs to. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>category</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The category string must match an identifier for a leaderboard you created on iTunes Connect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.context">
            <summary>
            An integer value used by your game.
            <br></br>Equivalent to the native <c>context</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>context</c> property is stored and returned to your game, but is otherwise ignored by Game Center. It allows your game to associate an arbitrary 64-bit unsigned integer value with the score data reported to Game Center. You decide how this integer value is interpreted by your game. For example, you might use the <c>context</c> property to store flags that provide game-specific details about a player’s score, or you might use the context as a key to other data stored on the device or on your own server. The context is most useful when your game displays a custom leaderboard user interface.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.date">
            <summary>
            The date and time when the score was earned. (read-only)
            <br></br>Equivalent to the native <c>date</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When you initialize the new score object, the <c>date</c> property is automatically set to the current date and time.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.formattedValue">
            <summary>
            Returns the player’s score as a localized string. (read-only)
            <br></br>Equivalent to the native <c>formattedValue</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is invalid on a newly initialized score object. On a score returned from Game Kit, it contains a formatted string based on the player’s score. You determine how a score is formatted when you define the leaderboard on iTunes Connect.</p>
                <p>Never convert the <c>value</c> property into a string directly; always use this method to receive the formatted string.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property value</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.leaderboardIdentifier">
            <summary>
            The identifier for the leaderboard.
            <br></br>Equivalent to the native <c>leaderboardIdentifier</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.playerID">
            <summary>
            The player identifier for the player that earned the score. (read-only)
            <br></br>Equivalent to the native <c>playerID</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When you initialize a new score object, the <c>playerID</c> property is set to the identifier for the local player. If the score object was returned to your game by loading scores from Game Center, the <c>playerID</c> property identifies the player who recorded that score.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.rank">
            <summary>
            The position of the score in the results of a leaderboard search. (read-only)
            <br></br>Equivalent to the native <c>rank</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is only valid on score objects returned from Game Center. The <c>rank</c> property represents the position of the score in the returned results, with <c>1</c> being the best score, <c>2</c> being the second best, and so on.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.shouldSetDefaultLeaderboard">
            <summary>
            A Boolean value that indicates whether this score should also update the default leaderboard.
            <br></br>Equivalent to the native <c>shouldSetDefaultLeaderboard</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>true</c>, when the score is reported to Game Center, Game Center also updates the local player’s default leaderboard to match the value stored in the <c>category</c> property of the score object. This matches the behavior of the <c>GKLeaderboard</c> class’s <c>setDefaultLeaderboard:withCompletionHandler:</c> class method. If the value of this property is <c>false</c>, the default leaderboard is not changed by reporting the score. The default value of this property is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScore.value">
            <summary>
            The score earned by the player.
            <br></br>Equivalent to the native <c>value</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You can use any algorithm you want to calculate scores in your game. Your game must set the <c>value</c> property before reporting a score, otherwise an error is returned.</p>
                <p>The value provided by a score object is interpreted by Game Center only when formatted for display. You determine how your scores are formatted when you define the leaderboard on iTunes Connect. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property formattedValue</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.ChallengeComposeController(System.Object[],System.String,System.Action{U3DXT.iOS.Native.UIKit.UIViewController,System.Boolean,System.Object[]})">
            <summary>
            Provides a challenge compose view controller with pre-selected player identifiers and a preformatted, player-editable message.
            <br></br>Equivalent to the native <c>challengeComposeControllerWithPlayers:message:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerIDs</em>
                <p>An array of <c>String</c> objects that contains the player identifiers that the challenge is to be sent to.</p>
                <em>message</em>
                <p>The preformatted, player-editable message that is being sent to other players.</p>
                <em>completionHandler</em>
                <p>A block to be called after the view controller has been displayed. Contains the reason the handler was called and all player identifiers that the challenge was sent to.</p>
                <b>Return Value</b>
                <p>A <c>UIVewController</c> view containing the player identifiers and a player-editable message.</p>
                <b>Discussion</b>
                <p>The view controller returned is presented modally from the top view controller. After the view controller is displayed and the player sends or cancels the challenge, the completion handler block is called.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="playerIDs">
            </param>
            <param name="message">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.#ctor(System.String)">
            <summary>
            Creates an instance of the native GKScore and initializes the object. Returns an initialized score object. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>[[GKScore alloc] initWithCategory:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>category</em>
                <p>An identifier for a specific leaderboard you’ve configured on iTunes Connect. Must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized score object, or <c>null</c> if an error occurred.</p>
                <b>Discussion</b>
                <p>Your game explicitly allocates and initializes a score object when it needs to report a new score to Game Center.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="category">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the native GKScore and initializes the object. Returns an initialized score object for the specified leaderboard and player.
            <br></br>Equivalent to the native <c>[[GKScore alloc] initWithLeaderboardIdentifier:forPlayer:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifier</em>
                <p>Identifies the leaderboard that the score is being sent to.</p>
                <em>playerID</em>
                <p>The identifier of the player who’s score is being initialized.</p>
                <b>Return Value</b>
                <p>An initialized score object, or <c>null</c> if an error occurred.</p>
                <b>Discussion</b>
                <p>Your game explicitly allocates and initializes a score object using the designated player and current date when it needs to report a new score to Game Center.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
            <param name="playerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.IssueChallengeToPlayers(System.Object[],System.String)">
            <summary>
            Issues a score challenge to a set of players. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>issueChallengeToPlayers:message:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playerIDs</em>
                <p>An array of <c>String</c> objects that contains the player identifiers for the players to challenge.</p>
                <em>message</em>
                <p>A text message to display to the players.</p>
                <b>Discussion</b>
                <p>Your game should only issue a challenge request in direct response to a player action. That is, your game should provide a user interface that allows the player to choose to issue a challenge and choose which friends will receive the challenge, and only issue a challenge when the player wishes to do so.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="playerIDs">
            </param>
            <param name="message">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScore.ReportScore(System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Reports a score to Game Center. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>reportScoreWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the score is reported.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this parameter holds an error object that describes the problem. If the score was successfully reported, this parameter’s value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>The <c>value</c> property must be set before calling this method.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKScoreChallenge">
            <summary>
            A <c>GKScoreChallenge</c> object represents a challenge based on a score in a leaderboard. To complete the challenge, the player must score an equal or better score than the score used to create the challenge. When a player beats a score challenge, a new score challenge is automatically issued to the player that issued the challenge unless there is already a pending score challenge that requires a better score.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScoreChallenge.UP_GKScoreChallenge_get_score(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScoreChallenge.UP_GKScoreChallenge_loadReceivedChallengesWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScoreChallenge.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScoreChallenge.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScoreChallenge.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKScoreChallenge" /> class.
            <br></br>Equivalent to the native <c>[[GKScoreChallenge alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScoreChallenge.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScoreChallenge.ClassExists">
            <summary>
            Returns whether the native GKScoreChallenge class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKScoreChallenge.LoadReceivedChallenges(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the list of outstanding challenges.
            <br></br>Equivalent to the native <c>loadReceivedChallengesWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called when the download is completed.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>challenges</em>
                <p>An array of <c>GKChallenge</c> objects that represents all challenges made to the local player. If an error occurred, this parameter may be non-<c>null</c>, in which case the array holds whatever challenge information Game Kit was able to fetch.</p>
                <em>error</em>
                <p>If an error occurred, this object describes the error. If the operation completed successfully, this value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKScoreChallenge.score">
            <summary>
            The score to beat. (read-only)
            <br></br>Equivalent to the native <c>score</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSendDataMode">
            <summary>
            The mechanism used to transmit data to other peers.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSendDataMode.Unreliable">
            <summary>
                <p>The data is sent once and is not sent again if a transmission error occurred.</p>
                <p>Data transmitted unreliably may be received out of order by recipients. Use this for small packets of data that must arrive quickly to be useful to the recipient.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSendDataUnreliable</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSendDataMode.Reliable">
            <summary>
                <p>The data is sent continuously until it is successfully received by the intended recipients or the connection times out.</p>
                <p>Reliable transmissions are delivered in the order they were sent. Use this when you need to guarantee delivery.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSendDataReliable</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSession">
            <summary>
            A <c>GKSession</c> object provides the ability to discover and connect to nearby iOS devices using Bluetooth or Wi-fi.
            </summary>
            <remarks>
                <p>Sessions primarily work with <strong>peers</strong>. A peer is any iOS device made visible by creating and configuring a <c>GKSession</c> object. Each peer is identified by a unique identifier, called a peer id (<c>peerID</c>) string. Your application can use a <c>peerID</c> string to obtain a user-readable name for a remote peer and to attempt to connect to that peer. Similarly, your session’s peer ID is visible to other nearby peers. After a connection is established, your application uses the remote peer’s ID to address data packets that it wants to send.</p>
                <p>Peers discover other peers by using a unique string to identify the service they implement, called a session ID (<c>sessionID</c>). Sessions can be configured to broadcast a session ID (as a <strong>server</strong>), to search for other peers advertising with that session ID (as a <strong>client</strong>), or to act as both a server and a client simultaneously (as a <strong>peer</strong>.</p>
                <p>Your application controls the behavior of a session through a delegate that implements the <c>GKSessionDelegate</c> protocol. The delegate is called when remote peers are discovered, when those peers attempt to connect to the session, and when the state of a remote peer changes. Your application also provides a data handler to the session so that the session can forward data it receives from remote peers. The data handler can be a separate object or the same object as the delegate.</p>
                <p>When Bluetooth is turned on, Wi-Fi download speeds drastically decrease while the device is searching for other Bluetooth enabled devices. After the Bluetooth discovery time has completed, Wi-Fi speeds return to normal.</p>
                <p>
                    <c>GKSession</c> methods are thread-safe and may be called from any thread. However, the session always calls its delegate on the main thread.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSession.ErrorDomain">
            <summary>
                <p>An error occurred in <c>GKSession</c>.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionErrorDomain</c> constant.
            </summary>
            <remarks>
            The <c>GKSession</c> error domain.
            <p></p><p></p>This is a constant for "The Session Error Domain".
            </remarks>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKSession.ConnectionWithPeerFailed">
            <summary>
            Received by the delegate when an attempt to connect to another peer failed. (required)
            <br></br>Equivalent to implementing the native <c>session:connectionWithPeerFailed:withError:</c> method of <c>GKSessionDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSession.ConnectionWithPeerFailedEventArgs">
            <summary>
            Event arguments for ConnectionWithPeerFailed.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.ConnectionWithPeerFailedEventArgs.#ctor(System.String,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSession.ConnectionWithPeerFailedEventArgs.peerID">
            <summary>peerID</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSession.ConnectionWithPeerFailedEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKSession.DidFail">
            <summary>
            Sent to the delegate when a serious error has occurred in the session. (required)
            <br></br>Equivalent to implementing the native <c>session:didFailWithError:</c> method of <c>GKSessionDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSession.DidFailEventArgs">
            <summary>
            Event arguments for DidFail.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.DidFailEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSession.DidFailEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKSession.DidReceiveConnectionRequestFromPeer">
            <summary>
            Received by the delegate when a remote peer wants to create a connection to the session. (required)
            <br></br>Equivalent to implementing the native <c>session:didReceiveConnectionRequestFromPeer:</c> method of <c>GKSessionDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSession.DidReceiveConnectionRequestFromPeerEventArgs">
            <summary>
            Event arguments for DidReceiveConnectionRequestFromPeer.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.DidReceiveConnectionRequestFromPeerEventArgs.#ctor(System.String)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSession.DidReceiveConnectionRequestFromPeerEventArgs.peerID">
            <summary>peerID</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKSession.PeerDidChangeState">
            <summary>
            Received by the delegate when a peer changes state. (required)
            <br></br>Equivalent to implementing the native <c>session:peer:didChangeState:</c> method of <c>GKSessionDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSession.PeerDidChangeStateEventArgs">
            <summary>
            Event arguments for PeerDidChangeState.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.PeerDidChangeStateEventArgs.#ctor(System.String,U3DXT.iOS.Native.GameKit.GKPeerConnectionState)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSession.PeerDidChangeStateEventArgs.peerID">
            <summary>peerID</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSession.PeerDidChangeStateEventArgs.state">
            <summary>state</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_get_available(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_set_available(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_get_disconnectTimeout(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_set_disconnectTimeout(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_get_displayName(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_get_peerID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_get_sessionID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_get_sessionMode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_acceptConnectionFromPeer_error_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_cancelConnectToPeer_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_connectToPeer_withTimeout_(System.String,System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_denyConnectionFromPeer_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_disconnectFromAllPeers(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_disconnectPeerFromAllPeers_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_displayNameForPeer_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_alloc_initWithSessionID_displayName_sessionMode_(System.String,System.String,System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_peersWithConnectionState_(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_sendData_toPeers_withDataMode_error_(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_sendDataToAllPeers_withDataMode_error_(System.String,System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.UP_GKSession_setDataReceiveHandler_withContext_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKSession" /> class.
            <br></br>Equivalent to the native <c>[[GKSession alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSession.ClassExists">
            <summary>
            Returns whether the native GKSession class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSession.available">
            <summary>
            A Boolean value that determines whether or not the session wants to connect to new peers.
            <br></br>Equivalent to the native <c>available</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When <c>available</c> is <c>true</c>, the session is visible to other peers based on its <c>sessionMode</c> property. When <c>available</c> is set to <c>false</c>, it remains connected to peers, but is no longer visible to nonconnected peers. The default is <c>false</c>.</p>
                <p>Typically, your application configures the session object with a delegate and data receiver, and then sets <c>available</c> to <c>true</c>. When the delegate finishes connecting to peers, it should set the session’s <c>available</c> property to <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSession.Delegate">
            <summary>
            The delegate of the session object.
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A session’s delegate is responsible for observing changes to other peers running with the same session ID. Your application must set a delegate before making your session known to other peers.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>GKSessionDelegate</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSession.disconnectTimeout">
            <summary>
            A time interval that expresses how long the session waits before it disconnects a nonresponsive peer.
            <br></br>Equivalent to the native <c>disconnectTimeout</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The timeout is the waiting period before disconnecting a peer from the session. If a peer is disconnected, the delegate’s <c>session:peer:didChangeState:</c> method is called.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSession.displayName">
            <summary>
            The name of the user. (read-only)
            <br></br>Equivalent to the native <c>displayName</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The display name is transmitted to visible peers so that they can present a human-readable name for your session.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– displayNameForPeer:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSession.peerID">
            <summary>
            A string that identifies your session to other peers. (read-only)
            <br></br>Equivalent to the native <c>peerID</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSession.sessionID">
            <summary>
            A string used to filter the list of peers who are allowed to see your session. (read-only)
            <br></br>Equivalent to the native <c>sessionID</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The session ID is used by sessions configured as servers to advertise itself to other peers and by sessions configured as clients to search for compatible servers. The session ID should be the short name of an approved Bonjour service type.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSession.sessionMode">
            <summary>
            The mode the session uses to find other peers. (read-only)
            <br></br>Equivalent to the native <c>sessionMode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The session mode changes the behavior of the session when <c>available</c> is set to <c>true</c>.</p>
                <ul class="ul">
                    <li class="li">
                        <p>A <c>GKSessionModeServer</c> session advertises itself to local devices using its session ID.</p>
                    </li>
                    <li class="li">
                        <p>A <c>GKSessionModeClient</c> session searches for local devices advertising the same session ID. As it discovers available and compatible peers, it calls the delegate’s  <c>session:peer:didChangeState:</c> method.</p>
                    </li>
                    <li class="li">
                        <p>A <c>GKSessionModePeer</c> session both advertises as a server and searches as a client.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property available</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.AcceptConnectionFromPeer(System.String,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Called by the delegate to accept a connection request received from a remote peer.
            <br></br>Equivalent to the native <c>acceptConnectionFromPeer:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peerID</em>
                <p>The string identifying the peer that initiated the connection to the session.</p>
                <em>error</em>
                <p>If an error occurred when connecting the peer, upon return contains an <c>NSError</c> object that explains the problem.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if a connection was established to the remote peer; <c>false</c> if an error occurred.</p>
                <b>Discussion</b>
                <p>When your session acts as a server, client peers can discover your session and attempt to connect to it. When a client attempts to connect to the session, the delegate’s <c>session:didReceiveConnectionRequestFromPeer:</c> method is called to decide whether the peer should be connected. Your application calls this method to accept the request, or <c>denyConnectionFromPeer:</c> to reject it.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– denyConnectionFromPeer:</c>
                    </li>
                </ul>
            </remarks>
            <param name="peerID">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.CancelConnectToPeer(System.String)">
            <summary>
            Cancels a pending request to connect to another iOS device.
            <br></br>Equivalent to the native <c>cancelConnectToPeer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peerID</em>
                <p>The string identifying the peer you previously requested to connect to.</p>
                <b>Discussion</b>
                <p>Your application previously called <c>connectToPeer:withTimeout:</c> to create a connection to another iOS device. When your application cancels the connection attempt, both delegates’ <c>session:connectionWithPeerFailed:withError:</c> methods are called.</p>
                <p>If your application already connected to the peer, your application should call <c>disconnectFromAllPeers</c> instead.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– connectToPeer:withTimeout:</c>
                    </li>
                </ul>
            </remarks>
            <param name="peerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.ConnectToPeer(System.String,System.Double)">
            <summary>
            Creates a connection to another iOS device.
            <br></br>Equivalent to the native <c>connectToPeer:withTimeout:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peerID</em>
                <p>The string that identifies the peer to connect to.</p>
                <em>timeout</em>
                <p>The amount of time to wait before canceling the connection attempt.</p>
                <b>Discussion</b>
                <p>When your application is acting as a client, it calls this method to connect to an available peer it discovered. When your application calls this method, a request is transmitted to the remote peer, who chooses whether to accept or reject the connection request.</p>
                <p>If the connection to the remote peer is successful, the delegate’s <c>session:peer:didChangeState:</c> method is called for each peer it successfully connected to. If the connection fails or your application cancels the connection attempt, the session calls the delegate’s <c>session:connectionWithPeerFailed:withError:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– cancelConnectToPeer:</c>
                    </li>
                </ul>
            </remarks>
            <param name="peerID">
            </param>
            <param name="timeout">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.DenyConnectionFromPeer(System.String)">
            <summary>
            Called by the delegate to reject a connection request received from a remote peer.
            <br></br>Equivalent to the native <c>denyConnectionFromPeer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peerID</em>
                <p>The string identifying the peer that initiated the connection to the session.</p>
                <b>Discussion</b>
                <p>When your session acts as a server, client peers can discover your session and attempt to connect to it. When a client attempts to connect to the session, the delegate’s <c>session:didReceiveConnectionRequestFromPeer:</c> method is called to decide whether the peer should be connected. Your application calls this method to reject the request or <c>acceptConnectionFromPeer:error:</c> to accept it.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– acceptConnectionFromPeer:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="peerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.DisconnectFromAllPeers">
            <summary>
            Disconnects the session from all connected peers.
            <br></br>Equivalent to the native <c>disconnectFromAllPeers</c> method.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.DisconnectPeerFromAllPeers(System.String)">
            <summary>
            Disconnects a connected peer from all peers connected to the session.
            <br></br>Equivalent to the native <c>disconnectPeerFromAllPeers:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peerID</em>
                <p>A string identifying the peer to disconnect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="peerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.DisplayNameForPeer(System.String)">
            <summary>
            Returns a user-readable name for a peer.
            <br></br>Equivalent to the native <c>displayNameForPeer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peerID</em>
                <p>A string that uniquely identifies a peer.</p>
                <b>Return Value</b>
                <p>The name for the peer, or <c>null</c> if <em>peerID</em> is not associated with a visible peer.</p>
                <b>Discussion</b>
                <p>The display name is used to populate your user interface with the names of other peers visible to the session.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property displayName</c></li>
                </ul>
            </remarks>
            <param name="peerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.#ctor(System.String,System.String,U3DXT.iOS.Native.GameKit.GKSessionMode)">
            <summary>
            Creates an instance of the native GKSession and initializes the object. Initializes and returns a newly allocated session.
            <br></br>Equivalent to the native <c>[[GKSession alloc] initWithSessionID:displayName:sessionMode:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>sessionID</em>
                <p>A unique string that identifies your application. Your <em>sessionID</em> should be the short name of an approved Bonjour service type. If <c>null</c>, the session uses the application’s bundle identifier to create a <em>sessionID</em> string.</p>
                <em>name</em>
                <p>A string identifying the user to display to other peers. If <c>null</c>, the session uses the device name.</p>
                <em>mode</em>
                <p>The mode the session should run in. See  “Session Modes”  for possible values.</p>
                <b>Return Value</b>
                <p>An initialized session object, or <c>null</c> if an error occurred.</p>
                <b>Discussion</b>
                <p>Only sessions running with the same <em>sessionID</em> are visible to your session.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="sessionID">
            </param>
            <param name="name">
            </param>
            <param name="mode">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.Peers(U3DXT.iOS.Native.GameKit.GKPeerConnectionState)">
            <summary>
            Returns a list of peers in the specified connection state.
            <br></br>Equivalent to the native <c>peersWithConnectionState:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>state</em>
                <p>The connection state to search for. See  “Connection States”  for possible values.</p>
                <b>Return Value</b>
                <p>An array of <c>String</c> objects with a <c>peerID</c> string for each peer visible to the session that is currently in the specified connection state. If there are no peers in the specified connection state, this method returns <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="state">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.SendData(U3DXT.iOS.Native.Foundation.NSData,System.Object[],U3DXT.iOS.Native.GameKit.GKSendDataMode,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Transmits a collection of bytes to a list of connected peers.
            <br></br>Equivalent to the native <c>sendData:toPeers:withDataMode:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>data</em>
                <p>The bytes to be sent.</p>
                <em>peers</em>
                <p>An array of <c>String</c> objects identifying the peers that should receive the data.</p>
                <em>mode</em>
                <p>The mechanism used to send the data.</p>
                <em>error</em>
                <p>If the data could not be queued, an <c>NSError</c> object describing the error.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the data was successfully queued for transmission; <c>false</c> if the session object was unable to queue the data.</p>
                <b>Discussion</b>
                <p>The session queues the data and transmits it in the order it was queued. Data transmitted unreliably may be received out of order by the other peers.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– sendDataToAllPeers:withDataMode:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="data">
            </param>
            <param name="peers">
            </param>
            <param name="mode">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.SendDataToAllPeers(U3DXT.iOS.Native.Foundation.NSData,U3DXT.iOS.Native.GameKit.GKSendDataMode,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Transmits a collection of bytes to all connected peers.
            <br></br>Equivalent to the native <c>sendDataToAllPeers:withDataMode:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>data</em>
                <p>The bytes to be sent.</p>
                <em>mode</em>
                <p>The mechanism used to send the data.</p>
                <em>error</em>
                <p>If the data could not be queued, an <c>NSError</c> object describing the error.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the data was successfully queued for transmission; <c>false</c> if the session object was unable to queue the data.</p>
                <b>Discussion</b>
                <p>The session queues the data and transmits it when the network is free.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– sendData:toPeers:withDataMode:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="data">
            </param>
            <param name="mode">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSession.SetDataReceiveHandler(U3DXT.iOS.Native.GameKit.GKSessionDataDelegate,System.String)">
            <summary>
            Sets the object that handles data received from other peers connected to the session.
            <br></br>Equivalent to the native <c>setDataReceiveHandler:withContext:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>handler</em>
                <p>The object you want the session to call when it receives data from other peers. </p>
                <em>context</em>
                <p>Arbitrary data to be passed to each invocation of the handler.</p>
                <b>Discussion</b>
                <p>The handler must implement a method with the following signature:</p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>- (void) receiveData:(NSData *)<em>data</em> fromPeer:(NSString *)<em>peer</em> inSession: (GKSession *)<em>session</em> context:(void *)<em>context</em>;  </pre>
                        </td>
                    </tr>
                </table>
                <p>where <em>data</em> contains the bytes received from a remote peer, <em>peer</em> is a string that identifies the peer, <em>session</em> is the session that received the data, and <em>context</em> is the same context that was passed into the original call to <c>setDataReceiveHandler:withContext:</c>.</p>
                <p>
                    <strong>Important:</strong> Data received from other peers should be treated as <em>untrusted</em> data. Be sure to validate the data you receive from the session and write your code carefully to avoid security vulnerabilities. See the <em>Secure Coding Guide</em> for more information.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="handler">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSessionDataDelegate">
            <summary>
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDataDelegate.UP_GKSessionDataDelegate_set__receiveData_fromPeer_inSession_context__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDataDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDataDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDataDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDataDelegate.Receive(U3DXT.iOS.Native.Foundation.NSData,System.String,U3DXT.iOS.Native.GameKit.GKSession,System.String)">
            <summary>
            (<b>required</b>)
            <br></br>Equivalent to the native <c>receiveData:fromPeer:inSession:context:</c> method.
            </summary>
            <remarks>
            </remarks>
            <param name="data">
            </param>
            <param name="peer">
            </param>
            <param name="session">
            </param>
            <param name="context">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSessionDataDelegate._receiveData_fromPeer_inSession_context__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_receiveData_fromPeer_inSession_context__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSessionDelegate">
            <summary>
            An object implements the <c>GKSessionDelegate</c> protocol to control the behavior of a <c>GKSession</c> object. The delegate is called when other visible peers change their state relative to the session. It is also called to determine whether another peer is allowed to connect to the session.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.UP_GKSessionDelegate_set__session_connectionWithPeerFailed_withError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.UP_GKSessionDelegate_set__session_didFailWithError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.UP_GKSessionDelegate_set__session_didReceiveConnectionRequestFromPeer__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.UP_GKSessionDelegate_set__session_peer_didChangeState__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.ConnectionWithPeerFailed(U3DXT.iOS.Native.GameKit.GKSession,System.String,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Received by the delegate when an attempt to connect to another peer failed. (required)
            <br></br>Equivalent to the native <c>session:connectionWithPeerFailed:withError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>session</em>
                <p>The session that received the message.</p>
                <em>peerID</em>
                <p>A string that uniquely identifies the peer.</p>
                <em>error</em>
                <p>The error that occurred.</p>
                <b>Discussion</b>
                <p>The <em>error</em> parameter can be used to inform the user of why the connection failed. </p>
                <p>
                    <strong>Important:</strong> If a <c>GKPeerPickerController</c> object is being used to configure the session, the controller handles this message automatically. Your delegate can ignore it if the peer picker dialog is in use.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="session">
            </param>
            <param name="peerID">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.DidFail(U3DXT.iOS.Native.GameKit.GKSession,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Sent to the delegate when a serious error has occurred in the session. (required)
            <br></br>Equivalent to the native <c>session:didFailWithError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>session</em>
                <p>The session that failed.</p>
                <em>error</em>
                <p>The error that occurred.</p>
                <b>Discussion</b>
                <p>This method is called when a serious internal error occurred in the session. Your application should disconnect the session from other peers and release the session.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="session">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.DidReceiveConnectionRequestFromPeer(U3DXT.iOS.Native.GameKit.GKSession,System.String)">
            <summary>
            (optional) Received by the delegate when a remote peer wants to create a connection to the session. (required)
            <br></br>Equivalent to the native <c>session:didReceiveConnectionRequestFromPeer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>session</em>
                <p>The session that received the request.</p>
                <em>peerID</em>
                <p>A string that uniquely identifies the peer.</p>
                <b>Discussion</b>
                <p>The delegate should call the session’s <c>acceptConnectionFromPeer:error:</c> method if it wants to accept the connection or the <c>denyConnectionFromPeer:</c> method if it wants to refuse the connection.</p>
                <p>
                    <strong>Important:</strong> If a <c>GKPeerPickerController</c> object is being used to configure the session, the controller handles this message automatically. Your delegate can ignore it if the peer picker dialog is in use. If your application is not using a <c>GKPeerPickerController</c> object to configure the session, your delegate must implement this method as described above.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="session">
            </param>
            <param name="peerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKSessionDelegate.PeerDidChangeState(U3DXT.iOS.Native.GameKit.GKSession,System.String,U3DXT.iOS.Native.GameKit.GKPeerConnectionState)">
            <summary>
            (optional) Received by the delegate when a peer changes state. (required)
            <br></br>Equivalent to the native <c>session:peer:didChangeState:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>session</em>
                <p>The session that received the update.</p>
                <em>peerID</em>
                <p>A string that identifies the peer.</p>
                <em>state</em>
                <p>The state the peer changed to.</p>
                <b>Discussion</b>
                <p>A session calls this method whenever a visible peer changes it state relative to itself. The action your delegate should take depends on what state the peer moved to.</p>
                <ul class="ul">
                    <li class="li">
                        <p>When a peer first becomes visible to the session, it appears with a state of <c><!--a target="_self" -->GKPeerStateAvailable<!--/a--></c>.  Your application should show this peer in its user interface. If the peer changes its state to <c><!--a target="_self" -->GKPeerStateUnavailable<!--/a--></c>, it no longer accepts connection requests and your application should remove it from the user interface.</p>
                    </li>
                    <li class="li">
                        <p>The delegate should ignore <c><!--a target="_self" -->GKPeerStateConnecting<!--/a--></c> changes and implement the <c>session:didReceiveConnectionRequestFromPeer:</c> method instead.</p>
                    </li>
                    <li class="li">
                        <p>When a peer is connected (<c><!--a target="_self" -->GKPeerStateConnected<!--/a--></c>), your application may send data to the peer and receive data from the peer. If a connection to a peer is lost or if the peer deliberately disconnects (<c><!--a target="_self" -->GKPeerStateDisconnected<!--/a--></c>), your application should stop sending messages to this peer.</p>
                    </li>
                </ul>
                <p>
                    <strong>Important:</strong> If a <c>GKPeerPickerController</c> object is being used to configure the session, the controller handles updates for the <c><!--a target="_self" -->GKPeerStateAvailable<!--/a--></c>, <c><!--a target="_self" -->GKPeerStateUnavailable<!--/a--></c>, and <c><!--a target="_self" -->GKPeerStateConnected<!--/a--></c> states. Your delegate can ignore state changes if the peer picker dialog is in use.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="session">
            </param>
            <param name="peerID">
            </param>
            <param name="state">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSessionDelegate._session_connectionWithPeerFailed_withError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_session_connectionWithPeerFailed_withError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSessionDelegate._session_didFailWithError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_session_didFailWithError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSessionDelegate._session_didReceiveConnectionRequestFromPeer__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_session_didReceiveConnectionRequestFromPeer__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKSessionDelegate._session_peer_didChangeState__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_session_peer_didChangeState__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSessionError">
            <summary>
            Error codes for the <c>GKSession</c> error domain.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.UnknownError">
            <summary>
                <p>Reserved for when the error does not fit in another category above.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionUnknownError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.ConnectionFailedError">
            <summary>
                <p>The attempt to establish a connection with another peer failed.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionConnectionFailedError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.DeclinedError">
            <summary>
                <p>The peer your application tried to connect to refused the connection.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionDeclinedError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.ConnectivityError">
            <summary>
                <p>An error occurred in the <c>GKSession</c> object's connection code.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionConnectivityError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.CancelledError">
            <summary>
                <p>A peer that invited the session to connect to them canceled the connection request.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionCancelledError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.TimedOutError">
            <summary>
                <p>The operation could not be completed in the specified timeout period.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionTimedOutError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.InProgressError">
            <summary>
                <p>The peer your application attempted to connect to has already requested a connection to your session.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionInProgressError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.TransportError">
            <summary>
                <p>An error occurred in the <c>GKSession</c> object's transport code.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionTransportError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.NotConnectedError">
            <summary>
                <p>Reserved for future use.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionNotConnectedError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.SystemError">
            <summary>
                <p>An error occurred outside of the <c>GKSession</c> object's control, such as memory allocation.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionSystemError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.ConnectionClosedError">
            <summary>
                <p>The connection to another peer closed unexpectedly.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionConnectionClosedError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.DataTooBigError">
            <summary>
                <p>The data your application attempted to send was too large for the session to transmit in a single call.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionDataTooBigError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.PeerNotFoundError">
            <summary>
                <p>A peer with the specified <c>peerID</c> string could not be found.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionPeerNotFoundError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.CannotEnableError">
            <summary>
                <p>Bluetooth is not currently available.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionCannotEnableError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.InvalidParameterError">
            <summary>
                <p>A parameter had an unexpected value.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionInvalidParameterError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionError.InternalError">
            <summary>
                <p>An serious error occurred inside <c>GKSession</c>.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionInternalError</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKSessionMode">
            <summary>
            Modes that determine how a session interacts with other peers.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionMode.Server">
            <summary>
                <p>A server advertises itself to local devices using its <c>sessionID</c> property.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionModeServer</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionMode.Client">
            <summary>
                <p>A client searches for servers advertising the same <c>sessionID</c> property.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionModeClient</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKSessionMode.Peer">
            <summary>
                <p>A peer advertises like a server and searches like a client.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKSessionModePeer</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler">
            <summary>
            The <c>GKTurnBasedEventHandler</c> class is used to respond to important messages related to turn-based matches. To use it, call the <c>sharedTurnBasedEventHandler</c> class method to get the  singleton  instance and assign an object that implements the <c>GKTurnBasedEventHandlerDelegate</c> protocol to its <c>delegate</c> property.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	This class may not be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.UP_GKTurnBasedEventHandler_sharedTurnBasedEventHandler">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.UP_GKTurnBasedEventHandler_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.UP_GKTurnBasedEventHandler_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler" /> class.
            <br></br>Equivalent to the native <c>[[GKTurnBasedEventHandler alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.ClassExists">
            <summary>
            Returns whether the native GKTurnBasedEventHandler class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.SharedTurnBasedEventHandler">
            <summary>
            Returns the shared instance of the event handler. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>sharedTurnBasedEventHandler</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>An event handler object.</p>
                <b>Discussion</b>
                <p>Your game never directly creates a <c>GKTurnBasedEventHandler</c> object. Instead, retrieve the shared instance using this class method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandler.Delegate">
            <summary>
            The delegate for the event handler. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If your game implements turn-based matches, it should set the delegate immediately after the local player is successfully authenticated. You want to set the delegate immediately because your game may have been launched specifically to handle a turn-based match event.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate">
            <summary>
            The <c>GKTurnBasedEventHandlerDelegate</c> protocol is implemented by an object to receive notifications events for turn-based matches.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate.UP_GKTurnBasedEventHandlerDelegate_set__handleInviteFromGameCenter__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate.UP_GKTurnBasedEventHandlerDelegate_set__handleMatchEnded__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate.UP_GKTurnBasedEventHandlerDelegate_set__handleTurnEventForMatch_didBecomeActive__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate.HandleInviteFromGameCenter(System.Object[])">
            <summary>
            (optional) Sent to the delegate when the local player receives an invitation to join a new turn-based match.
            <br></br>Equivalent to the native <c>handleInviteFromGameCenter:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>playersToInvite</em>
                <p>An array of player identifiers for the players to initially invite to the game.</p>
                <b>Discussion</b>
                <p>When your delegate receives this message, your game should create a new <c>GKMatchRequest</c> object and assign the <em>playersToInvite</em> parameter to the match request’s <c>playersToInvite</c> property. Then, your game can either call the <c>GKTurnBasedMatch</c> class method <c>findMatchForRequest:withCompletionHandler:</c> to find a match programmatically or it can use the request to instantiate a new <c>GKTurnBasedMatchmakerViewController</c> object to show a user interface to the player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="playersToInvite">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate.HandleMatchEnded(U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Sent to the delegate when a match the local player is participating in has ended.
            <br></br>Equivalent to the native <c>handleMatchEnded:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>The match that just ended.</p>
                <b>Discussion</b>
                <p>When your delegate receives this message, it should display the match’s final results to the player and allow the player the option of saving or removing the match data from Game Center.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate.HandleTurnEvent(U3DXT.iOS.Native.GameKit.GKTurnBasedMatch,System.Boolean)">
            <summary>
            (optional) Sent to the delegate when it is the local player’s turn to act in a turn-based match. (required)
            <br></br>Equivalent to the native <c>handleTurnEventForMatch:didBecomeActive:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>match</em>
                <p>A match object containing the current state of the match.</p>
                <em>didBecomeActive</em>
                <p>
                    <c>true</c> if the game was launched or brought to the foreground to handle the event.</p>
                <b>Discussion</b>
                <p>When your delegate receives this message, the player has accepted a push notification for a match already in progress. Your game should end whatever task it was performing and switch to the match information provided by the match object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="match">
            </param>
            <param name="didBecomeActive">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate._handleInviteFromGameCenter__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_handleInviteFromGameCenter__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate._handleMatchEnded__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_handleMatchEnded__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventHandlerDelegate._handleTurnEventForMatch_didBecomeActive__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_handleTurnEventForMatch_didBecomeActive__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener">
            <summary>
            Handles events for turn-based games. Provides methods for responding to exchanges and match events.
            </summary>
            <remarks>
                <p>Do not implement <c>GKTurnBasedEventListener</c> directly, instead use <c>GKLocalPlayerListener</c>. The <c>GKLocalPlayerListener</c> protocol inherits methods from <c>GKTurnBasedEventListener</c>, <c>GKInviteEventHandler</c>, and <c>GKChallengeListener</c> in order to handle multiple events.</p>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.UP_GKTurnBasedEventListener_set__player_didRequestMatchWithPlayers__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.UP_GKTurnBasedEventListener_set__player_receivedExchangeCancellation_forMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.UP_GKTurnBasedEventListener_set__player_receivedExchangeReplies_forCompletedExchange_forMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.UP_GKTurnBasedEventListener_set__player_matchEnded__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.UP_GKTurnBasedEventListener_set__player_receivedExchangeRequest_forMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.UP_GKTurnBasedEventListener_set__player_receivedTurnEventForMatch_didBecomeActive__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.DidRequestMatchWithPlayers(U3DXT.iOS.Native.GameKit.GKPlayer,System.Object[])">
            <summary>
            (optional) Initiates a match from Game Center with the requested players. (required)
            <br></br>Equivalent to the native <c>player:didRequestMatchWithPlayers:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>playerIDsToInvite</em>
                <p>An array of <c>String</c> objects containing the player identifiers to invite to the match.</p>
                <b>Discussion</b>
                <p>When this method is called, you should create a new match using the player identifiers provided and present a <c>GKTurnBasedMatchmakerViewController</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="playerIDsToInvite">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.ReceivedExchangeCancellation(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKTurnBasedExchange,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Called when the exchange is cancelled. (required)
            <br></br>Equivalent to the native <c>player:receivedExchangeCancellation:forMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>exchange</em>
                <p>A <c>GKTurnBasedExchange</c> object containing the exchange that is cancelled.</p>
                <em>match</em>
                <p>The <c>GKTurnBasedMatch</c> object containing the current match information.</p>
            </remarks>
            <param name="player">
            </param>
            <param name="exchange">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.ReceivedExchangeReplies(U3DXT.iOS.Native.GameKit.GKPlayer,System.Object[],U3DXT.iOS.Native.GameKit.GKTurnBasedExchange,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Called when the exchange is completed. (required)
            <br></br>Equivalent to the native <c>player:receivedExchangeReplies:forCompletedExchange:forMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>replies</em>
                <p>An array of <c>GKTurnBasedExchange</c> objects containing the replies from other players.</p>
                <em>exchange</em>
                <p>A <c>GKTurnBasedExchange</c> object containing the exchange that is completed.</p>
                <em>match</em>
                <p>The <c>GKTurnBasedMatch</c> object containing the current game data.</p>
                <b>Discussion</b>
                <p>This method is called when all of the players have either responded to the exchange or timed-out. The result is then sent to the current player and the initiator of the exchange.</p>
            </remarks>
            <param name="player">
            </param>
            <param name="replies">
            </param>
            <param name="exchange">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.Ended(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Called when the match has ended. (required)
            <br></br>Equivalent to the native <c>player:matchEnded:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.ReceivedExchangeRequest(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKTurnBasedExchange,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (optional) Called when a player receives an exchange request from another player. (required)
            <br></br>Equivalent to the native <c>player:receivedExchangeRequest:forMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>exchange</em>
                <p>A <c>GKTurnBasedExchange</c> object containing the requested exchange.</p>
                <em>match</em>
                <p>The <c>GKTurnBasedMatch</c> object containing the current game data.</p>
            </remarks>
            <param name="player">
            </param>
            <param name="exchange">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener.ReceivedTurnEvent(U3DXT.iOS.Native.GameKit.GKPlayer,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch,System.Boolean)">
            <summary>
            (optional) Activates the player’s turn. (required)
            <br></br>Equivalent to the native <c>player:receivedTurnEventForMatch:didBecomeActive:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>player</em>
                <p>The <c>GKPlayer</c> object containing the current player’s information.</p>
                <em>match</em>
                <p>The <c>GKTurnBasedMatch</c> object containing the current game data.</p>
                <em>didBecomeActive</em>
                <p>Denotes whether the app should be launched or brought to the foreground.</p>
                <b>Discussion</b>
                <p>This method is called when the it becomes the player’s turn. It is also called when any of the following events happen:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The current turn has a time-out associated with it and the turn is about to expire.</p>
                    </li>
                    <li class="li">
                        <p>Player accepts an invite from another player.</p>
                    </li>
                    <li class="li">
                        <p>Turn was passed to another player. In this case, <c>didBecomeActive</c> is <c>false</c>.</p>
                    </li>
                    <li class="li">
                        <p>Match data is saved by another player.</p>
                    </li>
                    <li class="li">
                        <p>Player receives a reminder.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="player">
            </param>
            <param name="match">
            </param>
            <param name="didBecomeActive">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener._player_didRequestMatchWithPlayers__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_didRequestMatchWithPlayers__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener._player_receivedExchangeCancellation_forMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_receivedExchangeCancellation_forMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener._player_receivedExchangeReplies_forCompletedExchange_forMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_receivedExchangeReplies_forCompletedExchange_forMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener._player_matchEnded__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_matchEnded__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener._player_receivedExchangeRequest_forMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_receivedExchangeRequest_forMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedEventListener._player_receivedTurnEventForMatch_didBecomeActive__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_player_receivedTurnEventForMatch_didBecomeActive__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange">
            <summary>
            A <c>GKTurnBasedExchange</c> object provides developers with a way to expand how turn based matches are currently played by allowing players to send information even when they are not the current player.
            </summary>
            <remarks>
                <p> All exchanges must include the current turn holder, as only the current turn holder is allowed to update the game status. Exchanges have the following workflow:</p>
                <ul class="ul">
                    <li class="li">
                        <p>A player specifies a timeout and passes a small amount of data.</p>
                    </li>
                    <li class="li">
                        <p>The receiving player(s) get a push notification and receive the exchange the next time they launch the game.</p>
                    </li>
                    <li class="li">
                        <p>Depending on the type of exchange, the receiver may replay to the exchange and send a small amount of data back to the sender.</p>
                    </li>
                    <li class="li">
                        <p>The sender gets a push notification after all receivers have responded or timed-out and gets the reply the next time they launch the game.</p>
                    </li>
                    <li class="li">
                        <p>The exchange is complete and the turn holder is notified. The turn holder then applies the results of the exchange to the match data and marks it as resolved.</p>
                    </li>
                </ul>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_completionDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_data(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_exchangeID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_message(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_recipients(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_replies(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_sendDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_sender(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_status(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_get_timeoutDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_cancelWithLocalizableMessageKey_arguments_completionHandler_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.UP_GKTurnBasedExchange_replyWithLocalizableMessageKey_arguments_data_completionHandler_(System.String,System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange" /> class.
            <br></br>Equivalent to the native <c>[[GKTurnBasedExchange alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.ClassExists">
            <summary>
            Returns whether the native GKTurnBasedExchange class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.completionDate">
            <summary>
            The date when the exchange was completed. (read-only)
            <br></br>Equivalent to the native <c>completionDate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.data">
            <summary>
            Data that is sent with the exchange. (read-only)
            <br></br>Equivalent to the native <c>data</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.exchangeID">
            <summary>
            A persistent identifier that is used when referring to this exchange. (read-only)
            <br></br>Equivalent to the native <c>exchangeID</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.message">
            <summary>
            The localized message that is pushed to all of the recipients of the exchange. (read-only)
            <br></br>Equivalent to the native <c>message</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.recipients">
            <summary>
            The participants who receive the exchange. (read-only)
            <br></br>Equivalent to the native <c>recipients</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.replies">
            <summary>
            List of exchange replies. (read-only)
            <br></br>Equivalent to the native <c>replies</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.sendDate">
            <summary>
            The date that the exchange was sent out. (read-only)
            <br></br>Equivalent to the native <c>sendDate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.sender">
            <summary>
            The participant who sent the exchange. (read-only)
            <br></br>Equivalent to the native <c>sender</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.status">
            <summary>
            The current status of the exchange. (read-only)
            <br></br>Equivalent to the native <c>status</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.timeoutDate">
            <summary>
            The amount of time the exchange is to stay active before timing out. (read-only)
            <br></br>Equivalent to the native <c>timeoutDate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.Cancel(System.String,System.Object[],System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Cancels an exchange.
            <br></br>Equivalent to the native <c>cancelWithLocalizableMessageKey:arguments:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>key</em>
                <p>A string in the Localizable.strings file for the current localization.</p>
                <em>arguments</em>
                <p>An array of objects to be substituted using the format string.</p>
                <em>completionHandler</em>
                <p>A block to be called after the cancel event has been sent.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>It is possible to cancel both active and complete exchanges. When an exchange is cancelled, a push notification is sent to each participant using the localizable message. An error is returned if the exchange has previously been cancelled.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="key">
            </param>
            <param name="arguments">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchange.Reply(System.String,System.Object[],U3DXT.iOS.Native.Foundation.NSData,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Replies to an exchange.
            <br></br>Equivalent to the native <c>replyWithLocalizableMessageKey:arguments:data:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>key</em>
                <p>A string in the Localizable.strings file for the current localization.</p>
                <em>arguments</em>
                <p>An array of objects to be substituted using the format string.</p>
                <em>data</em>
                <p>The data associated with the exchange.</p>
                <em>completionHandler</em>
                <p>A block to be called after the reply has been sent.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="key">
            </param>
            <param name="arguments">
            </param>
            <param name="data">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply">
            <summary>
            Describes a <c>GKTurnBasedExchangeReply</c> object that contains a player’s response to an exchange.
            </summary>
            <remarks>
                <p>After a player receives an exchange request, they can respond to the request or let it time-out. When a player responds to a request, a <c>GKTurnBasedExchangeReply</c> object is created that contains the player’s response, identifier, and push notification message.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.UP_GKTurnBasedExchangeReply_get_data(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.UP_GKTurnBasedExchangeReply_get_message(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.UP_GKTurnBasedExchangeReply_get_recipient(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply" /> class.
            <br></br>Equivalent to the native <c>[[GKTurnBasedExchangeReply alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.ClassExists">
            <summary>
            Returns whether the native GKTurnBasedExchangeReply class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.data">
            <summary>
            Exchange data sent by the recipient. (read-only)
            <br></br>Equivalent to the native <c>data</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Can contain up to 1k of exchange information.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.message">
            <summary>
            Localizable message for the push notification (read-only)
            <br></br>Equivalent to the native <c>message</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeReply.recipient">
            <summary>
            The player that is replying to the exchange. (read-only)
            <br></br>Equivalent to the native <c>recipient</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeStatus">
            <summary>
            The status of an exchange or reply
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeStatus.Active">
            <summary>
                <p>The exchange or reply is currently active.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedExchangeStatusActive</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeStatus.Canceled">
            <summary>
                <p>The exchange or replay has been cancelled.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedExchangeStatusCanceled</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeStatus.Resolved">
            <summary>
                <p>The exchange or reply has been resolved.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedExchangeStatusResolved</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeStatus.Complete">
            <summary>
                <p>The exchange or reply has been completed.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedExchangeStatusComplete</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedExchangeStatus.Unknown">
            <summary>
                <p>The state of the exchange or reply is not currently known.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedExchangeStatusUnknown</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch">
            <summary>
            The <c>GKTurnBasedMatch</c> class allows your game to implement turn-based matches between sets of players on Game Center. A turn-based match uses a store-and-forward approach to share data between the participants. When a player participating in the match performs actions that advance the state of the match, your game describes the new state of the match and decides which player acts next. The next player to act is notified by a push notification. Later, when the next player launches your game, you download the match data from Game Center and continue the match. Players take turns acting (based on whatever internal logic your game implements) until the match ends. One advantage of turn-based matches is that a player may participate in multiple matches simultaneously.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>Your game never directly creates <c>GKTurnBasedMatch</c> objects, because a match always represents an existing match that is stored by Game Center.  Instead, match objects are created for your game by Game Kit. A match object may hold a newly created match (for a match that has not started yet) or a match that is already under way. Here are ways your game acquires match objects:</p>
                <ul class="ul">
                    <li class="li">
                        <p>To allow the player to see a standard user interface for turn-based matches, use the <c>GKTurnBasedMatchmakerViewController</c> class.</p>
                    </li>
                    <li class="li">
                        <p>To programmatically find a new match for the player to join, call the <c>findMatchForRequest:withCompletionHandler:</c> class method.</p>
                    </li>
                    <li class="li">
                        <p>To programmatically load a collection of match objects for matches the local player is already participating in, call the <c>loadMatchesWithCompletionHandler:</c> class method.</p>
                    </li>
                    <li class="li">
                        <p>To receive notifications when it is the local player’s turn in a match, attach a delegate to the <c>GKTurnBasedEventHandler</c> singleton object.</p>
                    </li>
                </ul>
                <p>A match object contains a few essential properties:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The <c>participants</c> property contains an array of <c>GKTurnBasedParticipant</c> objects. Each identifies a player in the match along with the current status of that player.</p>
                    </li>
                    <li class="li">
                        <p>The <c>currentParticipant</c> property contains the <c>GKTurnBasedParticipant</c> object for the player who must act to advance the state of the match.</p>
                    </li>
                    <li class="li">
                        <p>The <c>matchData</c> property holds binary data that describes the current state of the match. The format of the data contained in this object is something you design when you create your game; Game Kit only manages storing and forwarding of this data.</p>
                    </li>
                </ul>
                <p>When a player views a particular match, your game should take the match object and call its <c>loadMatchDataWithCompletionHandler:</c> method to retrieve the match data. After the match data is downloaded from Game Center, your game parses the data and displays the game’s user interface. A player may want to view the match even when it is another player’s turn to act; your game should expect this and allow the player to view the state of the match without allowing them to act. When the current player views the match, your game should both show them the state of the match and provide a user interface to allow the player to take a turn. The current player is expected to perform actions that change the state of the match. These actions are based on the internal logic of your game’s rules. The player continues to act until he or she takes an action that requires another person in the match to act in order to advance the match. For example, in a game like Chess, moving a piece on the board and passing control to the other participant happen simultaneously. A more complex game might allow the current player to take multiple actions before the match reaches a state in which control is ceded to another player. </p>
                <p>If the player takes an action that is irrevocable (but control is not yet passed to another player), you update the match data by calling the <c>saveCurrentTurnWithMatchData:completionHandler:</c> method.</p>
                <p>Once the player takes an action that requires another player to act, your game should determine which player needs to act next. Then, it should encode the state of the match into an <c>NSData</c> object and call the match object’s <c>endTurnWithNextParticipants:turnTimeout:matchData:completionHandler:</c> method to set the next player to act. The next player is automatically informed that the match is waiting on his or her actions in order to continue the match.</p>
                <p>As the match progresses, players may leave the match. For example, this situation might occur if your game determines that this player has been eliminated from the match. Or your game might offer a user interface to allow players to resign from matches. If the local player resigns from the match and is also the match’s current player, your game must call the match object’s <c>participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:</c> method. As it does when the player takes a turn, your game passes in the state of the match and the next player to act. Your game also provides a <strong>match outcome</strong> — essentially, a numerical value that indicates the reason why that player left the match. If your game allows players to resign from matches when it is not that player’s turn, your game calls the match object’s <c>participantQuitOutOfTurnWithOutcome:withCompletionHandler:</c> method to allow the player to leave the match.</p>
                <p>Eventually, a match ends. When your game logic dictates that a match should end, your game calls the match object’s <c>endMatchInTurnWithMatchData:completionHandler:</c> method. Your game must ensure that all participants in the match have a valid match outcome before ending the match.</p>
                <p>Even after a match ends, its data is still stored on Game Center; this allows players to view previous victories and defeats. A player may choose to delete the match using the standard user interface, but your game can also programmatically remove a match by calling the match object’s <c>removeWithCompletionHandler:</c> method. In all cases, the decision to delete a match should be made by a player; the <c>removeWithCompletionHandler:</c> method exists to allow your game to present a custom user interface for viewing and working with matches.</p>
                <b>Subclassing Notes</b>
                <p class="spaceabove">	The <c>GKTurnBasedMatch</c> class may not be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.GKTurnTimeoutDefault">
            <summary>
                <p>Indicates that the player has one week to take a turn.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnTimeoutDefault</c> constant.
            </summary>
            <remarks>
            Common values for turn timeouts.
            <p></p><br />
            	Provide Feedback
            <p></p>This is a constant for "Turn Timeouts".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.GKTurnTimeoutNone">
            <summary>
                <p>Indicates that the player’s turn never times out.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnTimeoutNone</c> constant.
            </summary>
            <remarks>
            Common values for turn timeouts.
            <p></p><br />
            	Provide Feedback
            <p></p>This is a constant for "Turn Timeouts".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_findMatchForRequest_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_loadMatchesWithCompletionHandler_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_loadMatchWithID_withCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_activeExchanges(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_completedExchanges(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_creationDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_currentParticipant(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_exchangeDataMaximumSize(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_exchangeMaxInitiatedExchangesPerPlayer(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_exchanges(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_matchData(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_matchDataMaximumSize(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_matchID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_message(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_set_message(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_participants(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_get_status(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_acceptInviteWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_declineInviteWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_endMatchInTurnWithMatchData_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_endMatchInTurnWithMatchData_scores_achievements_completionHandler_(System.String,System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_endTurnWithNextParticipant_matchData_completionHandler_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_endTurnWithNextParticipants_turnTimeout_matchData_completionHandler_(System.String,System.String,System.Double,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_loadMatchDataWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_participantQuitInTurnWithOutcome_nextParticipant_matchData_completionHandler_(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_participantQuitInTurnWithOutcome_nextParticipants_turnTimeout_matchData_completionHandler_(System.String,System.Int32,System.String,System.Double,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_participantQuitOutOfTurnWithOutcome_withCompletionHandler_(System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_rematchWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_removeWithCompletionHandler_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_saveCurrentTurnWithMatchData_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_saveMergedMatchData_withResolvedExchanges_completionHandler_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_sendExchangeToParticipants_data_localizableMessageKey_arguments_timeout_completionHandler_(System.String,System.String,System.String,System.String,System.String,System.Double,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_sendReminderToParticipants_localizableMessageKey_arguments_completionHandler_(System.String,System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.UP_GKTurnBasedMatch_setLocalizableMessageWithKey_arguments_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch" /> class.
            <br></br>Equivalent to the native <c>[[GKTurnBasedMatch alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.ClassExists">
            <summary>
            Returns whether the native GKTurnBasedMatch class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.FindMatch(U3DXT.iOS.Native.GameKit.GKMatchRequest,System.Action{U3DXT.iOS.Native.GameKit.GKTurnBasedMatch,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Programmatically searches for a new match to join.
            <br></br>Equivalent to the native <c>findMatchForRequest:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>request</em>
                <p>A match request that specifies the properties that the new match must fulfill.</p>
                <em>completionHandler</em>
                <p>A block to be called after the match is successfully created.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>match</em>
                <p>A newly initialized match object that contains a list of players for the match. If an error occurred, this value is <c>null</c>.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <p>This method may either create a new match or it may place the player into an existing match that needs a new player to advance the match further. Regardless of how the player is placed in the match, the local player is always the current participant in the returned match. Your game should immediately display the match in its user interface and allow the player to take a turn.</p>
                <p>To be consistent with older servers and versions of iOS, the minimum number of players specified by the <c>GKMatchRequest</c> object is set to be equal to the maximum number of players when looking for a match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="request">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.LoadMatches(System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the turn-based matches involving the local player and creates a match object for each match.
            <br></br>Equivalent to the native <c>loadMatchesWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the matches are retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>matches</em>
                <p>An array of <c>GKTurnBased</c> Match objects containing the match objects for matches that the local player is playing in, or <c>null</c> if there are no matches to load. If an error occurred, this value may be non-<c>null</c>. In this case, the array holds whatever match data could be retrieved from Game Center before the error occurred.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.LoadMatch(System.String,System.Action{U3DXT.iOS.Native.GameKit.GKTurnBasedMatch,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads a specific match.
            <br></br>Equivalent to the native <c>loadMatchWithID:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchID</em>
                <p>The identifier for the turn-based match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the match is retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>match</em>
                <p>If the operation completed successfully, this parameter holds the match. If an error occurred, the value is <c>null</c>.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="matchID">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.activeExchanges">
            <summary>
            Returns the exchanges that are active for the local player. (read-only)
            <br></br>Equivalent to the native <c>activeExchanges</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.completedExchanges">
            <summary>
            The exchanges that have been completed and need to be merged by the local participant. (read-only)
            <br></br>Equivalent to the native <c>completedExchanges</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.creationDate">
            <summary>
            The date that the match was created. (read-only)
            <br></br>Equivalent to the native <c>creationDate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.currentParticipant">
            <summary>
            The participant whose turn it is to act next. (read-only)
            <br></br>Equivalent to the native <c>currentParticipant</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The current participant is the only participant that is allowed to update the match data.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.exchangeDataMaximumSize">
            <summary>
            The maximum amount of data allowed for an exchange. (read-only)
            <br></br>Equivalent to the native <c>exchangeDataMaximumSize</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.exchangeMaxInitiatedExchangesPerPlayer">
            <summary>
            Limits the number of exchanges the player can have initiated at once. (read-only)
            <br></br>Equivalent to the native <c>exchangeMaxInitiatedExchangesPerPlayer</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.exchanges">
            <summary>
            The current exchanges that are in progress for the match. (read-only)
            <br></br>Equivalent to the native <c>exchanges</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When an exchanges has been completed and resolved by merging it into the match data, it will be removed from this list.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.matchData">
            <summary>
            Game-specific data that reflects the details of the match. (read-only)
            <br></br>Equivalent to the native <c>matchData</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Although Game Center knows who is participating in the match and who is expected to act next, it does not know anything about your game’s internal logic. Your game provides the match data and all the programming logic required to interpret it. This data should include the current state of the game and provide any necessary details about what actions the current player is expected to take. It can also be helpful for your game to record information about recent moves made by other players. The game can then replay those moves visually for the player to show exactly how the match reached the state it is in now.</p>
                <p>Your game never directly updates the match state associated with this property. Instead, when the data is updated to reflect the actions of the current player, your game serializes the updated state into memory and calls one of the match’s instance methods that transmit the updated state to Game Center.</p>
                <p>The value of this property is <c>null</c> until after your game calls the <c>loadMatchDataWithCompletionHandler:</c> method and the load task is complete. After this task completes, the <c>matchData</c> property holds the data that the last player to act transmitted to Game Center.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– endTurnWithNextParticipant:matchData:completionHandler:</c>
                    </li>
                    <li>
                        <c>– participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.matchDataMaximumSize">
            <summary>
            Returns the limit the Game Center servers place on the size of the match data. (read-only)
            <br></br>Equivalent to the native <c>matchDataMaximumSize</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Game Kit returns an error if your game sends updated data larger than this value.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.matchID">
            <summary>
            A string that uniquely identifies the match. (read-only)
            <br></br>Equivalent to the native <c>matchID</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This string is not intended to be displayed to players. Your game should use this string whenever it needs to identify a specific match. For example, if you want your game to store additional information on a device or in iCloud, it might store it in a database using the match ID as a key.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.message">
            <summary>
            A message displayed to all players in the match.
            <br></br>Equivalent to the native <c>message</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The <c>message</c> property is displayed by the standard user interface; this allows your game to use the message to inform players of the current state of the match.</p>
                <p>
                    <strong>Important:</strong> This property can be changed only by an instance of your game associated with the current player. If an instance of your game associated with another player in the match attempts to write to this property, an exception is thrown.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.participants">
            <summary>
            Information about the players participating in the match. (read-only)
            <br></br>Equivalent to the native <c>participants</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The elements of this array are <c>GKTurnBasedParticipant</c> objects representing each participant in the match. Your game uses these objects to retrieve more information about the participants in the match. Your game also uses one of the objects in this array as a parameter whenever it calls a method that sets a different participant to act in the match.</p>
                <p>The size of the array and the order in which the participants appear in the array are set when the match is first created, and never changes. When a match is first created, some participants may not hold actual players yet. Game Center searches for a player to fill that spot in the match only after your game sets that participant as the current player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.status">
            <summary>
            The current state of the match. (read-only)
            <br></br>Equivalent to the native <c>status</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.AcceptInvite(System.Action{U3DXT.iOS.Native.GameKit.GKTurnBasedMatch,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Programmatically accept an invitation to a turn-based match.
            <br></br>Equivalent to the native <c>acceptInviteWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the match is successfully created.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>match</em>
                <p>A newly initialized match object that contains a list of players for the match. If an error occurred, this value is <c>null</c>.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.DeclineInvite(System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Programmatically decline an invitation to a turn-based match.
            <br></br>Equivalent to the native <c>declineInviteWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the match is successfully created.</p>
                <p>The block receives the following parameter:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.EndMatchInTurn(U3DXT.iOS.Native.Foundation.NSData,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Ends the match.
            <br></br>Equivalent to the native <c>endMatchInTurnWithMatchData:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchData</em>
                <p>A serialized blob of data reflecting the end state for the match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the match is successfully ended.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>Calling this method ends the match for all players. This method may only be called by the current participant. Before your game calls this method, the <c>matchOutcome</c> property on each participant object stored in the <c>participants</c> property must have been set to a value other than <c>GKTurnBasedMatchOutcomeNone</c>.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="matchData">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.EndMatchInTurn(U3DXT.iOS.Native.Foundation.NSData,System.Object[],System.Object[],System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Ends the match while submitting all of the scores and achievements.
            <br></br>Equivalent to the native <c>endMatchInTurnWithMatchData:scores:achievements:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchData</em>
                <p>A serialized blob of data reflecting the current state for the match.</p>
                <em>scores</em>
                <p>An array of <c>GKScore</c> objects containing the final scores for every participant in the match.</p>
                <em>achievements</em>
                <p>An array of <c>GKAchievement</c> objects containing the achievements acquired by each participant in the match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the scores are saved to the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>This method ends the current match and submits scores and achievements for all of the participants. The scores can submitted to multiple leaderboards. The <c>GKTurnBasedMatchOutcome</c> status must be set for each participant before calling this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="matchData">
            </param>
            <param name="scores">
            </param>
            <param name="achievements">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.EndTurn(U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant,U3DXT.iOS.Native.Foundation.NSData,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Updates the data stored on Game Center for the current match. ( Deprecated in iOS 6.0.  Use <c>endTurnWithNextParticipants:turnTimeout:matchData:completionHandler:</c> instead.)
            <br></br>Equivalent to the native <c>endTurnWithNextParticipant:matchData:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>nextParticipant</em>
                <p>The next player in the match who needs to take an action. It must be one of the object’s stored in the match’s <c>participants</c> property.</p>
                <em>matchData</em>
                <p>A serialized blob of data reflecting the game-specific state for the match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the data is uploaded to Game Center.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
            </remarks>
            <param name="nextParticipant">
            </param>
            <param name="matchData">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.EndTurn(System.Object[],System.Double,U3DXT.iOS.Native.Foundation.NSData,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Updates the data stored on Game Center for the current match.
            <br></br>Equivalent to the native <c>endTurnWithNextParticipants:turnTimeout:matchData:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>nextParticipants</em>
                <p>An array of <c>GKTurnBasedParticipant</c> objects reflecting the order in which the players should act next. Each object in the array must be one of the objects stored in the match’s <c>participants</c> property.</p>
                <em>timeout</em>
                <p>The length of time the next player has to complete their turn.</p>
                <em>matchData</em>
                <p>A serialized blob of data reflecting the game-specific state for the match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the data is uploaded to Game Center.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>If the next player to act does not take their turn in the specified interval, the next player in the array receives a notification to act. This process continues until a player takes a turn or the last player in the list is notified.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="nextParticipants">
            </param>
            <param name="timeout">
            </param>
            <param name="matchData">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.LoadMatchData(System.Action{U3DXT.iOS.Native.Foundation.NSData,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Loads the game-specific data associated with a match, including all exchanges.
            <br></br>Equivalent to the native <c>loadMatchDataWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the match data is retrieved from the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>matchData</em>
                <p>The data stored on Game Center that reflects the current state of the match. If an error occurred, this value is <c>null</c>.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.ParticipantQuitInTurn(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome,U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant,U3DXT.iOS.Native.Foundation.NSData,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Resigns the current player from the match without ending the match. ( Deprecated in iOS 6.0.  Use <c>participantQuitInTurnWithOutcome:nextParticipants:turnTimeout:matchData:completionHandler:</c> instead.)
            <br></br>Equivalent to the native <c>participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchOutcome</em>
                <p>The end outcome of the current player in the match.</p>
                <em>nextParticipant</em>
                <p>The next player in the match who needs to take an action. It must be one of the object’s stored in the match’s <c>participants</c> property.</p>
                <em>matchData</em>
                <p>A serialized blob of data reflecting the game-specific state for the match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the data is uploaded to the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>Your game calls this method on an instance of your game that is processing the current player’s turn, but that player has left the match. For example, the player may have willingly resigned from the match or that player may have been eliminated by the other players (based on your game’s internal logic).</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
            </remarks>
            <param name="matchOutcome">
            </param>
            <param name="nextParticipant">
            </param>
            <param name="matchData">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.ParticipantQuitInTurn(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome,System.Object[],System.Double,U3DXT.iOS.Native.Foundation.NSData,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Resigns the current player from the match without ending the match.
            <br></br>Equivalent to the native <c>participantQuitInTurnWithOutcome:nextParticipants:turnTimeout:matchData:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchOutcome</em>
                <p>The end outcome of the current player in the match.</p>
                <em>nextParticipants</em>
                <p>An array of <c>GKTurnBasedParticipant</c> objects that contains participant objects reflecting the order in which the players should act next. Each object in the array must be one of the objects stored in the match’s <c>participants</c> property.</p>
                <em>timeout</em>
                <p>The length of time the next player has to complete their turn.</p>
                <em>matchData</em>
                <p>A serialized blob of data reflecting the game-specific state for the match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the data is uploaded to the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>Your game calls this method on an instance of your game that is processing the current player’s turn, but that player has left the match. For example, the player may have willingly resigned from the match or that player may have been eliminated by the other players (based on your game’s internal logic).</p>
                <p>If the next player to act does not take their turn in the specified interval, the next player in the array receives a notification to act. This process continues until a player takes a turn or the last player in the list is notified.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="matchOutcome">
            </param>
            <param name="nextParticipants">
            </param>
            <param name="timeout">
            </param>
            <param name="matchData">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.ParticipantQuitOutOfTurn(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Resigns the player from the match when that player is not the current player. This action does not end the match
            <br></br>Equivalent to the native <c>participantQuitOutOfTurnWithOutcome:withCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchOutcome</em>
                <p>The end outcome of the current player in the match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the player’s status is updated on Game Center.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>If the local player decided they wanted to resign from the match but is not the current participant in the match, your game calls this method.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="matchOutcome">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.Rematch(System.Action{U3DXT.iOS.Native.GameKit.GKTurnBasedMatch,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Create a new turn-based match with the same participants as an existing match.
            <br></br>Equivalent to the native <c>rematchWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the match is successfully created.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>match</em>
                <p>A newly initialized match object that contains a list of players for the match. If an error occurred, this value is <c>null</c>.</p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, it creates a background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.Remove(System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Programmatically removes a match from Game Center.
            <br></br>Equivalent to the native <c>removeWithCompletionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>completionHandler</em>
                <p>A block to be called after the match has been removed from Game Center.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>Even after a player’s participation in a match ends, the data associated with the match continues to be stored on Game Center. Storing the data on Game Center allows the player to continue to watch the match’s progress, or even see the final state of the match when it ends. However, players may also want to delete matches that they have finished playing. If you choose not to use the standard matchmaker user interface, your game should offer the ability to delete a finished match from Game Center. When a player chooses to delete a match from Game Center, call this method. It is a programming error to call this method on a match that has the local player as an active participant.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <p>When the task completes, the match is no longer visible to the local player whose device made the call. Other players involved in the match still see the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.SaveCurrentTurn(U3DXT.iOS.Native.Foundation.NSData,System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Update the match data without advancing the game to another player.
            <br></br>Equivalent to the native <c>saveCurrentTurnWithMatchData:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchData</em>
                <p>A serialized blob of data reflecting the game-specific state for the match.</p>
                <em>completionHandler</em>
                <p>A block to be called after the data is uploaded to Game Center.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>This method updates the match data stored on Game Center. Call this method when the current player takes an action that advances the state of the match but does not end the player’s turn. For example, if your game has a fog-of-war mechanic, you might call this method when the player revealed new information on the map.</p>
                <p>When this method is called, it creates a new background task to handle the request. The method then returns control to your game. Later, when the task is complete, Game Kit calls your completion handler. Keep in mind that the completion handler may be called on a thread other than the one originally used to invoke the method. This means that the code in your block needs to be thread-safe.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="matchData">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.SaveMergedMatchData(U3DXT.iOS.Native.Foundation.NSData,System.Object[],System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Saves the merged data for the current turn without ending the turn.
            <br></br>Equivalent to the native <c>saveMergedMatchData:withResolvedExchanges:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>matchData</em>
                <p>A serialized blob of data reflecting the current state for the match.</p>
                <em>exchanges</em>
                <p>An array of <c>GKTurnBasedExchange</c> objects that contains the resolved exchanges.</p>
                <em>completionHandler</em>
                <p>A block to be called after the scores are saved to the server.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, the data sent is marked as being resolved. This means that the data has been merged into the match data. If other players currently have the game running, they will receive a <c>handleTurnEventForMatch</c> call to indicate that <c>matchData</c> has changed. All completed exchanges must be resolved before ending a turn. If the completed exchanges have not been resolved, then calling <c>endTurn</c>, <c>participantQuitInTurnWithOutCome</c>, or <c>endMatchInTurn</c> will result in an error.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="matchData">
            </param>
            <param name="exchanges">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.SendExchangeToParticipants(System.Object[],U3DXT.iOS.Native.Foundation.NSData,System.String,System.Object[],System.Double,System.Action{U3DXT.iOS.Native.GameKit.GKTurnBasedExchange,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Sends an exchange request to one or more participants.
            <br></br>Equivalent to the native <c>sendExchangeToParticipants:data:localizableMessageKey:arguments:timeout:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>participants</em>
                <p>An array of <c>GKTurnBasedParticipant</c> objects containing the participants who are to receive the reminder.</p>
                <em>data</em>
                <p>The data to be exchanged between players.</p>
                <em>key</em>
                <p>The location of the alert message string in the Localizable.strings file for the current localization.</p>
                <em>arguments</em>
                <p>An array of <c>String</c> objects to be substituted using the format string.</p>
                <em>timeout</em>
                <p>The length of time the next player has to complete their turn.</p>
                <em>completionHandler</em>
                <p>A block to be called after the exchange request has been sent.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>	exchange<p>The updated exchange to be passed.</p><em>error</em><p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p><b>Discussion</b><p>Allows an exchange request to be sent to one or more participants. Each recipient receives a push notification that uses the supplied localizable message. An error is returned if any of the participants are inactive.</p><b>Availability</b><ul><li>Available in iOS 7.0 and later.</li></ul></remarks>
            <param name="participants">
            </param>
            <param name="data">
            </param>
            <param name="key">
            </param>
            <param name="arguments">
            </param>
            <param name="timeout">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.SendReminderToParticipants(System.Object[],System.String,System.Object[],System.Action{U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Send a reminder to one or more game participants.
            <br></br>Equivalent to the native <c>sendReminderToParticipants:localizableMessageKey:arguments:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>participants</em>
                <p>An array of <c>GKTurnBasedParticipant</c> objects containing the participants who are to receive the reminder.</p>
                <em>key</em>
                <p>The location of the alert message string in the Localizable.strings file for the current localization.</p>
                <em>arguments</em>
                <p>An array of objects to be substituted using the format string.</p>
                <em>completionHandler</em>
                <p>A block to be called after the reminder has been sent.</p>
                <p>The block receives the following parameters:</p>
                <p>
                </p>
                <em>error</em>
                <p>If an error occurred, this error object describes the error. If the operation was completed successfully, the value is <c>null</c>.</p>
                <b>Discussion</b>
                <p>When this method is called, each recipient receives a push notification using the supplied localizable message. This allows the game to send reminders that a turn or exchange request needs action. The receiver will have a turn event generated for the current game.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="participants">
            </param>
            <param name="key">
            </param>
            <param name="arguments">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatch.SetLocalizableMessage(System.String,System.Object[])">
            <summary>
            Allows the developer to display a message at the end of a turn or match.
            <br></br>Equivalent to the native <c>setLocalizableMessageWithKey:arguments:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>key</em>
                <p>The location of the alert message string in the Localizable.strings file for the current localization.</p>
                <em>arguments</em>
                <p>An array of <c>String</c> objects to be substituted using the format string.</p>
                <b>Discussion</b>
                <p>Only the current player is able to set this message. The message sent is localized on the receiver side if the game is installed and on the sender side otherwise. The localized message identified through the <c>key</c> parameter can be formatted with the %@ and %n$@ specifiers. These specifiers use the objects designated in the <c>arguments</c> array.</p>
                <p>The localized message is evaluated locally from these keys and is sent as well so that devices that do not have the game installed will see the message in the sender’s localization.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="key">
            </param>
            <param name="arguments">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome">
            <summary>
            Descriptions for the different game result states for a given participant that has reached the done state.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.TimeExpired">
            <summary>
                <p>The game ended due to time running out.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeTimeExpired</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.Won">
            <summary>
                <p>Participant won the match.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeWon</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.Tied">
            <summary>
                <p>Participant tied in the current match.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeTied</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.First">
            <summary>
                <p>The participant came in first.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeFirst</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.Second">
            <summary>
                <p>The participant came in second.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeSecond</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.None">
            <summary>
                <p>The participant has not finished a match.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeNone</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.Quit">
            <summary>
                <p>Participant quit the match.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeQuit</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.Fourth">
            <summary>
                <p>The participant came in fourth.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeFourth</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.Third">
            <summary>
                <p>The participant came in third.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeThird</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.CustomRange">
            <summary>
                <p>Custom range available for an app to use for its own status results.</p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeCustomRange</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchOutcome.Lost">
            <summary>
                <p>Participant lost the match.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchOutcomeLost</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchStatus">
            <summary>
            The different states that a match can enter.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchStatus.Open">
            <summary>
                <p>The match is currently being played.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchStatusOpen</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchStatus.Ended">
            <summary>
                <p>The match has been completed.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchStatusEnded</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchStatus.Unknown">
            <summary>
                <p>The match is in an unexpected state.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchStatusUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchStatus.Matching">
            <summary>
                <p>Game Center is still searching for other players to join the match.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedMatchStatusMatching</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController">
            <summary>
            The <c>GKTurnBasedMatchmakerViewController</c> class displays a user interface that allows players to manage the turn-based matches that they are participating in.
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Your game must authenticate a local player before you can use any Game Center classes. If there is no authenticated player, your game receives a <c>GKErrorNotAuthenticated</c> error. For more information on authentication see <em>Game Center Programming Guide</em>.</p>
                <p>
                </p>
                <p>To show a turn-based matching user interface, first allocate and initialize a <c>GKMatchRequest</c> object that describes the desired match. Then, use the match request to initialize a new <c>GKTurnBasedMatchmakerViewController</c> object. Set the view controller’s delegate, present the view controller, and wait for the delegate to be called. The view controller’s delegate is notified when the matchmaking process is completed or canceled. Once the delegate is called, dismiss the view controller.</p>
                <p>On iOS, you present and dismiss the view controller from another view controller in your game, using the methods provided by the <c>UIViewController</c> class. On OS X, you use the <c><!--a target="_self" -->GKDialogController<!--/a--></c> class to present and dismiss the view controller.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.DidFail">
            <summary>
            Called when an error occurs. (required)
            <br></br>Equivalent to implementing the native <c>turnBasedMatchmakerViewController:didFailWithError:</c> method of <c>GKTurnBasedMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.DidFailEventArgs">
            <summary>
            Event arguments for DidFail.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.DidFailEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.DidFailEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.DidFind">
            <summary>
            Called when the player selected a match to view. (required)
            <br></br>Equivalent to implementing the native <c>turnBasedMatchmakerViewController:didFindMatch:</c> method of <c>GKTurnBasedMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.DidFindEventArgs">
            <summary>
            Event arguments for DidFind.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.DidFindEventArgs.#ctor(U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.DidFindEventArgs.match">
            <summary>match</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.PlayerQuit">
            <summary>
            Called when a player chooses to quit the match. (required)
            <br></br>Equivalent to implementing the native <c>turnBasedMatchmakerViewController:playerQuitForMatch:</c> method of <c>GKTurnBasedMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.PlayerQuitEventArgs">
            <summary>
            Event arguments for PlayerQuit.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.PlayerQuitEventArgs.#ctor(U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.PlayerQuitEventArgs.match">
            <summary>match</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.WasCancelled">
            <summary>
            Called when the player cancels matchmaking. (required)
            <br></br>Equivalent to implementing the native <c>turnBasedMatchmakerViewControllerWasCancelled:</c> method of <c>GKTurnBasedMatchmakerViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.UP_GKTurnBasedMatchmakerViewController_get_showExistingMatches(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.UP_GKTurnBasedMatchmakerViewController_set_showExistingMatches(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.UP_GKTurnBasedMatchmakerViewController_get_turnBasedMatchmakerDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.UP_GKTurnBasedMatchmakerViewController_set_turnBasedMatchmakerDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.UP_GKTurnBasedMatchmakerViewController_alloc_initWithMatchRequest_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController" /> class.
            <br></br>Equivalent to the native <c>[[GKTurnBasedMatchmakerViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.ClassExists">
            <summary>
            Returns whether the native GKTurnBasedMatchmakerViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.showExistingMatches">
            <summary>
            A Boolean value that determines whether the view controller shows existing matches.
            <br></br>Equivalent to the native <c>showExistingMatches</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the value of this property is <c>true</c>, the view controller shows matches that are already in progress. If the value of this property is <c>false</c>, the view controller only offers the ability to create new matches. The default value is <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.turnBasedMatchmakerDelegate">
            <summary>
            The view controller’s delegate.
            <br></br>Equivalent to the native <c>turnBasedMatchmakerDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Your game must implement the delegate protocol on an object and assign that object to this property before presenting the view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController.#ctor(U3DXT.iOS.Native.GameKit.GKMatchRequest)">
            <summary>
            Creates an instance of the native GKTurnBasedMatchmakerViewController and initializes the object. Initializes a new matchmaker view controller.
            <br></br>Equivalent to the native <c>[[GKTurnBasedMatchmakerViewController alloc] initWithMatchRequest:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>request</em>
                <p>A match request with parameters for the match.</p>
                <b>Return Value</b>
                <p>An initialized matchmaker view controller. If an error occurred, this method returns <c>NIL</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="request">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate">
            <summary>
            Your game implements the <c>GKTurnBasedMatchmakerViewControllerDelegate</c> protocol on an object to respond to events generated by a <c>GKTurnBasedMatchmakerViewController</c> object.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.UP_GKTurnBasedMatchmakerViewControllerDelegate_set__turnBasedMatchmakerViewController_didFailWithError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.UP_GKTurnBasedMatchmakerViewControllerDelegate_set__turnBasedMatchmakerViewController_didFindMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.UP_GKTurnBasedMatchmakerViewControllerDelegate_set__turnBasedMatchmakerViewController_playerQuitForMatch__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.UP_GKTurnBasedMatchmakerViewControllerDelegate_set__turnBasedMatchmakerViewControllerWasCancelled__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.DidFail(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (<b>required</b>) Called when an error occurs. (required)
            <br></br>Equivalent to the native <c>turnBasedMatchmakerViewController:didFailWithError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that received an error.</p>
                <em>error</em>
                <p>An error object that describes the error.</p>
                <b>Discussion</b>
                <p>Your game should dismiss the view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.DidFind(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (<b>required</b>) Called when the player selected a match to view. (required)
            <br></br>Equivalent to the native <c>turnBasedMatchmakerViewController:didFindMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that found a match.</p>
                <em>match</em>
                <p>The match that the player selected.</p>
                <b>Discussion</b>
                <p>Your game should dismiss the view controller and use the match object to show the current state of the match to the player. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.PlayerQuit(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController,U3DXT.iOS.Native.GameKit.GKTurnBasedMatch)">
            <summary>
            (<b>required</b>) Called when a player chooses to quit the match. (required)
            <br></br>Equivalent to the native <c>turnBasedMatchmakerViewController:playerQuitForMatch:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that the player interacted with.</p>
                <em>match</em>
                <p>The match the player has chosen to quit.</p>
                <b>Discussion</b>
                <p>When this method is called, the player is the current participant in the match, but that player has chosen to resign the match instead of taking a turn. Your game should dismiss the view controller, set an outcome for the player, and then call the match’s <c>participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
            <param name="match">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate.WasCancelled(U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewController)">
            <summary>
            (<b>required</b>) Called when the player cancels matchmaking. (required)
            <br></br>Equivalent to the native <c>turnBasedMatchmakerViewControllerWasCancelled:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>viewController</em>
                <p>The view controller that the player canceled.</p>
                <b>Discussion</b>
                <p>Your game should dismiss the view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="viewController">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate._turnBasedMatchmakerViewController_didFailWithError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_turnBasedMatchmakerViewController_didFailWithError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate._turnBasedMatchmakerViewController_didFindMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_turnBasedMatchmakerViewController_didFindMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate._turnBasedMatchmakerViewController_playerQuitForMatch__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_turnBasedMatchmakerViewController_playerQuitForMatch__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedMatchmakerViewControllerDelegate._turnBasedMatchmakerViewControllerWasCancelled__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_turnBasedMatchmakerViewControllerWasCancelled__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant">
            <summary>
            A <c>GKTurnBasedParticipant</c> object stores information for a participant in a turn-based match. Your game never creates objects of this class directly; instead it retrieves an array of <c>GKTurnBasedParticipant</c> objects from a <c>GKTurnBasedMatch</c> object.
            </summary>
            <remarks>
                <p>Most information stored in a <c>GKTurnBasedParticipant</c> object is read-only, and is provided by Game Kit to assist you in implementing your game logic. However, the <c>matchOutcome</c> property is quite important; before your game ends a match, it must set the <c>matchOutcome</c> property for every participant in the match.</p>
                <b>Subclassing Notes</b>
                <p>This class may not be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.UP_GKTurnBasedParticipant_get_lastTurnDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.UP_GKTurnBasedParticipant_get_matchOutcome(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.UP_GKTurnBasedParticipant_set_matchOutcome(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.UP_GKTurnBasedParticipant_get_playerID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.UP_GKTurnBasedParticipant_get_status(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.UP_GKTurnBasedParticipant_get_timeoutDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant" /> class.
            <br></br>Equivalent to the native <c>[[GKTurnBasedParticipant alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.ClassExists">
            <summary>
            Returns whether the native GKTurnBasedParticipant class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.lastTurnDate">
            <summary>
            The date and time that this participant last took a turn in the game. (read-only)
            <br></br>Equivalent to the native <c>lastTurnDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is invalid until the participant first takes a turn in the match.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.matchOutcome">
            <summary>
            The end-state of this participant in the match.
            <br></br>Equivalent to the native <c>matchOutcome</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Initially, this property holds <c>GKTurnBasedMatchOutcomeNone</c>. Before your game can end a match, it must set the match outcome to a value that reflects the outcome of this participant when he or she left the match. See <c>“Match Outcomes”</c>. Optionally, it may also use an OR operation to include a custom match outcome for your specific game. Game Center does not use the custom value; it exists to allow your game to store its own information about the end of the match. The custom value must fit in the range provided by the <c>GKTurnBasedMatchOutcomeCustomRange</c> constant. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.playerID">
            <summary>
            The player identifier for this participant. (read-only)
            <br></br>Equivalent to the native <c>playerID</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property may be <c>null</c> if this slot in the match has not yet been filled by an actual player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.status">
            <summary>
            The current status of the participant. (read-only)
            <br></br>Equivalent to the native <c>status</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is updated by Game Kit to reflect the current status of the local player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipant.timeoutDate">
            <summary>
            The date and time that the participant’s turn times out. (read-only)
            <br></br>Equivalent to the native <c>timeoutDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If a timeout was set when the turn state was advanced, this property holds when the player’s turn expires. Otherwise, this property is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipantStatus">
            <summary>
            The state the participant is in during the match.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipantStatus.Matching">
            <summary>
                <p>The participant represents an unfilled position in the match that Game Center promises to fill when needed. When you make this participant the next person to take a turn in the match, Game Center fills the position and updates the <c>status</c> and <c>playerID</c> properties.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedParticipantStatusMatching</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipantStatus.Unknown">
            <summary>
                <p>The participant is in an unexpected state.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedParticipantStatusUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipantStatus.Declined">
            <summary>
                <p>The participant declined the invitation to join the match. When a participant declines an invitation to join a match, the match is automatically terminated.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedParticipantStatusDeclined</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipantStatus.Active">
            <summary>
                <p>The participant has joined the match and is an active player in it.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedParticipantStatusActive</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipantStatus.Invited">
            <summary>
                <p>The participant was invited to the match, but has not responded to the invitation.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedParticipantStatusInvited</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKTurnBasedParticipantStatus.Done">
            <summary>
                <p>The participant has exited the match. Your game sets the <c>matchOutcome</c> property to state why the participant left the match.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKTurnBasedParticipantStatusDone</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKVoiceChat">
            <summary>
            A <c>GKVoiceChat</c> object provides a voice channel that allows a set of players in a match to speak with each other.
            </summary>
            <remarks>
                <p>In an iOS game, before you can use voice chat, your game must configure an audio session that allows for both play and recording (<c>kAudioSessionCategory_PlayAndRecord</c>). For more information on audio sessions, see <em>Audio Session Programming Guide</em>.</p>
                <p>You use the <c>GKMatch</c> object to create a voice chat channel by calling its <c>voiceChatWithName:</c> method, passing in a string that identifies the name of the channel you want to join. The name is never displayed by Game Kit, and you are free to name the channels however you like. You can create multiple channels for the same match. For example, if the match has multiple teams, you might create a separate channel for each team, and an additional channel that holds all of the players in the match.</p>
                <p>To connect a player to a channel, call the voice chat object’s <c>start</c> method. After a channel is started, it receives voice data from other players already in the channel. To allow the player to speak in a channel, set the voice chat object’s <c>active</c> property to <c>true</c>. A player can listen to multiple channels simultaneously but may only speak on one channel at any given time.</p>
                <p>Your game uses the <c>volume</c> property to set the volume level for an entire channel, and the <c>setMute:forPlayer:</c> method to selectively mute other players in the channel.</p>
                <p>If there is insufficient bandwidth over wi-fi to maintain a voice chat, Game Kit may disconnect individual players from the channel or disband the channel entirely.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_isVoIPAllowed">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_get_active(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_set_active(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_get_name(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_get_playerIDs(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_set_playerStateUpdateHandler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_get_volume(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_set_volume(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_setMute_forPlayer_(System.String,System.Boolean,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_start(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.UP_GKVoiceChat_stop(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKVoiceChat" /> class.
            <br></br>Equivalent to the native <c>[[GKVoiceChat alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChat.ClassExists">
            <summary>
            Returns whether the native GKVoiceChat class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.IsVoIPAllowed">
            <summary>
            Returns whether voice chat may be used on the device.
            <br></br>Equivalent to the native <c>isVoIPAllowed</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if voice chat is available to the game.</p>
                <b>Discussion</b>
                <p>Some countries or phone carriers may restrict the availability of voice over IP services. Before creating a <c>GKVoiceChat</c> object, your game should first check to see whether voice over IP is permitted on the device.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChat.active">
            <summary>
            A Boolean value that states whether the channel is sampling the microphone.
            <br></br>Equivalent to the native <c>active</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When <c>active</c> is <c>true</c>, the voice chat samples the microphone and transmits the voice data to other players connected to the channel. Default value is <c>false</c>.</p>
                <p>Only one <c>GKVoiceChat</c> object is allowed to sample the microphone at any given time. When your game sets the <c>active</c> property to <c>true</c> on a voice chat object, the previous voice chat object that owned the microphone (if there was one) sets its <c>active</c> property to <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChat.name">
            <summary>
            The name of the voice chat (read-only)
            <br></br>Equivalent to the native <c>name</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChat.playerIDs">
            <summary>
            An array of <c>String</c> objects containing the player identifiers for the players connected to the channel. (read-only)
            <br></br>Equivalent to the native <c>playerIDs</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChat.playerStateUpdateHandler">
            <summary>
            A block that is called when a participant changes state.
            <br></br>Equivalent to the native <c>playerStateUpdateHandler</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Your game sets this property with a block to be called when the state of any participant in the chat changes (including the local player). The block receives the following parameters:</p>
                <p>
                </p>
                <em>player</em>
                <p>The player identifier for the player whose status changed.</p>
                <em>state</em>
                <p>The new state of the player. See <c>Player Voice Chat States</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChat.volume">
            <summary>
            The volume level for the voice channel.
            <br></br>Equivalent to the native <c>volume</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>All voice data received from other participants is mixed and then scaled by the <c>volume</c> property. The <c>volume</c> property has a range between <c>0.0</c> and <c>1.0</c>, inclusive. A volume level of <c>0.0</c> means the entire channel is muted; a value of <c>1.0</c> plays voice samples at full volume. The default value is <c>1.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.SetMute(System.Boolean,System.String)">
            <summary>
            Mutes a participant in the chat.
            <br></br>Equivalent to the native <c>setMute:forPlayer:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>isMuted</em>
                <p>Determines whether the player is to be muted or not.</p>
                <em>player</em>
                <p>The player identifier string for a player in the match.</p>
                <b>Discussion</b>
                <p>When a player is muted, the local player does not hear voice data transmitted by that player.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="isMuted">
            </param>
            <param name="playerID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.Start">
            <summary>
            Starts communication with other participants in a channel.
            <br></br>Equivalent to the native <c>start</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When <c>start</c> is called, the app first confirms that it has permission to use the microphone. If this is the first time that the app has tried to access the microphone, a pop-up queries the user for their permission to use voice chat. If the user declines permission, the active flag remains <c>false</c> and access is not granted.</p>
                <p>After permission is given by the user, the voice chat object connects to the channel and notifies other players connected to the channel that the local player joined the chat. While connected, voice data from other players is played automatically. If the player is connected to the channel and the voice chat object’s <c>active</c> property is <c>true</c>, then the microphone is sampled and the data sent to the channel.</p>
                <p>A device only connects to a channel when the device has a microphone and is connected via wi-fi. However, your game may configure and start a voice chat channel when the device is not currently capable of using voice chat. If conditions change to allow voice chat—for example, the device connects to a wi-fi network—the <c>GKVoiceChat</c> object then automatically connects to the channel.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property playerStateUpdateHandler</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChat.Stop">
            <summary>
            Ends communication with the channel.
            <br></br>Equivalent to the native <c>stop</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When <c>stop</c> is called, the voice chat object disconnects from the channel. You should call <c>stop</c> on a channel before the voice chat object is disposed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property playerStateUpdateHandler</c></li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKVoiceChatClient">
            <summary>
            The <c>GKVoiceChatClient</c> protocol is implemented to control the behavior of the <c>GKVoiceChatService</c> object. The voice chat client has a number of responsibilities:
            </summary>
            <remarks>
                <ul class="ul">
                    <li class="li">
                        <p>Provides a network connection that the voice chat service uses to send and receive configuration data with other participants. If this network connection is shared with other application data, the client must also disambiguate between chat configuration data and application data.</p>
                    </li>
                    <li class="li">
                        <p>Provides a participant ID that identifies the user to remote participants in the chat.</p>
                    </li>
                    <li class="li">
                        <p>Defines how a remote user’s participant ID translates into a network connection to that user.</p>
                    </li>
                    <li class="li">
                        <p>Accepts or rejects requests from remote participants to join the voice chat.</p>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.UP_GKVoiceChatClient_set__participantID_handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.UP_GKVoiceChatClient_set__voiceChatService_didNotStartWithParticipantID_error__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.UP_GKVoiceChatClient_set__voiceChatService_didReceiveInvitationFromParticipantID_callID__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.UP_GKVoiceChatClient_set__voiceChatService_didStartWithParticipantID__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.UP_GKVoiceChatClient_set__voiceChatService_didStopWithParticipantID_error__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.UP_GKVoiceChatClient_set__voiceChatService_sendData_toParticipantID__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.UP_GKVoiceChatClient_set__voiceChatService_sendRealTimeData_toParticipantID__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.ParticipantID">
            <summary>
            (<b>required</b>) Returns a string that uniquely identifies the local user. (required)
            <br></br>Equivalent to the native <c>participantID</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A string that can be used by other participants to connect to the local user.</p>
                <b>Discussion</b>
                <p>The client decides the format and meaning of the participant identifier. For more information, see the <em>Game Center Programming Guide</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.DidNotStart(U3DXT.iOS.Native.GameKit.GKVoiceChatService,System.String,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Received by the client when an attempt to establish a voice chat with another participant failed.
            <br></br>Equivalent to the native <c>voiceChatService:didNotStartWithParticipantID:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>voiceChatService</em>
                <p>The voice chat service that was establishing the connection.</p>
                <em>participantID</em>
                <p>A string that uniquely identifies the other user.</p>
                <em>error</em>
                <p>The error that prevented the voice chat from being established.</p>
                <b>Discussion</b>
                <p>Your application can implement this method to notify the user that an error occurred when establishing a connection.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="voiceChatService">
            </param>
            <param name="participantID">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.DidReceiveInvitation(U3DXT.iOS.Native.GameKit.GKVoiceChatService,System.String,System.Int32)">
            <summary>
            (optional) Asks the client to accept or reject an invitation from a remote participant.
            <br></br>Equivalent to the native <c>voiceChatService:didReceiveInvitationFromParticipantID:callID:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>voiceChatService</em>
                <p>The service that received the request.</p>
                <em>participantID</em>
                <p>A string that uniquely identifies the other user.</p>
                <em>callID</em>
                <p>An integer that uniquely identifies the request.</p>
                <b>Discussion</b>
                <p>If this method is not implemented by the client, the voice chat service automatically accept requests from other participants.</p>
                <p>This method should call the service’s <c>acceptCallID:error:</c> method if it wants to accept the request or the <c>denyCallID:</c> to reject it.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="voiceChatService">
            </param>
            <param name="participantID">
            </param>
            <param name="callID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.DidStart(U3DXT.iOS.Native.GameKit.GKVoiceChatService,System.String)">
            <summary>
            (optional) Received by the client when a voice chat with another participant is established.
            <br></br>Equivalent to the native <c>voiceChatService:didStartWithParticipantID:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>voiceChatService</em>
                <p>The voice chat service that initiated the connection.</p>
                <em>participantID</em>
                <p>A string that uniquely identifies the other user.</p>
                <b>Discussion</b>
                <p>Your client can use this method to update the user interface to show that a connection has been established.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="voiceChatService">
            </param>
            <param name="participantID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.DidStop(U3DXT.iOS.Native.GameKit.GKVoiceChatService,System.String,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Received by the client when a previously established voice chat has ended.
            <br></br>Equivalent to the native <c>voiceChatService:didStopWithParticipantID:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>voiceChatService</em>
                <p>The voice chat that maintained the connection.</p>
                <em>participantID</em>
                <p>A string that uniquely identifies the user who disconnected.</p>
                <em>error</em>
                <p>The error that caused the chat to end.</p>
                <b>Discussion</b>
                <p>Your application can implement this method to notify the user that an established voice connection has ended. This may occur when another participant ends the chat or if the network connection was lost.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="voiceChatService">
            </param>
            <param name="participantID">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.Send(U3DXT.iOS.Native.GameKit.GKVoiceChatService,U3DXT.iOS.Native.Foundation.NSData,System.String)">
            <summary>
            (<b>required</b>) A request for the client to send data to a participant. (required)
            <br></br>Equivalent to the native <c>voiceChatService:sendData:toParticipantID:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>voiceChatService</em>
                <p>The service that requested the transmission.</p>
                <em>data</em>
                <p>The data to send.</p>
                <em>participantID</em>
                <p>A string that uniquely identifies the participant to send the data to.</p>
                <b>Discussion</b>
                <p>An implementation of this method must reliably transmit the data to the participant identified by <em>participantID</em>. When the client on the other end receives the data, it should forward it to the voice chat service by calling the service’s <c>receivedData:fromParticipantID:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="voiceChatService">
            </param>
            <param name="data">
            </param>
            <param name="participantID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatClient.SendRealTime(U3DXT.iOS.Native.GameKit.GKVoiceChatService,U3DXT.iOS.Native.Foundation.NSData,System.String)">
            <summary>
            (optional) Asks the client to send data to a participant that must get there quickly.
            <br></br>Equivalent to the native <c>voiceChatService:sendRealTimeData:toParticipantID:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>voiceChatService</em>
                <p>The service that requested the transmission.</p>
                <em>data</em>
                <p>The data to send.</p>
                <em>participantID</em>
                <p>A string that uniquely identifies the participant to send the data to.</p>
                <b>Discussion</b>
                <p>An implementation of this method maps the <em>participantID</em> string to a known participant and transmits the data to them. Data transmitted by this method can be sent unreliably. When the client on the other end receives this data, it should forward it to the voice chat service by calling the service’s <c>receivedRealTimeData:fromParticipantID:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="voiceChatService">
            </param>
            <param name="data">
            </param>
            <param name="participantID">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatClient._participantID_handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_participantID_handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatClient._voiceChatService_didNotStartWithParticipantID_error__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_voiceChatService_didNotStartWithParticipantID_error__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatClient._voiceChatService_didReceiveInvitationFromParticipantID_callID__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_voiceChatService_didReceiveInvitationFromParticipantID_callID__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatClient._voiceChatService_didStartWithParticipantID__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_voiceChatService_didStartWithParticipantID__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatClient._voiceChatService_didStopWithParticipantID_error__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_voiceChatService_didStopWithParticipantID_error__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatClient._voiceChatService_sendData_toParticipantID__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_voiceChatService_sendData_toParticipantID__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatClient._voiceChatService_sendRealTimeData_toParticipantID__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_voiceChatService_sendRealTimeData_toParticipantID__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKVoiceChatPlayerState">
            <summary>
            The states returned to your game about other players in a voice chat.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatPlayerState.Speaking">
            <summary>
                <p>The player began speaking.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatPlayerSpeaking</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatPlayerState.Disconnected">
            <summary>
                <p>The player left the channel.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatPlayerDisconnected</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatPlayerState.Connecting">
            <summary>
                <p>The player is connecting to the channel, but is not yet connected.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatPlayerConnecting</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatPlayerState.Silent">
            <summary>
                <p>The player stopped speaking.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatPlayerSilent</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatPlayerState.Connected">
            <summary>
                <p>The player connected to the channel.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatPlayerConnected</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKVoiceChatService">
            <summary>
            The <c>GKVoiceChatService</c> class allows your application to connect two iOS devices into a voice chat.
            </summary>
            <remarks>
                <p>Before you can use voice chat, your application must configure an audio session that allows for both play and recording (<c>kAudioSessionCategory_PlayAndRecord</c>). For more information on audio sessions, see <em>Audio Session Programming Guide</em>.</p>
                <p>The voice chat service uses a <c>client</c> implemented by your application to find and connect to other participants. Each participant in the chat is identified by a unique <strong>participant identifier</strong> string. The client provides a participant identifier for the local user and translates other participant identifiers into connections to other users.  The format and mechanism used to translate participant identifiers into network connections is defined by the client. See <em>Game Center Programming Guide</em> for a more complete discussion.</p>
                <p>Your application can configure the voice chat service to control the volume level of both local and remote participants and to detect when someone is speaking.</p>
                <p>To use the voice chat service, your application retrieves the default service and attaches a client to it, then either connects to another participant or waits for them to start a connection.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatService.ErrorDomain">
            <summary>
                <p>An error occurred in <c>GKVoiceChatService</c>.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceErrorDomain</c> constant.
            </summary>
            <remarks>
            The <c>GKVoiceChatService</c> error domain.
            <p></p><p></p>This is a constant for "Voice Chat Service Error Domain".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_defaultVoiceChatService">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_isVoIPAllowed">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_get_client(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_set_client(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_get_inputMeteringEnabled(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_set_inputMeteringEnabled(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_get_inputMeterLevel(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_get_microphoneMuted(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_set_microphoneMuted(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_get_outputMeteringEnabled(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_set_outputMeteringEnabled(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_get_outputMeterLevel(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_get_remoteParticipantVolume(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_set_remoteParticipantVolume(System.String,System.Single)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_acceptCallID_error_(System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_denyCallID_(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_receivedData_fromParticipantID_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_receivedRealTimeData_fromParticipantID_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_startVoiceChatWithParticipantID_error_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.UP_GKVoiceChatService_stopVoiceChatWithParticipantID_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.GameKit.GKVoiceChatService" /> class.
            <br></br>Equivalent to the native <c>[[GKVoiceChatService alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatService.ClassExists">
            <summary>
            Returns whether the native GKVoiceChatService class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.DefaultVoiceChatService">
            <summary>
            Retrieves the singleton chat service.
            <br></br>Equivalent to the native <c>defaultVoiceChatService</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The chat service.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.IsVoIPAllowed">
            <summary>
            Returns whether voice chat is allowed to be used on the device.
            <br></br>Equivalent to the native <c>isVoIPAllowed</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if voice chat is available to the application.</p>
                <b>Discussion</b>
                <p>Some countries or phone carriers may restrict the availability of voice over IP services. Before retrieving the shared voice chat service object, your application should check to see whether voice chat is available.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatService.client">
            <summary>
            An object that the voice chat service uses to communicate with remote participants.
            <br></br>Equivalent to the native <c>client</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The client’s chief responsibility is to provide a network connection that the voice chat service can use to connect to another participant.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatService.inputMeteringEnabled">
            <summary>
            A Boolean value that indicates whether the microphone’s sound level is being monitored.
            <br></br>Equivalent to the native <c>inputMeteringEnabled</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>true</c>, your application can read the <c>inputMeterLevel</c> property to monitor the sound level of the microphone. If <c>false</c>, the value of the <c>inputMeterLevel</c> property is undefined. Default is <c>false</c>. When your application doesn’t need to monitor the microphone, it should set this property to <c>false</c> to improve performance.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property inputMeterLevel</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatService.inputMeterLevel">
            <summary>
            The volume, in decibels (db), being received by the microphone. (read-only)
            <br></br>Equivalent to the native <c>inputMeterLevel</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is undefined if <c>inputMeteringEnabled</c> is set to <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property inputMeteringEnabled</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatService.microphoneMuted">
            <summary>
            A Boolean value that determines whether the user’s microphone is muted.
            <br></br>Equivalent to the native <c>microphoneMuted</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                    <c>true</c> if the user’s microphone is turned off; <c>false</c> if the user’s speech is being transmitted to remote participants. The default is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatService.outputMeteringEnabled">
            <summary>
            A Boolean value that indicates whether the voice level of remote participants is monitored.
            <br></br>Equivalent to the native <c>outputMeteringEnabled</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>true</c>, your application can read the <c>outputMeterLevel</c> property to monitor sound level of remote participants. If <c>false</c>, the value of the <c>outputMeterLevel</c> property is undefined. Default is <c>false</c>. When your application doesn’t need to monitor remote participants, it should set this property to <c>false</c> to improve performance.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatService.outputMeterLevel">
            <summary>
            The volume, in decibels (db), being received from all other participants. (read-only)
            <br></br>Equivalent to the native <c>outputMeterLevel</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is undefined if <c>outputMeteringEnabled</c> is set to <c>false</c>.</p>
                <p>The volume level is the aggregate volume of all remote participants, modified by the <c>remoteParticipantVolume</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.GameKit.GKVoiceChatService.remoteParticipantVolume">
            <summary>
            A float that scales the volume of all remote participants.
            <br></br>Equivalent to the native <c>remoteParticipantVolume</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value should be between <c>0.0</c> (muted) and <c>1.0</c> (full volume). The default is <c>1.0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.AcceptCallID(System.Int32,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Accepts a request from a remote user to establish a voice chat.
            <br></br>Equivalent to the native <c>acceptCallID:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>callID</em>
                <p>An integer that identifies the connection request.</p>
                <em>error</em>
                <p>If an error occurs, upon return contains an <c>NSError</c> object that describes the problem. Pass <c>NULL</c> if you do not want error information.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the connection was established; otherwise <c>false</c>.</p>
                <b>Discussion</b>
                <p>When a remote user requests a voice chat, the voice chat service calls the client’s <c>voiceChatService:didReceiveInvitationFromParticipantID:callID:</c> method. The client calls this method to accept the request or <c>denyCallID:</c> to reject it.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="callID">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.DenyCallID(System.Int32)">
            <summary>
            Rejects a request to establish a voice chat.
            <br></br>Equivalent to the native <c>denyCallID:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>callID</em>
                <p>An integer that identifies the connection request.</p>
                <b>Discussion</b>
                <p>When a remote user requests a voice chat, the voice chat service calls the client’s <c>voiceChatService:didReceiveInvitationFromParticipantID:callID:</c> method. The client calls this method to reject the request or <c>acceptCallID:error:</c> to accept it.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="callID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.ReceivedData(U3DXT.iOS.Native.Foundation.NSData,System.String)">
            <summary>
            Called by the client to deliver new data received from a remote participant.
            <br></br>Equivalent to the native <c>receivedData:fromParticipantID:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>arbitraryData</em>
                <p>The data received from a participant.</p>
                <em>participantID</em>
                <p>A string that uniquely identifies the participant who sent the data.</p>
                <b>Discussion</b>
                <p>The voice chat service uses a network connection provided by the client to exchange information between the participants. When the client receives information intended for the voice chat service, it should call this method to transfer it.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>voiceChatService:sendData:toParticipantID:</c>
                    </li>
                </ul>
            </remarks>
            <param name="arbitraryData">
            </param>
            <param name="participantID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.ReceivedRealTimeData(U3DXT.iOS.Native.Foundation.NSData,System.String)">
            <summary>
            Called by the client to deliver voice data received from a remote participant..
            <br></br>Equivalent to the native <c>receivedRealTimeData:fromParticipantID:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>audio</em>
                <p>The audio data that was received from the other participant.</p>
                <em>participantID</em>
                <p>A string that uniquely identifies the speaking participant.</p>
                <b>Discussion</b>
                <p>The voice chat service uses a network connection provided by the client to exchange information between the participants. When the client receives information intended for the voice chat service, it should call this method to transfer it.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>voiceChatService:sendRealTimeData:toParticipantID:</c>
                    </li>
                </ul>
            </remarks>
            <param name="audio">
            </param>
            <param name="participantID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.StartVoiceChat(System.String,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Sends a request to another participant to join the voice chat.
            <br></br>Equivalent to the native <c>startVoiceChatWithParticipantID:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>participantID</em>
                <p>A string that uniquely identifies the participant to connect to.</p>
                <em>error</em>
                <p>If an error occurs, upon return contains an <c>NSError</c> object that describes the problem. Pass <c>NULL</c> if you do not want error information.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the connection was successfully created.</p>
                <b>Discussion</b>
                <p>The voice chat service calls the client’s <c>voiceChatService:sendData:toParticipantID:</c> method to send the connection request to the remote participant.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="participantID">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.GameKit.GKVoiceChatService.StopVoiceChat(System.String)">
            <summary>
            Ends a previously established voice chat.
            <br></br>Equivalent to the native <c>stopVoiceChatWithParticipantID:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>participantID</em>
                <p>A string that uniquely identifies the participant in the chat.</p>
                <b>Discussion</b>
                <p>When this method is called, the client’s <c>voiceChatService:didStopWithParticipantID:error:</c> method is called.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="participantID">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError">
            <summary>
            Error codes for the <c>GKVoiceChatService</c> error domain.
            </summary>
            <remarks>
                <br />
            	Provide Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.RemoteParticipantBusyError">
            <summary>
                <p>The remote participant is already connected to a voice chat.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceRemoteParticipantBusyError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.RemoteParticipantResponseInvalidError">
            <summary>
                <p>Invalid data was received from a remote participant.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceRemoteParticipantResponseInvalidError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.InvalidCallIDError">
            <summary>
                <p>The voice chat service didn’t recognize the call identifier.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceInvalidCallIDError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.AudioUnavailableError">
            <summary>
                <p>The audio hardware is unavailable to the voice chat service.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceAudioUnavailableError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.NoRemotePacketsError">
            <summary>
                <p>The voice chat service stopped receiving packets from the remote participant.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceNoRemotePacketsError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.UnableToConnectError">
            <summary>
                <p>The voice chat service was unable to establish a connection with another user.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceUnableToConnectError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.RemoteParticipantDeclinedInviteError">
            <summary>
                <p>A remote participant declined an invitation.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceRemoteParticipantDeclinedInviteError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.NetworkConfigurationError">
            <summary>
                <p>The voice chat service had problems accessing the network.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceNetworkConfigurationError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.MethodCurrentlyInvalidError">
            <summary>
                <p>A method on the voice chat service was called when it was not allowed to be called (for example, attempting to connect when the voice chat service was already connected).</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceMethodCurrentlyInvalidError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.InternalError">
            <summary>
                <p>A serious error occurred inside the voice chat service.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceInternalError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.RemoteParticipantCancelledError">
            <summary>
                <p>A remote participant attempted to start a voice chat, then canceled.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceRemoteParticipantCancelledError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.UninitializedClientError">
            <summary>
                <p>The application did not set a client before calling voice chat service methods.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceUninitializedClientError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.InvalidParameterError">
            <summary>
                <p>A parameter had an unrecognized value.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceInvalidParameterError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.ClientMissingRequiredMethodsError">
            <summary>
                <p>The voice chat service did not find an expected method defined by the client.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceClientMissingRequiredMethodsError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.UnsupportedRemoteVersionError">
            <summary>
                <p>The other participant is running a different version of the voice chat service.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceUnsupportedRemoteVersionError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.RemoteParticipantHangupError">
            <summary>
                <p>The remote participant in a voice chat stopped the chat.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceRemoteParticipantHangupError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.GameKit.GKVoiceChatServiceError.OutOfMemoryError">
            <summary>
                <p>The voice chat service was unable to allocate memory required to operate.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>GKVoiceChatServiceOutOfMemoryError</c> enum constant.
            </summary>
        </member>
    </members>
</doc>
