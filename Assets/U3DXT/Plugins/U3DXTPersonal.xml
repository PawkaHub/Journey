<?xml version="1.0"?>
<doc>
    <assembly>
        <name>U3DXTPersonal</name>
    </assembly>
    <members>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABAddressBook">
            <summary>
            Reference to an object used to interact with the Address Book database.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABAddressBook.ErrorDomain">
            <summary>
                <p>The main error domain for Address Book framework operations.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>ABAddressBookErrorDomain</c> constant.
            </summary>
            <remarks>
            Error domain under which Address Book errors are grouped.
            <p></p><p></p>This is a constant for "Address Book Error Domain".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyArrayOfAllGroups(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyArrayOfAllGroupsInSource(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookGetGroupCount(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookGetGroupWithRecordID(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyArrayOfAllPeople(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyArrayOfAllPeopleInSource(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyArrayOfAllPeopleInSourceWithSortOrdering(System.String,System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyPeopleWithName(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookGetPersonCount(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookGetPersonWithRecordID(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyArrayOfAllSources(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyDefaultSource(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookGetSourceWithRecordID(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCopyLocalizedLabel(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookAddRecord(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookRemoveRecord(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCreate">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookCreateWithOptions(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookGetAuthorizationStatus">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookHasUnsavedChanges(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookRequestAccessWithCompletion(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookRevert(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.UP_ABAddressBook_ABAddressBookSave(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyLocalizedLabel(System.String)">
            <summary>
            Returns a localized version of a record-property label.
            <br></br>Equivalent to the native <c>ABAddressBookCopyLocalizedLabel</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>label</em>
                <p>The label to localize.</p>
                <b>Return Value</b>
                <p>The label localized to the user’s locale.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="label">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.Create">
            <summary>
            Creates a new address book object with data from the Address Book database. (<strong class="deprecated">Deprecated.</strong> Use the <c>ABAddressBookCreateWithOptions</c> function instead.)
            <br></br>Equivalent to the native <c>ABAddressBookCreate</c> function.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>An address book object.</p>
                <b>Discussion</b>
                <p>Changes made to the returned address book are reflected in the Address Book database only after saving the address book with <c>ABAddressBookSave</c>.</p>
                <p>
                    <strong>Important:</strong> You must ensure that an instance of <c>ABAddressBookRef</c> is used by only one thread.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.Create(System.Collections.Generic.Dictionary{System.Object,System.Object},U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Creates a new address book object with data from the Address Book database.
            <br></br>Equivalent to the native <c>ABAddressBookCreateWithOptions</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>options</em>
                <p>Reserved. Pass <c>NULL</c>.</p>
                <em>error</em>
                <p>On error, contains error information. See  “Address Book Errors.” </p>
                <b>Return Value</b>
                <p>An address book object, <c>NULL</c>, or an empty database.</p>
                <b>Discussion</b>
                <p>Changes made to the returned address book are reflected in the Address Book database only after saving the address book with <c>ABAddressBookSave</c>.</p>
                <p>On iOS 6.0 and later, if the caller does not have access to the Address Book database:</p>
                <ul class="ul">
                    <li class="li">
                        <p>For apps linked against iOS 6.0 and later, this function returns <c>NULL</c>.</p>
                    </li>
                    <li class="li">
                        <p>For apps linked against previous version of iOS, this function returns an empty read-only database. </p>
                    </li>
                </ul>
                <p>If your app syncs information with the database, it must not sync data when it does not have access to the database.</p>
                <p>
                    <strong>Important:</strong> You must ensure that an instance of <c>ABAddressBookRef</c> is used by only one thread.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="options">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.GetAuthorizationStatus">
            <summary>
            Returns the authorization status of your app for accessing address book data.
            <br></br>Equivalent to the native <c>ABAddressBookGetAuthorizationStatus</c> function.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The authorization status for your app.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyArrayOfAllGroups">
            <summary>
            Returns an array with all the groups in an address book.
            <br></br>Equivalent to the native <c>ABAddressBookCopyArrayOfAllGroups</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book from which to return the groups.</p>
                <b>Return Value</b>
                <p>An array containing the groups in <em>addressBook</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyArrayOfAllGroupsInSource(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns an array of all groups from a particular source.
            <br></br>Equivalent to the native <c>ABAddressBookCopyArrayOfAllGroupsInSource</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book whose records are being returned.</p>
                <em>source</em>
                <p>The source whose groups are being returned.</p>
                <b>Return Value</b>
                <p>An array of all groups from a particular source.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="source">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.GetGroupCount">
            <summary>
            Returns the number of groups in an address book.
            <br></br>Equivalent to the native <c>ABAddressBookGetGroupCount</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book whose record count is being returned.</p>
                <b>Return Value</b>
                <p>The number of groups in <em>addressBook</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.GetGroup(System.Int32)">
            <summary>
            Returns the group with a given record ID.
            <br></br>Equivalent to the native <c>ABAddressBookGetGroupWithRecordID</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book in which to look for the record.</p>
                <em>recordID</em>
                <p>The record ID of the group being returned.</p>
                <b>Return Value</b>
                <p>If found, the group with <em>recordID</em> as its identifier; otherwise, <c>NULL</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="recordID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyArrayOfAllPeople">
            <summary>
            Returns all the person records in an address book.
            <br></br>Equivalent to the native <c>ABAddressBookCopyArrayOfAllPeople</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book whose person records are being returned.</p>
                <b>Return Value</b>
                <p>Array containing the person records in <em>addressBook</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyArrayOfAllPeopleInSource(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns an array of all person records from a particular source.
            <br></br>Equivalent to the native <c>ABAddressBookCopyArrayOfAllPeopleInSource</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book whose records are being returned.</p>
                <em>source</em>
                <p>The source whose records are being returned.</p>
                <b>Return Value</b>
                <p>An array of all person records from a particular source.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="source">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyArrayOfAllPeopleInSource(U3DXT.iOS.Native.AddressBook.ABRecord,System.UInt32)">
            <summary>
            Returns an array of all person records in the address book, sorted with the specified order.
            <br></br>Equivalent to the native <c>ABAddressBookCopyArrayOfAllPeopleInSourceWithSortOrdering</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book whose person records are being returned.</p>
                <em>source</em>
                <p>The source whose records are being returned.</p>
                <em>sortOrdering</em>
                <p>Indicates whether to sort by first name or by last name. See <c>“Sort Order”</c>.</p>
                <b>Return Value</b>
                <p>An array of all person records in the address book database, sorted by <c>sortOrdering</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="source">
            </param>
            <param name="sortOrdering">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyPeople(System.String)">
            <summary>
            Performs a prefix search on the composite names of people in an address book and returns an array of persons that match the search criteria.
            <br></br>Equivalent to the native <c>ABAddressBookCopyPeopleWithName</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book in which to search.</p>
                <em>name</em>
                <p>The search term. Examples: <c>"Mary"</c>, <c>"Smi"</c>, <c>"Hu Yan"</c>.</p>
                <b>Return Value</b>
                <p>Array containing person records (<c>ABRecordRef</c> objects) that match <em>name</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="name">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.GetPersonCount">
            <summary>
            Returns the number of person records in an address book.
            <br></br>Equivalent to the native <c>ABAddressBookGetPersonCount</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book whose person records are being counted.</p>
                <b>Return Value</b>
                <p>The number of person records in <em>addressBook</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.GetPerson(System.Int32)">
            <summary>
            Returns the person record with a given record ID.
            <br></br>Equivalent to the native <c>ABAddressBookGetPersonWithRecordID</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book in which to search for <em>recordID</em>.</p>
                <em>recordID</em>
                <p>The record identifier to seek in <em>addressBook</em>.</p>
                <b>Return Value</b>
                <p>If found, the person record with <em>recordID</em> as its identifier, otherwise <c>NULL</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="recordID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyArrayOfAllSources">
            <summary>
            Returns an array of all sources in the address book.
            <br></br>Equivalent to the native <c>ABAddressBookCopyArrayOfAllSources</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book whose source records are being returned.</p>
                <b>Return Value</b>
                <p>Array containing the source records in <em>addressBook</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.CopyDefaultSource">
            <summary>
            Returns the default source.
            <br></br>Equivalent to the native <c>ABAddressBookCopyDefaultSource</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book whose default source is being returned.</p>
                <b>Return Value</b>
                <p>The default source record.</p>
                <b>Discussion</b>
                <p>This is the source used when creating new records if no source is specified.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.GetSource(System.Int32)">
            <summary>
            Returns the source record with the given record ID.
            <br></br>Equivalent to the native <c>ABAddressBookGetSourceWithRecordID</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book in which to search for <em>recordID</em>.</p>
                <em>sourceID</em>
                <p>The record identifier to seek in <em>addressBook</em>.</p>
                <b>Return Value</b>
                <p>If found, the source record with <em>recordID</em> as its identifier, otherwise <c>NULL</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="sourceID">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.AddRecord(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Adds a record to an address book.
            <br></br>Equivalent to the native <c>ABAddressBookAddRecord</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book to which <em>record</em> is added.</p>
                <em>record</em>
                <p>The record to add to <em>addressBook</em>.</p>
                <em>error</em>
                <p>On error, contains error information. See  “Address Book Errors.” </p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="record">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.RemoveRecord(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Removes a record from an address book.
            <br></br>Equivalent to the native <c>ABAddressBookRemoveRecord</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book from which <em>record</em> is to be removed.</p>
                <em>record</em>
                <p>The record to remove from <em>addressBook</em>.</p>
                <em>error</em>
                <p>On error, contains error information. See  “Address Book Errors.” </p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="record">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.HasUnsavedChanges">
            <summary>
            Indicates whether an address book has changes that have not been saved to the Address Book database.
            <br></br>Equivalent to the native <c>ABAddressBookHasUnsavedChanges</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book in question.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when <em>addressBook</em> contains unsaved changes, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.RequestAccess(System.Action{System.Boolean,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Requests access to address book data from the user.
            <br></br>Equivalent to the native <c>ABAddressBookRequestAccessWithCompletion</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book in question.</p>
                <em>completion</em>
                <p>The completion handler, called once access has been granted or denied by the user.</p>
                <b>Discussion</b>
                <p>Use this function to request access to address book data. This call will not block while the user is being asked for access, allowing your app to continue running. Until access has been granted, any address book references your app has will not contain any data, and any attempt to modify data will fail with an error type of <c>kABOperationNotPermittedByUserError</c>. The user is only asked for permission the first time you request access. Later calls use the permission granted by the user.</p>
                <p>The completion handler is called on an arbitrary queue. If your app uses an address book throughout the app, you are responsible for ensuring that all usage of that address book is dispatched to a single queue to ensure correct thread-safe operation.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="completion"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.Revert">
            <summary>
            Discards unsaved changes in an address book.
            <br></br>Equivalent to the native <c>ABAddressBookRevert</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book to revert.</p>
                <b>Discussion</b>
                <p>The address book is loaded with the information in the Address Book database.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABAddressBook.Save(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Saves any unsaved changes to the Address Book database.
            <br></br>Equivalent to the native <c>ABAddressBookSave</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book to save.</p>
                <em>error</em>
                <p>On error, contains error information. See  “Address Book Errors.” </p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="error">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABAddressBookErrors">
            <summary>
            Errors that can be raised under the Address Book error domain.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABAddressBookErrors.UserError">
            <summary>
                <p>The operation is not allowed because the user denied access to the Address Book database.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABOperationNotPermittedByUserError</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABAddressBookErrors.StoreError">
            <summary>
                <p>The operation is not allowed by the Address Book database, because the contact’s source does not support it.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABOperationNotPermittedByStoreError</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABAuthorizationStatus">
            <summary>
            Different possible values for the authorization status of an app with respect to address book data.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABAuthorizationStatus.Restricted">
            <summary>
                <p>The app is not authorized to access address book data. The user cannot change this access, possibly due to restrictions such as parental controls.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABAuthorizationStatusRestricted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABAuthorizationStatus.Denied">
            <summary>
                <p>The user explicitly denied access to address book data for this app.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABAuthorizationStatusDenied</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABAuthorizationStatus.NotDetermined">
            <summary>
                <p>No authorization status could be determined.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABAuthorizationStatusNotDetermined</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABAuthorizationStatus.Authorized">
            <summary>
                <p>The app is authorized to access address book data.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABAuthorizationStatusAuthorized</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABGroup">
            <summary>
            Functions belonging to ABGroup.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABGroup.kABGroupNameProperty">
            <summary>
                <p>Group name property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABGroupNameProperty</c> constant.
            </summary>
            <remarks>
            This constant identifies the properties of groups.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Group Properties".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.UP_ABGroup_ABGroupCopySource(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.UP_ABGroup_ABGroupCreate">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.UP_ABGroup_ABGroupCreateInSource(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.UP_ABGroup_ABGroupAddMember(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.UP_ABGroup_ABGroupCopyArrayOfAllMembers(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.UP_ABGroup_ABGroupCopyArrayOfAllMembersWithSortOrdering(System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.UP_ABGroup_ABGroupRemoveMember(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.CopySource(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns the source that the group is from.
            <br></br>Equivalent to the native <c>ABGroupCopySource</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>group</em>
                <p>The group whose source is being returned.</p>
                <b>Return Value</b>
                <p>The source that the group record is from.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="group">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.Create">
            <summary>
            Creates a group record.
            <br></br>Equivalent to the native <c>ABGroupCreate</c> function.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.CreateInSource(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Creates a group in a particular source.
            <br></br>Equivalent to the native <c>ABGroupCreateInSource</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>source</em>
                <p>The source to create the group in.</p>
                <b>Return Value</b>
                <p>A new group in the specified source.</p>
                <b>Discussion</b>
                <p>If <c>source</c> is <c>NULL</c>, the group is created in the default source.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="source">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.AddMember(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Adds a person record to a group.
            <br></br>Equivalent to the native <c>ABGroupAddMember</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>group</em>
                <p>The group that the person record is being added to.</p>
                <em>person</em>
                <p>The person record to add to <em>group</em>.</p>
                <em>error</em>
                <p>On error, information about the cause.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when <c>person</c> is added to group; otherwise <c>false</c>.</p>
                <b>Discussion</b>
                <p>Before a person record can be added to a group, the record must be saved to the Address Book database.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="group">
            </param>
            <param name="person">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.CopyArrayOfAllMembers(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns the records in a group.
            <br></br>Equivalent to the native <c>ABGroupCopyArrayOfAllMembers</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>group</em>
                <p>The group whose records are being returned.</p>
                <b>Return Value</b>
                <p>An array containing the records in <em>group</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="group">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.CopyArrayOfAllMembers(U3DXT.iOS.Native.AddressBook.ABRecord,System.UInt32)">
            <summary>
            Returns the records in a group, using a sort ordering.
            <br></br>Equivalent to the native <c>ABGroupCopyArrayOfAllMembersWithSortOrdering</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>group</em>
                <p>The group whose records are being returned.</p>
                <em>sortOrdering</em>
                <p>The order in which you want the returned records. See  “Sort Order”  in <em>ABPerson Reference</em>.</p>
                <b>Return Value</b>
                <p>An array containing the records in <em>group</em> using <em>sortOrdering</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="group">
            </param>
            <param name="sortOrdering">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABGroup.RemoveMember(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Removes a record from a group.
            <br></br>Equivalent to the native <c>ABGroupRemoveMember</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>group</em>
                <p>The group from which to remove <c>record</c>.</p>
                <em>record</em>
                <p>The record to remove from <c>group</c>.</p>
                <em>error</em>
                <p>On error, information about the cause.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when <em>record</em> is removed from <em>group</em>; otherwise <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="group">
            </param>
            <param name="member">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABMultiValue">
            <summary>
            Reference to a multivalue property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABMultiValue.kABMultiValueInvalidIdentifier">
            <summary>
                <p>Invalid multivalue property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABMultiValueInvalidIdentifier</c> constant.
            </summary>
            <remarks>
            This preprocessor definition identifies an multivalue property with values whose type does not match its declared type.
            <p></p><b>Discussion</b><p>See <c>ABMultiValueIdentifier</c>.</p><br />
            	Feedback
            <p></p>This is a constant for "Invalid Multivalue-Property Identifier".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueCreateMutable(System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueCreateMutableCopy(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueGetPropertyType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueGetIdentifierAtIndex(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueGetIndexForIdentifier(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueCopyArrayOfAllValues(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueCopyLabelAtIndex(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueCopyValueAtIndex(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueGetCount(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueGetFirstIndexOfValue(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueAddValueAndLabel(System.String,System.String,System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueInsertValueAndLabelAtIndex(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueRemoveValueAndLabelAtIndex(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueReplaceLabelAtIndex(System.String,System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.UP_ABMultiValue_ABMultiValueReplaceValueAtIndex(System.String,System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.CreateMutable(System.UInt32)">
            <summary>
            Returns a new, empty, mutable multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueCreateMutable</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>type</em>
                <p>The type of the values that the new property will contain.</p>
                <b>Return Value</b>
                <p>An empty multivalue property whose values will be of type <em>type</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>ABMultiValueGetPropertyType</c>
                    </li>
                </ul>
            </remarks>
            <param name="type">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.AddValueAndLabel(U3DXT.iOS.Native.AddressBook.ABMutableMultiValue,U3DXT.iOS.Native.CoreFoundation.CFType,System.String,System.Int32)">
            <summary>
            Adds a value and its corresponding label to a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueAddValueAndLabel</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property to add <em>value</em> and <em>label</em> to.</p>
                <em>value</em>
                <p>The value to add to <em>multiValue</em>.</p>
                <em>label</em>
                <p>The label for <em>value</em>.</p>
                <em>outIdentifier</em>
                <p>The address at which to place the identifier of the added value. Pass <c>NULL</c> to ignore the identifier.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when value is added to multiValue successfully, <c>false</c> otherwise.</p>
                <b>Discussion</b>
                <p>This function performs no type checking. It allows the addition of values whose type does not match the type declared for <em>multiValue</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>ABMultiValueCreateMutable</c>
                    </li>
                </ul>
            </remarks>
            <param name="multiValue">
            </param>
            <param name="value">
            </param>
            <param name="label">
            </param>
            <param name="outIdentifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.InsertValueAndLabelAtIndex(U3DXT.iOS.Native.AddressBook.ABMutableMultiValue,U3DXT.iOS.Native.CoreFoundation.CFType,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a value and a label into a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueInsertValueAndLabelAtIndex</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property into which to insert <em>value</em>.</p>
                <em>value</em>
                <p>The value to insert.</p>
                <em>label</em>
                <p>The label to insert.</p>
                <em>index</em>
                <p>The location, in <em>multiValue</em>, at which to insert <em>value</em> and <em>label</em>.</p>
                <p>Raises an exception when out of bounds.</p>
                <em>outIdentifier</em>
                <p>On output, the identifier of the added value.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when value and label are inserted successfully into multiValue, <c>false</c> otherwise.</p>
                <b>Discussion</b>
                <p>This function performs no type checking. It allows the insertion of values whose type does not match the type declared for <em>multiValue</em>.</p>
                <p>This function takes an index. If you have an identifier, use the <c>ABMultiValueGetIndexForIdentifier</c> function to get the corresponding index.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>ABMultiValueCreateMutable</c>
                    </li>
                </ul>
            </remarks>
            <param name="multiValue">
            </param>
            <param name="value">
            </param>
            <param name="label">
            </param>
            <param name="index">
            </param>
            <param name="outIdentifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.RemoveValueAndLabelAtIndex(U3DXT.iOS.Native.AddressBook.ABMutableMultiValue,System.Int32)">
            <summary>
            Removes a value from a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueRemoveValueAndLabelAtIndex</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property from which to remove the value at <em>index</em>.</p>
                <em>index</em>
                <p>The location, in <em>multiValue</em>, of the value being removed.</p>
                <p>Raises an exception when out of bounds.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Discussion</b>
                <p>This function takes an index. If you have an identifier, use the <c>ABMultiValueGetIndexForIdentifier</c> function to get the corresponding index.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="multiValue">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.ReplaceLabelAtIndex(U3DXT.iOS.Native.AddressBook.ABMutableMultiValue,System.String,System.Int32)">
            <summary>
            Replaces a label in a multivalue property with another label.
            <br></br>Equivalent to the native <c>ABMultiValueReplaceLabelAtIndex</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property containing the label to replace.</p>
                <em>label</em>
                <p>The new label.</p>
                <em>index</em>
                <p>The location, in <em>multiValue</em>, of the label to replace.</p>
                <p>Raises an exception when out of bounds.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Discussion</b>
                <p>This function takes an index. If you have an identifier, use the <c>ABMultiValueGetIndexForIdentifier</c> function to get the corresponding index.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="multiValue">
            </param>
            <param name="label">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.ReplaceValueAtIndex(U3DXT.iOS.Native.AddressBook.ABMutableMultiValue,U3DXT.iOS.Native.CoreFoundation.CFType,System.Int32)">
            <summary>
            Replaces a value in a multivalue property with another value.
            <br></br>Equivalent to the native <c>ABMultiValueReplaceValueAtIndex</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property containing the value to replace.</p>
                <em>value</em>
                <p>The new value.</p>
                <em>index</em>
                <p>The location, in <em>multiValue</em>, of the value to replace.</p>
                <p>Raises an exception when out of bounds.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Discussion</b>
                <p>This function takes an index. If you have an identifier, use the <c>ABMultiValueGetIndexForIdentifier</c> function to get the corresponding index.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="multiValue">
            </param>
            <param name="value">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.CreateMutableCopy">
            <summary>
            Returns a mutable copy of a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueCreateMutableCopy</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property being copied.</p>
                <b>Return Value</b>
                <p>A mutable copy of <em>multiValue</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.GetPropertyType">
            <summary>
            Returns the type of the values contained in a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueGetPropertyType</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property whose type is being returned.</p>
                <b>Return Value</b>
                <p>The type of the values contained in <em>multiValue</em> or <c><!--a target="_self" -->kABInvalidPropertyType<!--/a--></c> when <em>multiValue</em> is empty or contains values of different types.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>ABMultiValueCreateMutable</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.GetIdentifierAtIndex(System.Int32)">
            <summary>
            Returns the identifier of a value in a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueGetIdentifierAtIndex</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property with the identifier to return.</p>
                <em>index</em>
                <p>Location of the value within <em>multiValue</em> whose identifier is being returned.</p>
                <b>Return Value</b>
                <p>Identifier of the value at <em>index</em> within <em>multiValue</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.GetIndex(System.Int32)">
            <summary>
            Returns the location (within a multivalue property) of a value with a given identifier.
            <br></br>Equivalent to the native <c>ABMultiValueGetIndexForIdentifier</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property in which to look for the <em>identifier</em> value identifier.</p>
                <em>identifier</em>
                <p>The identifier of the value whose location within <em>multiValue</em> is being returned.</p>
                <b>Return Value</b>
                <p>Location within <em>multiValue</em> that contains the value with <em>identifier</em> as its identifier.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.CopyArrayOfAllValues">
            <summary>
            Returns an array with the values in a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueCopyArrayOfAllValues</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property whose values are being return.</p>
                <b>Return Value</b>
                <p>Array containing the values in <em>multiValue</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.CopyLabelAtIndex(System.Int32)">
            <summary>
            Returns the label for a value in a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueCopyLabelAtIndex</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property with the value whose label to return.</p>
                <em>index</em>
                <p>Location of the value within <em>multiValue</em> whose label to return.</p>
                <p>Raises an exception when out of bounds.</p>
                <b>Return Value</b>
                <p>Label for the value at <c>index</c> within <em>multiValue</em>.</p>
                <b>Discussion</b>
                <p>If there is no label for the value at <c>index</c>, returns <c>NULL</c>.</p>
                <p>This function takes an index. If you have an identifier, use the <c>ABMultiValueGetIndexForIdentifier</c> function to get the corresponding index.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.CopyValueAtIndex(System.Int32)">
            <summary>
            Returns the value at a particular location within a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueCopyValueAtIndex</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property from which to obtain the value.</p>
                <em>index</em>
                <p>Location of the desired value within <em>multiValue</em>.</p>
                <p>Raises an exception when out of bounds.</p>
                <b>Return Value</b>
                <p>The value at <em>index</em> in <em>multiValue</em>.</p>
                <b>Discussion</b>
                <p>This function takes an index. If you have an identifier, use the <c>ABMultiValueGetIndexForIdentifier</c> function to get the corresponding index.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="index">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.GetCount">
            <summary>
            Returns the number of values in a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueGetCount</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property whose value are being counted.</p>
                <b>Return Value</b>
                <p>The number of values in <em>multiValue</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMultiValue.GetFirstIndexOfValue(U3DXT.iOS.Native.CoreFoundation.CFType)">
            <summary>
            Returns the first location of a value in a multivalue property.
            <br></br>Equivalent to the native <c>ABMultiValueGetFirstIndexOfValue</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>multiValue</em>
                <p>The multivalue property in which to search for <em>value</em>.</p>
                <em>value</em>
                <p>The value to search for in <em>multiValue</em>.</p>
                <b>Return Value</b>
                <p>Location of <em>value</em> within <em>multiValue</em>, <c>-1</c> if <em>value</em> is not present in <em>multiValue</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="value">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABMutableMultiValue">
            <summary>
            Reference to a mutable multivalue property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMutableMultiValue.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABMutableMultiValue.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABPerson">
            <summary>
            Functions belonging to ABPerson.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAddressCountryKey">
            <summary>
                <p>Country.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAddressCountryKey</c> constant.
            </summary>
            <remarks>
            These constants implement the person address property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Address Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAddressCountryCodeKey">
            <summary>
                <p>Country code. The value is an ISO country code.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAddressCountryCodeKey</c> constant.
            </summary>
            <remarks>
            These constants implement the person address property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Address Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAddressStateKey">
            <summary>
                <p>State.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAddressStateKey</c> constant.
            </summary>
            <remarks>
            These constants implement the person address property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Address Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAddressStreetKey">
            <summary>
                <p>Street.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAddressStreetKey</c> constant.
            </summary>
            <remarks>
            These constants implement the person address property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Address Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAddressZIPKey">
            <summary>
                <p>Zip code.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAddressZIPKey</c> constant.
            </summary>
            <remarks>
            These constants implement the person address property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Address Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAddressCityKey">
            <summary>
                <p>City.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAddressCityKey</c> constant.
            </summary>
            <remarks>
            These constants implement the person address property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Address Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAddressProperty">
            <summary>
                <p>Identifier for the address multivalue property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAddressProperty</c> constant.
            </summary>
            <remarks>
            These constants implement the person address property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Address Property".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAnniversaryLabel">
            <summary>
                <p>Birthdate.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAnniversaryLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person dates property (a multivalue property of type <c>kABMultiDateTimePropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Date Properties Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonDateProperty">
            <summary>
                <p>Identifier for the dates multivalue property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonDateProperty</c> constant.
            </summary>
            <remarks>
            These constants implement the person dates property (a multivalue property of type <c>kABMultiDateTimePropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Date Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABOtherLabel">
            <summary>
                <p>Other label.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABOtherLabel</c> constant.
            </summary>
            <remarks>
            These constants contain generic property labels.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Generic Property Labels".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABWorkLabel">
            <summary>
                <p>Work label.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABWorkLabel</c> constant.
            </summary>
            <remarks>
            These constants contain generic property labels.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Generic Property Labels".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABHomeLabel">
            <summary>
                <p>Home label.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABHomeLabel</c> constant.
            </summary>
            <remarks>
            These constants contain generic property labels.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Generic Property Labels".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageUsernameKey">
            <summary>
                <p>Instant message service username.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageUsernameKey</c> constant.
            </summary>
            <remarks>
            The keys used to specify the different fields in a <c>kABPersonInstantMessageProperty</c> property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>). Neither developers nor users can add more keys.
            <p></p><p></p>This is a constant for "Instant Messaging Keys Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceKey">
            <summary>
                <p>Instant message service.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceKey</c> constant.
            </summary>
            <remarks>
            The keys used to specify the different fields in a <c>kABPersonInstantMessageProperty</c> property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>). Neither developers nor users can add more keys.
            <p></p><p></p>This is a constant for "Instant Messaging Keys Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageProperty">
            <summary>
                <p>Identifier for the instant message multivalue property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageProperty</c> constant.
            </summary>
            <remarks>
            The keys used to specify the different fields in a <c>kABPersonInstantMessageProperty</c> property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>). Neither developers nor users can add more keys.
            <p></p><p></p>This is a constant for "Instant Messaging Keys".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceMSN">
            <summary>
                <p>MSN instant message service.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceMSN</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceQQ">
            <summary>
                <p>QQ instant message service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceQQ</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceYahoo">
            <summary>
                <p>Yahoo instant message service.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceYahoo</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceGoogleTalk">
            <summary>
                <p>Google Talk instant message service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceGoogleTalk</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceJabber">
            <summary>
                <p>Jabber instant message service.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceJabber</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceICQ">
            <summary>
                <p>ICQ instant message service.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceICQ</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceFacebook">
            <summary>
                <p>Facebook instant message service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceFacebook</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceSkype">
            <summary>
                <p>Skype instant message service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceSkype</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceAIM">
            <summary>
                <p>AIM instant message service.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceAIM</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonInstantMessageServiceGaduGadu">
            <summary>
                <p>Gadu-Gadu instant message service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonInstantMessageServiceGaduGadu</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify instant messaging services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Instant Messaging Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonKindProperty">
            <summary>
                <p>Identifier for the type property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonKindProperty</c> constant.
            </summary>
            <remarks>
            These constants implement the person type property (a property of type <c>kABIntegerPropertyType</c>), which indicates whether a person record represents a human being or an organization.
            <p></p><p></p>This is a constant for "Person Type Property".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonJobTitleProperty">
            <summary>
                <p>Job title. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonJobTitleProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonNicknameProperty">
            <summary>
                <p>Nickname. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonNicknameProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonLastNameProperty">
            <summary>
                <p>Last name. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonLastNameProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonBirthdayProperty">
            <summary>
                <p>Birthday. Type: <c>kABDateTimePropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonBirthdayProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonCreationDateProperty">
            <summary>
                <p>Creation date. Type: <c>kABDateTimePropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonCreationDateProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonFirstNameProperty">
            <summary>
                <p>First name. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonFirstNameProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonEmailProperty">
            <summary>
                <p>Email address. Type: <c>kABMultiStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonEmailProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonDepartmentProperty">
            <summary>
                <p>Department. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonDepartmentProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonMiddleNamePhoneticProperty">
            <summary>
                <p>Middle name phonetic. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonMiddleNamePhoneticProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSuffixProperty">
            <summary>
                <p>Suffix (“Jr.,” “Sr.,” “III”). Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSuffixProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPrefixProperty">
            <summary>
                <p>Prefix (“Sir,” “Duke,” “General”). Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPrefixProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonNoteProperty">
            <summary>
                <p>Note. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonNoteProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonFirstNamePhoneticProperty">
            <summary>
                <p>First name phonetic. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonFirstNamePhoneticProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonOrganizationProperty">
            <summary>
                <p>Organization name. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonOrganizationProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonModificationDateProperty">
            <summary>
                <p>Modification date. Type: <c>kABDateTimePropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonModificationDateProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonLastNamePhoneticProperty">
            <summary>
                <p>Last name phonetic. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonLastNamePhoneticProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonMiddleNameProperty">
            <summary>
                <p>Middle name. Type: <c>kABStringPropertyType</c>.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonMiddleNameProperty</c> constant.
            </summary>
            <remarks>
            These constants identify person properties used to store personal information.
            <p></p><p></p>This is a constant for "Personal Information Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPhoneWorkFAXLabel">
            <summary>
                <p>Work fax number.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPhoneWorkFAXLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person phone number property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Phone Number Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPhonePagerLabel">
            <summary>
                <p>Pager phone number.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPhonePagerLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person phone number property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Phone Number Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPhoneMobileLabel">
            <summary>
                <p>Mobile phone number.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPhoneMobileLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person phone number property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Phone Number Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPhoneIPhoneLabel">
            <summary>
                <p>iPhone number.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPhoneIPhoneLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person phone number property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Phone Number Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPhoneOtherFAXLabel">
            <summary>
                <p>Other fax number.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPhoneOtherFAXLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person phone number property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Phone Number Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPhoneHomeFAXLabel">
            <summary>
                <p>Home fax number.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPhoneHomeFAXLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person phone number property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Phone Number Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPhoneMainLabel">
            <summary>
                <p>Main phone number.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPhoneMainLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person phone number property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Phone Number Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPhoneProperty">
            <summary>
                <p>Identifier for the phone number multivalue property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPhoneProperty</c> constant.
            </summary>
            <remarks>
            These constants implement the person phone number property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Phone Number Property".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonManagerLabel">
            <summary>
                <p>Manager.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonManagerLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonFatherLabel">
            <summary>
                <p>Father.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonFatherLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonChildLabel">
            <summary>
                <p>Child.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonChildLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSpouseLabel">
            <summary>
                <p>Spouse.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSpouseLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonFriendLabel">
            <summary>
                <p>Friend.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonFriendLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonBrotherLabel">
            <summary>
                <p>Brother.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonBrotherLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonMotherLabel">
            <summary>
                <p>Mother.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonMotherLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSisterLabel">
            <summary>
                <p>Sister.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSisterLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonAssistantLabel">
            <summary>
                <p>Assistant.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonAssistantLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonParentLabel">
            <summary>
                <p>Parent.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonParentLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonPartnerLabel">
            <summary>
                <p>Partner.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonPartnerLabel</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonRelatedNamesProperty">
            <summary>
                <p>Identifier for the related name multivalue property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonRelatedNamesProperty</c> constant.
            </summary>
            <remarks>
            These constants implement the person related name property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the labels used to identify each of the property’s values.
            <p></p><p></p>This is a constant for "Related Name Property".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileURLKey">
            <summary>
                <p>Social profile URL.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileURLKey</c> constant.
            </summary>
            <remarks>
            The keys used to specify the different fields in a <c>kABPersonSocialProfileProperty</c> property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>). Neither developers nor users can add more keys.
            <p></p><p></p>This is a constant for "Social Profile Keys Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileServiceKey">
            <summary>
                <p>Social profile service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileServiceKey</c> constant.
            </summary>
            <remarks>
            The keys used to specify the different fields in a <c>kABPersonSocialProfileProperty</c> property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>). Neither developers nor users can add more keys.
            <p></p><p></p>This is a constant for "Social Profile Keys Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileUsernameKey">
            <summary>
                <p>Social profile username.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileUsernameKey</c> constant.
            </summary>
            <remarks>
            The keys used to specify the different fields in a <c>kABPersonSocialProfileProperty</c> property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>). Neither developers nor users can add more keys.
            <p></p><p></p>This is a constant for "Social Profile Keys Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileUserIdentifierKey">
            <summary>
                <p>Social profile user identifier.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileUserIdentifierKey</c> constant.
            </summary>
            <remarks>
            The keys used to specify the different fields in a <c>kABPersonSocialProfileProperty</c> property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>). Neither developers nor users can add more keys.
            <p></p><p></p>This is a constant for "Social Profile Keys Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileProperty">
            <summary>
                <p>Identifier for the social profile property.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileProperty</c> constant.
            </summary>
            <remarks>
            The keys used to specify the different fields in a <c>kABPersonSocialProfileProperty</c> property (a multivalue property of type <c>kABMultiDictionaryPropertyType</c>). Neither developers nor users can add more keys.
            <p></p><p></p>This is a constant for "Social Profile Keys".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileServiceTwitter">
            <summary>
                <p>Twitter social profile service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileServiceTwitter</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify social networking services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Social Profile Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileServiceGameCenter">
            <summary>
                <p>Game Center social profile service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileServiceGameCenter</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify social networking services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Social Profile Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileServiceSinaWeibo">
            <summary>
                <p>Sina Weibo social profile service.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileServiceSinaWeibo</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify social networking services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Social Profile Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileServiceMyspace">
            <summary>
                <p>Myspace social profile service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileServiceMyspace</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify social networking services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Social Profile Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileServiceFacebook">
            <summary>
                <p>Facebook social profile service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileServiceFacebook</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify social networking services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Social Profile Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileServiceLinkedIn">
            <summary>
                <p>LinkedIn social profile service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileServiceLinkedIn</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify social networking services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Social Profile Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonSocialProfileServiceFlickr">
            <summary>
                <p>Flickr social profile service.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSocialProfileServiceFlickr</c> constant.
            </summary>
            <remarks>
            The predefined constants are used to identify social networking services. You may use these constants or any other string.
            <p></p><p></p>This is a constant for "Social Profile Services".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonHomePageLabel">
            <summary>
                <p>Home page.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonHomePageLabel</c> constant.
            </summary>
            <remarks>
            This constant implements the person URL property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the label used to identify the property’s sole value.
            <p></p><p></p>This is a constant for "URL Property Strings".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPerson.kABPersonURLProperty">
            <summary>
                <p>Identifier for the URL multivalue property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonURLProperty</c> constant.
            </summary>
            <remarks>
            This constant implements the person URL property (a multivalue property of type <c>kABMultiStringPropertyType</c>) and the label used to identify the property’s sole value.
            <p></p><p></p>This is a constant for "URL Property".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCopyArrayOfAllLinkedPeople(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCopySource(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCreate">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCreateInSource(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCopyCompositeNameDelimiterForRecord(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonGetCompositeNameFormat">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonGetCompositeNameFormatForRecord(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonGetSortOrdering">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCopyLocalizedPropertyName(System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonGetTypeOfProperty(System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCopyImageData(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCopyImageDataWithFormat(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonHasImageData(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonRemoveImageData(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonSetImageData(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonComparePeopleByName(System.String,System.String,System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCreatePeopleInSourceWithVCardRepresentation(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.UP_ABPerson_ABPersonCreateVCardRepresentationWithPeople(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CopyArrayOfAllLinkedPeople(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns an array of all person records in the address book database that are linked to the given person record.
            <br></br>Equivalent to the native <c>ABPersonCopyArrayOfAllLinkedPeople</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>person</em>
                <p>The person record whose linked records are being returned.</p>
                <b>Return Value</b>
                <p>An array of all person records in the address book database that are linked to the given person record</p>
                <b>Discussion</b>
                <p>Linked records contain information about the same person, and usually come from different sources.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="person">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CopySource(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns the source that the person record is from.
            <br></br>Equivalent to the native <c>ABPersonCopySource</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>person</em>
                <p>The person whose source is being returned.</p>
                <b>Return Value</b>
                <p>The source of the person record.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="person">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.Create">
            <summary>
            Creates a new person record in the default source.
            <br></br>Equivalent to the native <c>ABPersonCreate</c> function.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>To add the newly created person record to the Address Book database, use <c>ABAddressBookAddRecord</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CreateInSource(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Creates a new person record in a particular source.
            <br></br>Equivalent to the native <c>ABPersonCreateInSource</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>source</em>
                <p>The source to create the person record in.</p>
                <b>Return Value</b>
                <p>A new person record in the specified source.</p>
                <b>Discussion</b>
                <p>To add the newly created person record to the Address Book database, use <c>ABAddressBookAddRecord</c>.</p>
                <p>If <c>source</c> is <c>NULL</c>, the group is created in the default source.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="source">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CopyCompositeNameDelimiter(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns the delimiter to use between name components.
            <br></br>Equivalent to the native <c>ABPersonCopyCompositeNameDelimiterForRecord</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>record</em>
                <p>The record being displayed.</p>
                <b>Return Value</b>
                <p>The delimiter to use between name components.</p>
                <b>Discussion</b>
                <p>If the record is <c>NULL</c>, or if it has no first name, middle name, or last name, then the default delimiter is returned.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="record">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.GetCompositeName">
            <summary>
            Returns the person-name display format. (<strong class="deprecated">Deprecated.</strong> Use <c>ABPersonGetCompositeNameFormatForRecord</c> instead.)
            <br></br>Equivalent to the native <c>ABPersonGetCompositeNameFormat</c> function.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A constant indicating person-name display order; see  “Composite Name Format.” </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.GetCompositeName(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns the person-name display format to use for the given record.
            <br></br>Equivalent to the native <c>ABPersonGetCompositeNameFormatForRecord</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>record</em>
                <p>The record being displayed.</p>
                <b>Return Value</b>
                <p>The person-name display format to use for the given record.</p>
                <b>Discussion</b>
                <p>If the record is <c>NULL</c>, or if it has no first name, middle name, or last name, then the user’s default order preference is returned. For possible values, see  “Composite Name Format.” </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="record">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.GetSortOrdering">
            <summary>
            Returns the user’s sort-ordering preference for lists of persons.
            <br></br>Equivalent to the native <c>ABPersonGetSortOrdering</c> function.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>The user’s sort ordering preference; see <c>“Sort Order”</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CopyLocalizedPropertyName(System.Int32)">
            <summary>
            Returns the localized name of a person property
            <br></br>Equivalent to the native <c>ABPersonCopyLocalizedPropertyName</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>property</em>
                <p>The person property whose localized name is being returned.</p>
                <b>Return Value</b>
                <p>The localized name of <em>property</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="property">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.GetTypeOfProperty(System.Int32)">
            <summary>
            Returns the type of a person property.
            <br></br>Equivalent to the native <c>ABPersonGetTypeOfProperty</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>property</em>
                <p>The person property whose type is being returned.</p>
                <b>Return Value</b>
                <p>The type of <em>property</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="property">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CopyImageData(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Returns the picture for a person record.
            <br></br>Equivalent to the native <c>ABPersonCopyImageData</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>person</em>
                <p>The person record whose picture is being returned.</p>
                <b>Return Value</b>
                <p>The picture for <em>person</em>, or <c>NULL</c> if the person has no picture.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="person">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CopyImageData(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.AddressBook.ABPersonImageFormat)">
            <summary>
            Returns the picture for a person record in the given format.
            <br></br>Equivalent to the native <c>ABPersonCopyImageDataWithFormat</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>person</em>
                <p>The person record whose picture is being returned.</p>
                <em>format</em>
                <p>The size and shape being returned. See <c>“Image Format”</c>.</p>
                <b>Return Value</b>
                <p>The picture for <em>person</em>, or <c>NULL</c> if the person has no picture.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.1 and later.</li>
                </ul>
            </remarks>
            <param name="person">
            </param>
            <param name="format">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.HasImageData(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            Indicates whether a person has a picture.
            <br></br>Equivalent to the native <c>ABPersonHasImageData</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>person</em>
                <p>The person record in question.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when <em>person</em> has a picture, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="person">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.RemoveImageData(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Removes a person’s picture.
            <br></br>Equivalent to the native <c>ABPersonRemoveImageData</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>person</em>
                <p>The person record whose picture is being removed.</p>
                <em>error</em>
                <p>On error, information about the cause.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="person">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.SetImageData(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.Foundation.NSData,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Sets a person’s picture.
            <br></br>Equivalent to the native <c>ABPersonSetImageData</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>person</em>
                <p>The person record whose picture is being set.</p>
                <em>imageData</em>
                <p>The picture to assign to <em>person</em>.</p>
                <em>error</em>
                <p>On error, information about the cause.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="person">
            </param>
            <param name="imageData">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.ComparePeopleByName(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.AddressBook.ABRecord,System.UInt32)">
            <summary>
            Indicates how two person records get sorted.
            <br></br>Equivalent to the native <c>ABPersonComparePeopleByName</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>person1</em>
                <p>The first person.</p>
                <em>person2</em>
                <p>The second person.</p>
                <em>ordering</em>
                <p>Indicates whether to sort by first name or by last name. See <c>“Sort Order”</c>.</p>
                <b>Return Value</b>
                <ul class="ul">
                    <li class="li">
                        <p>
                            <c>kCFCompareLessThan</c> when <em>person1</em> goes before <em>person2</em>.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>kCFCompareEqualTo</c> when <em>person1</em> and <em>person2</em> have the same name.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>kCFCompareGreaterThan</c> when <em>person1</em> goes after <em>person2</em>.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="person1">
            </param>
            <param name="person2">
            </param>
            <param name="ordering">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CreatePeopleInSource(U3DXT.iOS.Native.AddressBook.ABRecord,U3DXT.iOS.Native.Foundation.NSData)">
            <summary>
            Creates person records from the given vCard representation.
            <br></br>Equivalent to the native <c>ABPersonCreatePeopleInSourceWithVCardRepresentation</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>source</em>
                <p>The source in which to create the person record.</p>
                <em>vCardData</em>
                <p>The vCard data.</p>
                <b>Return Value</b>
                <p>The newly created person records.</p>
                <b>Discussion</b>
                <p>Address Book supports vCard version 3.0.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="source">
            </param>
            <param name="vCardData">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABPerson.CreateVCardRepresentation(System.Object[])">
            <summary>
            Returns the vCard representation of the given person records.
            <br></br>Equivalent to the native <c>ABPersonCreateVCardRepresentationWithPeople</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>people</em>
                <p>An array of person records.</p>
                <b>Return Value</b>
                <p>The vCard representation of the records.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="people">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABPersonCompositeNameFormat">
            <summary>
            These constants identify the format to use for a person’s composite name order for person records.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>See <c>ABPersonCompositeNameFormat</c> and <c>ABRecordCopyCompositeName</c>.</p>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPersonCompositeNameFormat.FirstNameFirst">
            <summary>
                <p>First name first.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonCompositeNameFormatFirstNameFirst</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPersonCompositeNameFormat.LastNameFirst">
            <summary>
                <p>Last name first.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonCompositeNameFormatLastNameFirst</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABPersonImageFormat">
            <summary>
            These constants identify the size and shape of images.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPersonImageFormat.OriginalSize">
            <summary>
                <p>The image at its original size and shape.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonImageFormatOriginalSize</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPersonImageFormat.Thumbnail">
            <summary>
                <p>The small square thumbnail.</p>
                <p>Available in iOS 4.1 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonImageFormatThumbnail</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABPersonSortOrder">
            <summary>
            These constants identify sort order for person lists.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPersonSortOrder.FirstName">
            <summary>
                <p>Order by first name.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSortByFirstName</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABPersonSortOrder.LastName">
            <summary>
                <p>Order by last name.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonSortByLastName</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABRecord">
            <summary>
            Reference to a record.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecord.kABRecordInvalidID">
            <summary>
                <p>Records with this ID have not been saved to the Address Book database.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABRecordInvalidID</c> constant.
            </summary>
            <remarks>
            These macros identify invalid values for record and property identifiers.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Invalid Values".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecord.kABPropertyInvalidID">
            <summary>
                <p>Indicates an invalid value for a property ID.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPropertyInvalidID</c> constant.
            </summary>
            <remarks>
            These macros identify invalid values for record and property identifiers.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Invalid Values".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecord.kABMultiValueMask">
            <summary>
                <p>Indicates a multivalue property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABMultiValueMask</c> constant.
            </summary>
            <remarks>
            Indicates a multivalue property.
            <p></p><p></p>This is a constant for "Multivalue Properties".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.UP_ABRecord_ABRecordGetRecordID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.UP_ABRecord_ABRecordGetRecordType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.UP_ABRecord_ABRecordCopyCompositeName(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.UP_ABRecord_ABRecordCopyValue(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.UP_ABRecord_ABRecordRemoveValue(System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.UP_ABRecord_ABRecordSetValue(System.String,System.Int32,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.GetRecordID">
            <summary>
            Returns the unique ID of a record.
            <br></br>Equivalent to the native <c>ABRecordGetRecordID</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>record</em>
                <p>The record whose ID is being returned.</p>
                <b>Return Value</b>
                <p>The unique ID of <em>record</em> when the record exists in the Address Book database.</p>
                <p>
                    <c>kABRecordInvalidID</c> when the record hasn’t been saved to the database.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.GetRecordType">
            <summary>
            Returns the type of a record.
            <br></br>Equivalent to the native <c>ABRecordGetRecordType</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>record</em>
                <p>The record whose type is being returned.</p>
                <b>Return Value</b>
                <p>The record type of <em>record</em>:</p>
                <ul class="ul">
                    <li class="li">
                        <p>
                            <c>kABPersonType</c> for person records</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>kABGroupType</c> for group records.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>kABSourceType</c> for source records.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>ABPersonCreate</c>
                    </li>
                    <li>
                        <c>ABGroupCreate</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.CopyCompositeName">
            <summary>
            Returns an appropriate, human-friendly name for the record.
            <br></br>Equivalent to the native <c>ABRecordCopyCompositeName</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>record</em>
                <p>The record whose name is being returned.</p>
                <b>Return Value</b>
                <ul class="ul">
                    <li class="li">
                        <p>For person records: The concatenated value of these properties: Prefix, Suffix, Organization, First name, and Last name.</p>
                    </li>
                    <li class="li">
                        <p>For group records: The value of the group name property (<c>kABGroupNameProperty</c>).</p>
                    </li>
                </ul>
                <b>Discussion</b>
                <p>The behavior of this function is not defined for source records.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.CopyValue(System.Int32)">
            <summary>
            Returns the value of a record property.
            <br></br>Equivalent to the native <c>ABRecordCopyValue</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>record</em>
                <p>The record containing the property in question.</p>
                <em>property</em>
                <p>The property of <em>record</em> whose value is being returned. See properties in  “Constants”  in <em>ABPerson Reference</em> and  “Constants”  in <em>ABGroup Reference</em>.</p>
                <b>Return Value</b>
                <p>The value of <em>property</em> in <em>record</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="property">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.RemoveValue(System.Int32,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Removes the value of a record property.
            <br></br>Equivalent to the native <c>ABRecordRemoveValue</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>record</em>
                <p>The record with the property in question.</p>
                <em>property</em>
                <p>The property, in <em>record</em>, whose value is being removed. See properties in  “Constants”  in <em>ABPerson Reference</em> and  “Constants”  in <em>ABGroup Reference</em>.</p>
                <em>error</em>
                <p>On failure, information about its cause.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> on success, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="property">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBook.ABRecord.SetValue(System.Int32,U3DXT.iOS.Native.CoreFoundation.CFType,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Sets the value of a record property.
            <br></br>Equivalent to the native <c>ABRecordSetValue</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>record</em>
                <p>The record containing the property in question.</p>
                <em>property</em>
                <p>The property whose value is being set. See properties in  “Constants”  in <em>ABPerson Reference</em> and  “Constants”  in <em>ABGroup Reference</em>.</p>
                <em>value</em>
                <p>The new value. Pass <c>NULL</c> to remove the property from <em>record</em>.</p>
                <em>error</em>
                <p>On failure, information about its cause.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> when successful, <c>false</c> otherwise.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="property">
            </param>
            <param name="value">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes">
            <summary>
            These constants identify record property types.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>See <c>ABPropertyType</c>.</p>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.MultiStringPropertyType">
            <summary>
                <p>Multistring property. Returned as an <c>ABMultiValueIdentifier</c> of <c>String</c> objects.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABMultiStringPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.MultiIntegerPropertyType">
            <summary>
                <p>Multiinteger property. Returned as an <c>ABMultiValueIdentifier</c> of <c>double</c> objects.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABMultiIntegerPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.RealPropertyType">
            <summary>
                <p>Real property. Returned as a <c>double</c> object.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABRealPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.MultiRealPropertyType">
            <summary>
                <p>Multireal property. Returned as an <c>ABMultiValueIdentifier</c> of <c>double</c> objects.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABMultiRealPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.DateTimePropertyType">
            <summary>
                <p>Date-time property. Returned as a <c>DateTime</c> object.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABDateTimePropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.StringPropertyType">
            <summary>
                <p>String property. Returned as a <c>String</c> object.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABStringPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.IntegerPropertyType">
            <summary>
                <p>Integer property. Returned as a <c>double</c> object.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABIntegerPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.InvalidPropertyType">
            <summary>
                <p>Invalid property.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABInvalidPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.MultiDateTimePropertyType">
            <summary>
                <p>Multi–date-time property. Returned as an <c>ABMultiValueIdentifier</c> of <c>DateTime</c> objects.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABMultiDateTimePropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.MultiDictionaryPropertyType">
            <summary>
                <p>Multidictionary property. Returned as an <c>ABMultiValueIdentifier</c> of <c>Dictionary</c> objects.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABMultiDictionaryPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordPropertyTypes.DictionaryPropertyType">
            <summary>
                <p>Dictionary property. Returned as a <c>Dictionary</c> object.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABDictionaryPropertyType</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABRecordTypes">
            <summary>
            These constants identify record types.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>See <c>ABRecordType</c>.</p>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordTypes.PersonType">
            <summary>
                <p>Person record.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABPersonType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordTypes.GroupType">
            <summary>
                <p>Group record.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABGroupType</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABRecordTypes.SourceType">
            <summary>
                <p>Source record.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceType</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABSource">
            <summary>
            Constants belonging to ABSource.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSource.kABSourceTypeSearchableMask">
            <summary>
                <p>Indicates that a source is searchable.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeSearchableMask</c> constant.
            </summary>
            <remarks>
            Indicates that a source is searchable.
            <p></p><p></p>This is a constant for "Searchable Sources".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSource.kABSourceTypeProperty">
            <summary>
                <p>The type of the source. Type: <c>ABSourceType</c></p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeProperty</c> constant.
            </summary>
            <remarks>
            These constants identify source properties.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Source Properties".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSource.kABSourceNameProperty">
            <summary>
                <p>The name of the source. Type: <c><!--a target="_self" -->kABStringPropertyType<!--/a--></c>.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceNameProperty</c> constant.
            </summary>
            <remarks>
            These constants identify source properties.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Source Properties".
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBook.ABSourceType">
            <summary>
            These constants identify the type of a source.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSourceType.LDAP">
            <summary>
                <p>LDAP server.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeLDAP</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSourceType.CardDAV">
            <summary>
                <p>CardDAV server.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeCardDAV</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSourceType.Local">
            <summary>
                <p>Local address book database.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeLocal</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSourceType.MobileMe">
            <summary>
                <p>MobileMe.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeMobileMe</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSourceType.ExchangeGAL">
            <summary>
                <p>Exchange Global Address List.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeExchangeGAL</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSourceType.CardDAVSearch">
            <summary>
                <p>Searchable CardDAV server.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeCardDAVSearch</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBook.ABSourceType.Exchange">
            <summary>
                <p>Exchange server.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kABSourceTypeExchange</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABAddressFormatting">
            <summary>
            Functions belonging to ABAddressFormatting.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABAddressFormatting.UP_ABAddressFormatting_ABCreateStringWithAddressDictionary(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABAddressFormatting.ABCreateString(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Boolean)">
            <summary>
            Returns a formatted address from an address property.
            <br></br>Equivalent to the native <c>ABCreateStringWithAddressDictionary</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>address</em>
                <p>A dictionary representing the address property to format.</p>
                <em>addCountryName</em>
                <p>Specifies whether to include the name of the country in the returned formatted address.</p>
                <p>When <c>false</c> and address includes a country name, that country name is still included in the return value.</p>
                <p>When <c>true</c> and <em>address</em> doesn’t include a country name, the country name is added to the return value. (The country name is generated from the country code entry in <em>address</em>; see  "Address Property"  in <em>ABPerson Reference</em>.)</p>
                <b>Return Value</b>
                <p>The formatted address (may include line endings).</p>
                <b>Discussion</b>
                <p>The address is formatted based on the address's country code (<c>kABPersonAddressCountryCodeKey</c>).  In general, the country code should be set to correspond with the country name (<c>kABPersonAddressCountryKey</c>).</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="address">
            </param>
            <param name="addCountryName">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController">
            <summary>
            The <c>ABNewPersonViewController</c> class (whose instances are known as <strong>new-person view controllers</strong>) implements the view controller used to create a contact.
            </summary>
            <remarks>
                <p>New-person view controllers are modal view controllers that manage a set of view controllers used to create a contact (<c>ABPersonRef</c>) and edit its properties.</p>
                <p>
                    <strong>Important:</strong> New-person view controllers must be used with a navigation controller in order to function properly.  It is recommended that you present a new-person view controller modally.</p>
                <p>
                </p>
                <b>Subclassing Notes</b>
                <p>The <c>ABNewPersonViewController</c> class does not support subclassing.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.DidCompleteWithNewPerson">
            <summary>
            Sent when the user taps Save or Cancel. If the user tapped Save, the current address book has been saved to the Address Book database. (required)
            <br></br>Equivalent to implementing the native <c>newPersonViewController:didCompleteWithNewPerson:</c> method of <c>ABNewPersonViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.DidCompleteWithNewPersonEventArgs">
            <summary>
            Event arguments for DidCompleteWithNewPerson.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.DidCompleteWithNewPersonEventArgs.#ctor(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.DidCompleteWithNewPersonEventArgs.person">
            <summary>person</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.UP_ABNewPersonViewController_get_addressBook(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.UP_ABNewPersonViewController_set_addressBook(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.UP_ABNewPersonViewController_get_displayedPerson(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.UP_ABNewPersonViewController_set_displayedPerson(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.UP_ABNewPersonViewController_get_newPersonViewDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.UP_ABNewPersonViewController_set_newPersonViewDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.UP_ABNewPersonViewController_get_parentGroup(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.UP_ABNewPersonViewController_set_parentGroup(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController" /> class.
            <br></br>Equivalent to the native <c>[[ABNewPersonViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.ClassExists">
            <summary>
            Returns whether the native ABNewPersonViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.addressBook">
            <summary>
            Optional. The address book to which the new contact is added.
            <br></br>Equivalent to the native <c>addressBook</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When unset, an address book is created and assigned to this property when needed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.displayedPerson">
            <summary>
            Optional. Specifies the person properties that the new-person view controller pre-fills in its views.
            <br></br>Equivalent to the native <c>displayedPerson</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property has no person properties, the new-person view controller does not pre-fill properties in its views.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.newPersonViewDelegate">
            <summary>
            The delegate of a new-person view controller.
            <br></br>Equivalent to the native <c>newPersonViewDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The delegate must adopt the <c>ABNewPersonViewControllerDelegate</c> formal protocol.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController.parentGroup">
            <summary>
            Optional. Specifies the group to which to add the new contact on save.
            <br></br>Equivalent to the native <c>parentGroup</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You must set <c>addressBook</c> before you can set this property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewControllerDelegate">
            <summary>
            The <c>ABNewPersonViewControllerDelegate</c> protocol declares the interface that <c>ABNewPersonViewController</c> delegates must implement.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewControllerDelegate.UP_ABNewPersonViewControllerDelegate_set__newPersonViewController_didCompleteWithNewPerson__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewControllerDelegate.DidCompleteWithNewPerson(U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewController,U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            (<b>required</b>) Sent when the user taps Save or Cancel. If the user tapped Save, the current address book has been saved to the Address Book database. (required)
            <br></br>Equivalent to the native <c>newPersonViewController:didCompleteWithNewPerson:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>newPersonViewController</em>
                <p>The new-person-view controller that manages the new-person interface.</p>
                <em>person</em>
                <p>On Save, the newly created (and saved) person record.</p>
                <p>On Cancel, <c>NULL</c>.</p>
                <b>Discussion</b>
                <p>If the user tapped Save, pending changes in the current address book (<c>ABAddressBook</c>) have been saved by the time this message is sent to the receiver.</p>
                <p>The receiver must dismiss <em>newPersonViewController</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="newPersonView">
            </param>
            <param name="person">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABNewPersonViewControllerDelegate._newPersonViewController_didCompleteWithNewPerson__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_newPersonViewController_didCompleteWithNewPerson__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController">
            <summary>
            The <c>ABPeoplePickerNavigationController</c> class (whose instances are known as <strong>people-picker navigation controllers</strong>) implements a view controller that manages a set of views that allow the user to select a contact or one of its contact-information items from an address book.
            </summary>
            <remarks>
                <b>Subclassing Notes</b>
                <p>The <c>ABPeoplePickerNavigationController</c> class does not support subclassing.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.shouldContinueAfterSelectingPersonHandler">
            <summary>
            Sent when the user selects a contact. (required)
            <br></br>Equivalent to implementing the native <c>peoplePickerNavigationController:shouldContinueAfterSelectingPerson:</c> method of <c>ABPeoplePickerNavigationControllerDelegate</c>.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.shouldContinueAfterSelectingPersonWithPropertyAndIdentifierHandler">
            <summary>
            Sent when the user selects one of a person’s properties. (required)
            <br></br>Equivalent to implementing the native <c>peoplePickerNavigationController:shouldContinueAfterSelectingPerson:property:identifier:</c> method of <c>ABPeoplePickerNavigationControllerDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.DidCancel">
            <summary>
            Sent when the user taps Cancel. (required)
            <br></br>Equivalent to implementing the native <c>peoplePickerNavigationControllerDidCancel:</c> method of <c>ABPeoplePickerNavigationControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.UP_ABPeoplePickerNavigationController_get_addressBook(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.UP_ABPeoplePickerNavigationController_set_addressBook(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.UP_ABPeoplePickerNavigationController_get_displayedProperties(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.UP_ABPeoplePickerNavigationController_set_displayedProperties(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.UP_ABPeoplePickerNavigationController_get_peoplePickerDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.UP_ABPeoplePickerNavigationController_set_peoplePickerDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController" /> class.
            <br></br>Equivalent to the native <c>[[ABPeoplePickerNavigationController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.ClassExists">
            <summary>
            Returns whether the native ABPeoplePickerNavigationController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.addressBook">
            <summary>
            Optional. The address book from which to obtain the list of contacts.
            <br></br>Equivalent to the native <c>addressBook</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When unset, an address book is created and assigned to this property when needed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.displayedProperties">
            <summary>
            Array of <c>double</c> objects representing <c>ABPropertyID</c> values identifying properties (such as name or telephone number) the picker displays when it shows a person.
            <br></br>Equivalent to the native <c>displayedProperties</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Name properties are always displayed.</p>
                <p>To have the picker display a single property for the person displayed, such as telephone number, set <c>displayedProperties</c> to an array with a single value, such as <c>kABPersonPhoneProperty</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController.peoplePickerDelegate">
            <summary>
            The people-picker navigation controller delegate.
            <br></br>Equivalent to the native <c>peoplePickerDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The delegate must adopt the <c>ABPeoplePickerNavigationControllerDelegate</c> formal protocol.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate">
            <summary>
            The <c>ABPeoplePickerNavigationControllerDelegate</c> protocol describes the interface <c>ABPeoplePickerNavigationController</c> delegates must adopt to respond to people-picker user events.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate.UP_ABPeoplePickerNavigationControllerDelegate_set__peoplePickerNavigationController_shouldContinueAfterSelectingPerson__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate.UP_ABPeoplePickerNavigationControllerDelegate_set__peoplePickerNavigationController_shouldContinueAfterSelectingPerson_property_identifier__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate.UP_ABPeoplePickerNavigationControllerDelegate_set__peoplePickerNavigationControllerDidCancel__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate.ShouldContinueAfterSelectingPerson(U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController,U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            (<b>required</b>) Sent when the user selects a contact. (required)
            <br></br>Equivalent to the native <c>peoplePickerNavigationController:shouldContinueAfterSelectingPerson:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peoplePicker</em>
                <p>The people-picker navigation controller with which the user interacted.</p>
                <em>person</em>
                <p>The person the user selected.</p>
                <b>Return Value</b>
                <ul class="ul">
                    <li class="li">
                        <p>
                            <c>true</c> to display the contact and dismiss the picker.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>false</c> to do nothing.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="peoplePicker">
            </param>
            <param name="person">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate.ShouldContinueAfterSelectingPersonWithPropertyAndIdentifier(U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController,U3DXT.iOS.Native.AddressBook.ABRecord,System.Int32,System.Int32)">
            <summary>
            (<b>required</b>) Sent when the user selects one of a person’s properties. (required)
            <br></br>Equivalent to the native <c>peoplePickerNavigationController:shouldContinueAfterSelectingPerson:property:identifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peoplePicker</em>
                <p>The people-picker navigation controller with which the user interacted.</p>
                <em>person</em>
                <p>The person whose contact information item the user selected.</p>
                <em>property</em>
                <p>The property the user selected.</p>
                <em>identifier</em>
                <p>The identifier for the value the user selected if <em>property</em> is a multivalue property; otherwise, <c>kABMultiValueInvalidIdentifier</c>.</p>
                <b>Return Value</b>
                <ul class="ul">
                    <li class="li">
                        <p>
                            <c>true</c> to perform the action for the property selected and dismiss the picker.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>false</c> to show the person in the picker.</p>
                    </li>
                </ul>
                <b>Discussion</b>
                <p>This method is called with an identifier. If you need an index, use the <c>ABMultiValueGetIndexForIdentifier</c> function to get the corresponding index.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="peoplePicker">
            </param>
            <param name="person">
            </param>
            <param name="property">
            </param>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate.DidCancel(U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationController)">
            <summary>
            (<b>required</b>) Sent when the user taps Cancel. (required)
            <br></br>Equivalent to the native <c>peoplePickerNavigationControllerDidCancel:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>peoplePicker</em>
                <p>The people-picker navigation controller with which the user interacted.</p>
                <b>Discussion</b>
                <p>The receiver is responsible for dismissing <em>peoplePicker</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="peoplePicker">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate._peoplePickerNavigationController_shouldContinueAfterSelectingPerson__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_peoplePickerNavigationController_shouldContinueAfterSelectingPerson__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate._peoplePickerNavigationController_shouldContinueAfterSelectingPerson_property_identifier__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_peoplePickerNavigationController_shouldContinueAfterSelectingPerson_property_identifier__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPeoplePickerNavigationControllerDelegate._peoplePickerNavigationControllerDidCancel__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_peoplePickerNavigationControllerDidCancel__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController">
            <summary>
            The <c>ABPersonViewController</c> class (whose instances are known as <strong>person view controllers</strong>) implements the view used to display a person record (<c>ABPersonRef</c>).
            </summary>
            <remarks>
                <p>
                    <strong>Important:</strong> Person view controllers must be used with a navigation controller in order to function properly.</p>
                <p>
                </p>
                <b>Subclassing Notes</b>
                <p>The <c>ABPersonViewController</c> class does not support subclassing.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.shouldPerformDefaultActionForPersonHandler">
            <summary>
            Sent when the user selects a property value of the person displayed in a person view controller. (required)
            <br></br>Equivalent to implementing the native <c>personViewController:shouldPerformDefaultActionForPerson:property:identifier:</c> method of <c>ABPersonViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_get_addressBook(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_set_addressBook(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_get_allowsActions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_set_allowsActions(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_get_allowsEditing(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_set_allowsEditing(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_get_displayedPerson(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_set_displayedPerson(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_get_displayedProperties(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_set_displayedProperties(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_get_personViewDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_set_personViewDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_get_shouldShowLinkedPeople(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_set_shouldShowLinkedPeople(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.UP_ABPersonViewController_setHighlightedItemForProperty_withIdentifier_(System.String,System.Int32,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController" /> class.
            <br></br>Equivalent to the native <c>[[ABPersonViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.ClassExists">
            <summary>
            Returns whether the native ABPersonViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.addressBook">
            <summary>
            Optional. The address book from which to obtain the contact to display.
            <br></br>Equivalent to the native <c>addressBook</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When unset, an address book is created and assigned to this property when needed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.allowsActions">
            <summary>
            Specifies whether the to display buttons for actions such as sending a text message or initiating a FaceTime call.
            <br></br>Equivalent to the native <c>allowsActions</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.allowsEditing">
            <summary>
            Specifies whether the user can edit the person’s information.
            <br></br>Equivalent to the native <c>allowsEditing</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When editing a person’s information, all person properties are visible.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.displayedPerson">
            <summary>
            The person displayed by the person view.
            <br></br>Equivalent to the native <c>displayedPerson</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The receiver displays the properties of this person record that are present in <c>displayedProperties</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.displayedProperties">
            <summary>
            Identifies the set of properties (such as name or telephone number) of <c>displayedPerson</c> the receiver displays.
            <br></br>Equivalent to the native <c>displayedProperties</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value of this property is <c>NULL</c>.</p>
                <p>Name properties are always displayed.</p>
                <p>The properties are specified using an array of <c>double</c> objects representing <c>ABPropertyID</c> values.</p>
                <p>To have the receiver display a single property for <c>displayedPerson</c>, such as telephone number, set <c>displayedProperties</c> to an array with a single value, such as <c>kABPersonPhoneProperty</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.personViewDelegate">
            <summary>
            The person-view controller delegate.
            <br></br>Equivalent to the native <c>personViewDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The delegate must adopt the <c>ABPersonViewControllerDelegate</c> protocol.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.shouldShowLinkedPeople">
            <summary>
            Indicates whether the person view should display data from person records that are linked with the person record being displayed.
            <br></br>Equivalent to the native <c>shouldShowLinkedPeople</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Linked records represent the same actual person. They often come from different sources, but may also come from the same source.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewController.SetHighlightedItem(System.Int32,System.Int32)">
            <summary>
            Specifies whether to highlight a particular property of the displayed person.
            <br></br>Equivalent to the native <c>setHighlightedItemForProperty:withIdentifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>property</em>
                <p>The property to highlight.</p>
                <em>identifier</em>
                <p>When <em>property</em> is a multi-value property, the value to highlight.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property displayedPerson</c></li>
                </ul>
            </remarks>
            <param name="property">
            </param>
            <param name="identifier">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABPersonViewControllerDelegate">
            <summary>
            The <c>ABPersonViewControllerDelegate</c> protocol declares the interface that must be implemented by <c>ABPersonViewController</c> delegates.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewControllerDelegate.UP_ABPersonViewControllerDelegate_set__personViewController_shouldPerformDefaultActionForPerson_property_identifier__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABPersonViewControllerDelegate.ShouldPerformDefaultActionForPerson(U3DXT.iOS.Native.AddressBookUI.ABPersonViewController,U3DXT.iOS.Native.AddressBook.ABRecord,System.Int32,System.Int32)">
            <summary>
            (<b>required</b>) Sent when the user selects a property value of the person displayed in a person view controller. (required)
            <br></br>Equivalent to the native <c>personViewController:shouldPerformDefaultActionForPerson:property:identifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>personViewController</em>
                <p>The sender.</p>
                <em>person</em>
                <p>The person <em>personViewController</em> is displaying.</p>
                <em>property</em>
                <p>The property whose value the user selected.</p>
                <em>valueIdentifier</em>
                <p>When <em>property</em> is a multivalue property, the value the user selected.</p>
                <b>Return Value</b>
                <ul class="ul">
                    <li class="li">
                        <p>
                            <c>true</c> if <em>personViewController</em> should perform its default action. Your application may quit as a result of this action.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>false</c>: if <em>personViewController</em> should do nothing. The delegate may perform custom action processing.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="personViewController">
            </param>
            <param name="person">
            </param>
            <param name="property">
            </param>
            <param name="identifier">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABPersonViewControllerDelegate._personViewController_shouldPerformDefaultActionForPerson_property_identifier__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_personViewController_shouldPerformDefaultActionForPerson_property_identifier__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController">
            <summary>
            The <c>ABUnknownPersonViewController</c> class (whose instances are known as <strong>unknown-person view controllers</strong>) implements a view controller used to create a person record from a set of person properties.
            </summary>
            <remarks>
                <p>Unknown-person view controllers display contact information that can be saved to the Address Book database. From instances of this class, users may also initiate standard actions, such as:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Phone call</p>
                    </li>
                    <li class="li">
                        <p>Text message</p>
                    </li>
                    <li class="li">
                        <p>Create contact</p>
                    </li>
                    <li class="li">
                        <p>Add to contact</p>
                    </li>
                </ul>
                <p>Performing any of the standard actions may result in your application being moved to the background.</p>
                <p>
                    <strong>Important:</strong> Unknown-person view controllers must be used with a navigation controller in order to function properly.</p>
                <p>
                </p>
                <b>Subclassing Notes</b>
                <p>The <c>ABUnknownPersonViewController</c> class does not support subclassing.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.DidResolveToPerson">
            <summary>
            Sent when the user finishes creating a contact or adding the displayed person properties to an existing contact. (required)
            <br></br>Equivalent to implementing the native <c>unknownPersonViewController:didResolveToPerson:</c> method of <c>ABUnknownPersonViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.DidResolveToPersonEventArgs">
            <summary>
            Event arguments for DidResolveToPerson.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.DidResolveToPersonEventArgs.#ctor(U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.DidResolveToPersonEventArgs.person">
            <summary>person</summary>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.shouldPerformDefaultActionForPersonHandler">
            <summary>
            Sent when the user selects a property value of the person displayed in a person view controller.
            <br></br>Equivalent to implementing the native <c>unknownPersonViewController:shouldPerformDefaultActionForPerson:property:identifier:</c> method of <c>ABUnknownPersonViewControllerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_get_addressBook(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_set_addressBook(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_get_allowsActions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_set_allowsActions(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_get_allowsAddingToAddressBook(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_set_allowsAddingToAddressBook(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_get_alternateName(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_set_alternateName(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_get_displayedPerson(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_set_displayedPerson(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_get_message(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_set_message(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_get_unknownPersonViewDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.UP_ABUnknownPersonViewController_set_unknownPersonViewDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController" /> class.
            <br></br>Equivalent to the native <c>[[ABUnknownPersonViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.ClassExists">
            <summary>
            Returns whether the native ABUnknownPersonViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.addressBook">
            <summary>
            Optional. The address book database that the person record is added to.
            <br></br>Equivalent to the native <c>addressBook</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When unspecified, this view controller sets the value of this property by creating an <c>ABAddressBookRef</c> object.</p>
                <p>The person record is only added to the address book database if <c>allowsAddingToAddressBook</c> is <c>true</c> and the user taps the “Add to Existing Contact” or “Create New Contact” button.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property allowsAddingToAddressBook</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.allowsActions">
            <summary>
            Specifies whether buttons appear to let the user perform actions such as sharing the contact, initiating a FaceTime call, or sending a text message.
            <br></br>Equivalent to the native <c>allowsActions</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.allowsAddingToAddressBook">
            <summary>
            Specifies whether the user can add the properties displayed by the unknown-person view controller to the address book database, either as a new contact or by adding them to an existing contact.
            <br></br>Equivalent to the native <c>allowsAddingToAddressBook</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The default value is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.alternateName">
            <summary>
            Provides a value that is displayed instead of the first and last name.
            <br></br>Equivalent to the native <c>alternateName</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The alternate name is only for display. It is not saved if this contact is added to the address book database.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.displayedPerson">
            <summary>
            Specifies a person record whose properties are displayed by the view controller.
            <br></br>Equivalent to the native <c>displayedPerson</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>All the properties of <c>displayedPerson</c> are displayed by the view controller.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.message">
            <summary>
            Text displayed below <c>alternateName</c>.
            <br></br>Equivalent to the native <c>message</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController.unknownPersonViewDelegate">
            <summary>
            The unknown-person view controller delegate.
            <br></br>Equivalent to the native <c>unknownPersonViewDelegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The delegate must adopt the <c>ABUnknownPersonViewControllerDelegate</c> protocol.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate">
            <summary>
            The <c>ABUnknownPersonViewControllerDelegate</c> protocol describes the interface <c>ABUnknownPersonViewController</c> delegates must adopt to respond to unknown-person view user events.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate.UP_ABUnknownPersonViewControllerDelegate_set__unknownPersonViewController_didResolveToPerson__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate.UP_ABUnknownPersonViewControllerDelegate_set__unknownPersonViewController_shouldPerformDefaultActionForPerson_property_identifier__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate.DidResolveToPerson(U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController,U3DXT.iOS.Native.AddressBook.ABRecord)">
            <summary>
            (<b>required</b>) Sent when the user finishes creating a contact or adding the displayed person properties to an existing contact. (required)
            <br></br>Equivalent to the native <c>unknownPersonViewController:didResolveToPerson:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>unknownPersonView</em>
                <p>The unknown-person view controller that sent the message.</p>
                <p>The receiver must dismiss this view controller.</p>
                <em>person</em>
                <p>The contact the user created or to which they added information. This record is saved in the Address Book database.</p>
                <p>
                    <c>NULL</c> when the user cancelled the interaction.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="unknownCardViewController">
            </param>
            <param name="person">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate.ShouldPerformDefaultActionForPerson(U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewController,U3DXT.iOS.Native.AddressBook.ABRecord,System.Int32,System.Int32)">
            <summary>
            (optional) Sent when the user selects a property value of the person displayed in a person view controller.
            <br></br>Equivalent to the native <c>unknownPersonViewController:shouldPerformDefaultActionForPerson:property:identifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>unknownPersonViewController</em>
                <p>The sender.</p>
                <em>person</em>
                <p>The person <em>unknownPersonViewController</em> is displaying.</p>
                <em>property</em>
                <p>The property whose value the user selected.</p>
                <em>identifier</em>
                <p>The identifier for the value the user selected if <em>property</em> is a multivalue property; otherwise, <c>kABMultiValueInvalidIdentifier</c>.</p>
                <b>Return Value</b>
                <ul class="ul">
                    <li class="li">
                        <p>
                            <c>true</c> if <em>unknownPersonViewController</em> should perform its default action. Your application may quit as a result of this action.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>false</c>: if <em>unknownPersonViewController</em> should do nothing. The delegate may perform custom action processing.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="personViewController">
            </param>
            <param name="person">
            </param>
            <param name="property">
            </param>
            <param name="identifier">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate._unknownPersonViewController_didResolveToPerson__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_unknownPersonViewController_didResolveToPerson__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.AddressBookUI.ABUnknownPersonViewControllerDelegate._unknownPersonViewController_shouldPerformDefaultActionForPerson_property_identifier__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_unknownPersonViewController_shouldPerformDefaultActionForPerson_property_identifier__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLActivityType">
            <summary>
            These constants indicate the type of activity associated with location updates.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLActivityType.AutomotiveNavigation">
            <summary>
                <p>The location manager is being used specifically during vehicular navigation to track location changes to the automobile. This activity might cause location updates to be paused only when the vehicle does not move for an extended period of time.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLActivityTypeAutomotiveNavigation</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLActivityType.Fitness">
            <summary>
                <p>The location manager is being used to track any pedestrian-related activity. This activity might cause location updates to be paused only when the user does not move a significant distance over a period of time.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLActivityTypeFitness</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLActivityType.Other">
            <summary>
                <p>The location manager is being used for an unknown activity.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLActivityTypeOther</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLActivityType.OtherNavigation">
            <summary>
                <p>The location manager is being used to track movements for other types of vehicular navigation that are not automobile related. For example, you would use this to track navigation by boat, train, or plane. Do not use this type for pedestrian navigation tracking. This activity might cause location updates to be paused only when the vehicle does not move a significant distance over a period of time.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLActivityTypeOtherNavigation</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLAuthorizationStatus">
            <summary>
            These constants indicate whether the application is authorized to use location services.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLAuthorizationStatus.Denied">
            <summary>
                <p>The user explicitly denied the use of location services for this application or location services are currently disabled in Settings.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLAuthorizationStatusDenied</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLAuthorizationStatus.Restricted">
            <summary>
                <p>This application is not authorized to use location services. The user cannot change this application’s status, possibly due to active restrictions such as parental controls being in place.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLAuthorizationStatusRestricted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLAuthorizationStatus.NotDetermined">
            <summary>
                <p>The user has not yet made a choice regarding whether this application can use location services.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLAuthorizationStatusNotDetermined</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLAuthorizationStatus.Authorized">
            <summary>
                <p>This application is authorized to use location services.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLAuthorizationStatusAuthorized</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLBeacon">
            <summary>
            The <c>CLBeacon</c> class represents a beacon that was encountered during region monitoring. You do not create instances of this class directly. The location manager object reports encountered beacons to its associated delegate object. You can use the information in a beacon object to identify which beacon was encountered.
            </summary>
            <remarks>
                <p>The identity of a beacon is defined by its <c>proximityUUID</c>, <c>major</c>, and <c>minor</c> properties. These values are coded into the beacon itself. For a more thorough description of the meaning of those values, see <em>CLBeaconRegion Class Reference</em>. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.UP_CLBeacon_get_accuracy(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.UP_CLBeacon_get_major(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.UP_CLBeacon_get_minor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.UP_CLBeacon_get_proximity(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.UP_CLBeacon_get_proximityUUID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.UP_CLBeacon_get_rssi(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLBeacon" /> class.
            <br></br>Equivalent to the native <c>[[CLBeacon alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeacon.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeacon.ClassExists">
            <summary>
            Returns whether the native CLBeacon class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeacon.accuracy">
            <summary>
            The accuracy of the proximity value, measured in meters from the beacon. (read-only)
            <br></br>Equivalent to the native <c>accuracy</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Indicates the one sigma horizontal accuracy in meters. Use this property to differentiate between beacons with the same proximity value. Do not use it to identify a precise location for the beacon. Accuracy values may fluctuate due to RF interference. </p>
                <p>A negative value in this property signifies that the actual accuracy could not be determined. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeacon.major">
            <summary>
            The most significant value in the beacon. (read-only)
            <br></br>Equivalent to the native <c>major</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeacon.minor">
            <summary>
            The least significant value in the beacon. (read-only)
            <br></br>Equivalent to the native <c>minor</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeacon.proximity">
            <summary>
            The relative distance to the beacon. (read-only)
            <br></br>Equivalent to the native <c>proximity</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value in this property gives a general sense of the relative distance to the beacon. Use it to quickly identify beacons that are nearer to the user rather than farther away.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeacon.proximityUUID">
            <summary>
            The proximity ID of the beacon. (read-only)
            <br></br>Equivalent to the native <c>proximityUUID</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeacon.rssi">
            <summary>
            The received signal strength of the beacon, measured in decibels. (read-only)
            <br></br>Equivalent to the native <c>rssi</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This value is the average RSSI value of the samples received since the range of the beacon was last reported to your app. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion">
            <summary>
            A <c>CLBeaconRegion</c> object defines a type of region that is based on the device’s proximity to a Bluetooth beacon, as opposed to a geographic location. A beacon region looks for devices whose identifying information matches the information you provide. When that device comes in range, the region triggers the delivery of an appropriate notification.
            </summary>
            <remarks>
                <p>You can monitor beacon regions in two ways. To receive notifications when a device enters or exits the vicinity of a beacon, use the <c>startMonitoringForRegion:</c> method of your location manager object. While a beacon is in range, you can also call the <c>startRangingBeaconsInRegion:</c> method to begin receiving notifications when the relative distance to the beacon changes.</p>
                <p>If you want to configure the current iOS device as a Bluetooth beacon, create a beacon region with the appropriate identifying information. You can then call the <c>peripheralDataWithMeasuredPower:</c> method of the region to get a dictionary that you can use to advertise the device with the Core Bluetooth framework. For more information about using that framework to advertise the device as a beacon, see <em>Location and Maps Programming Guide</em>.</p>
                <b>Specifying a Beacon’s Identity</b>
                <p>You identify beacons using a combination of three values:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The <c>proximityUUID</c> property contains the identifier that you use to identify your company’s beacons. You typically generate only one UUID for your company’s beacons but can generate more as needed. You generate this value using the <c><!--a target="_self" -->uuidgen<!--/a--></c> command-line tool.</p>
                    </li>
                    <li class="li">
                        <p>The <c>major</c> property contains a value that can be used to group related sets of beacons. For example, a department store might assign the same major value for all of the beacons on the same floor.</p>
                    </li>
                    <li class="li">
                        <p>The <c>minor</c> property specifies the individual beacon within a group. For example, for a group of beacons on the same floor of a department store, this value might be assigned to a beacon in a particular section. </p>
                    </li>
                </ul>
                <p>You program the identity values into the beacon hardware itself using the tools provided by the beacon manufacturer. In your app, you then use those values to identify which beacon was found and respond appropriately. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_get_major(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_get_minor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_get_notifyEntryStateOnDisplay(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_set_notifyEntryStateOnDisplay(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_get_proximityUUID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_alloc_initWithProximityUUID_identifier_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_alloc_initWithProximityUUID_major_identifier_(System.String,System.String,System.UInt32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_alloc_initWithProximityUUID_major_minor_identifier_(System.String,System.String,System.UInt32,System.UInt32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.UP_CLBeaconRegion_peripheralDataWithMeasuredPower_(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion" /> class.
            <br></br>Equivalent to the native <c>[[CLBeaconRegion alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.ClassExists">
            <summary>
            Returns whether the native CLBeaconRegion class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.major">
            <summary>
            The value identifying a group of beacons. (read-only)
            <br></br>Equivalent to the native <c>major</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you do not specify a major value for the beacon, the value in this property is <c>null</c>. When this property is <c>null</c>, the major value of the beacon is ignored when determining if it is a match. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.minor">
            <summary>
            The value identifying a specific beacon within a group. (read-only)
            <br></br>Equivalent to the native <c>minor</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you do not specify a minor value for the beacon, the value in this property is <c>null</c>. When this property is <c>null</c>, the minor value of the beacon is ignored when determining if it is a match. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.notifyEntryStateOnDisplay">
            <summary>
            A Boolean indicating whether beacon notifications are sent when the device’s display is on.
            <br></br>Equivalent to the native <c>notifyEntryStateOnDisplay</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When set to <c>true</c>, the location manager sends beacon notifications when the user turns on the display and the device is already inside the region. These notifications are sent even if your app is not running. In that situation, the system launches your app into the background so that it can handle the notifications. In both situations, the location manager calls the <c>locationManager:didDetermineState:forRegion:</c> method of its delegate object.</p>
                <p>The default value for this property is <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.proximityUUID">
            <summary>
            The unique ID of the beacons being targeted. (read-only)
            <br></br>Equivalent to the native <c>proximityUUID</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.#ctor(U3DXT.iOS.Native.Foundation.NSUUID,System.String)">
            <summary>
            Creates an instance of the native CLBeaconRegion and initializes the object. Initializes and returns a region object that targets a beacon with the specified proximity ID.
            <br></br>Equivalent to the native <c>[[CLBeaconRegion alloc] initWithProximityUUID:identifier:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>proximityUUID</em>
                <p>The unique ID of the beacons being targeted. This value must not be <c>null</c>.</p>
                <em>identifier</em>
                <p>A unique identifier to associate with the returned region object. You use this identifier to differentiate regions within your application. This value must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized beacon region object.</p>
                <b>Discussion</b>
                <p>This method creates a region that results in the reporting of all beacons with the specified <em>proximityUUID</em> value. The <c>major</c> and <c>minor</c> values of the beacons are ignored.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="proximityUUID">
            </param>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.#ctor(U3DXT.iOS.Native.Foundation.NSUUID,System.UInt32,System.String)">
            <summary>
            Creates an instance of the native CLBeaconRegion and initializes the object. Initializes and returns a region object that targets a beacon with the specified proximity ID and major value.
            <br></br>Equivalent to the native <c>[[CLBeaconRegion alloc] initWithProximityUUID:major:identifier:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>proximityUUID</em>
                <p>The unique ID of the beacons being targeted. This value must not be <c>null</c>.</p>
                <em>major</em>
                <p>The major value that you use to identify one or more beacons.</p>
                <em>identifier</em>
                <p>A unique identifier to associate with the returned region object. You use this identifier to differentiate regions within your application. This value must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized beacon region object.</p>
                <b>Discussion</b>
                <p>This method creates a region that reports all beacons with the specified <em>proximityUUID</em> and <em>major</em> values. The beacon’s <c>minor</c> value is ignored.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="proximityUUID">
            </param>
            <param name="major">
            </param>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.#ctor(U3DXT.iOS.Native.Foundation.NSUUID,System.UInt32,System.UInt32,System.String)">
            <summary>
            Creates an instance of the native CLBeaconRegion and initializes the object. Initializes and returns a region object that targets a beacon with the specified proximity ID, major value, and minor value.
            <br></br>Equivalent to the native <c>[[CLBeaconRegion alloc] initWithProximityUUID:major:minor:identifier:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>proximityUUID</em>
                <p>The proximity ID of the beacon being targeted. This value must not be <c>null</c>.</p>
                <em>major</em>
                <p>The major value that you use to identify one or more beacons.</p>
                <em>minor</em>
                <p>The minor value that you use to identify a specific beacon.</p>
                <em>identifier</em>
                <p>A unique identifier to associate with the returned region object. You use this identifier to differentiate regions within your application. This value must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized beacon region object.</p>
                <b>Discussion</b>
                <p>This method creates a region that reports the beacon with the specified <em>proximityUUID</em>, <em>major</em>, and <em>minor</em> values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="proximityUUID">
            </param>
            <param name="major">
            </param>
            <param name="minor">
            </param>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLBeaconRegion.PeripheralData(System.Double)">
            <summary>
            Retrieves data that can be used to advertise the current device as a beacon.
            <br></br>Equivalent to the native <c>peripheralDataWithMeasuredPower:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>measuredPower</em>
                <p>The received signal strength indicator (RSSI) value (measured in decibels) for the device. This value represents the measured strength of the beacon from one meter away and is used during ranging. Specify <c>null</c> to use the default value for the device.</p>
                <b>Return Value</b>
                <p>A dictionary of data that you can use in conjunction with a <c>CBPeripheralManager</c> to advertise the current device as a beacon.</p>
                <b>Discussion</b>
                <p>The returned dictionary encodes the beacon’s identifying information along with other information needed to advertise the beacon. You should not need to access the dictionary contents directly. Pass the dictionary to the <c>startAdvertising:</c> method of a <c>CBPeripheralManager</c> to begin advertising the beacon. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="measuredPower">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLCircularRegion">
            <summary>
            The <c>CLCircularRegion</c> class defines the location and boundaries for a circular geographic region. You can use instances of this class to define geo fences for a specific location. The crossing of a geo fence’s boundary causes the location manager to notify its delegate.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.UP_CLCircularRegion_get_center(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.UP_CLCircularRegion_get_radius(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.UP_CLCircularRegion_containsCoordinate_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.UP_CLCircularRegion_alloc_initWithCenter_radius_identifier_(System.String,System.String,System.Double,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLCircularRegion" /> class.
            <br></br>Equivalent to the native <c>[[CLCircularRegion alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.ClassExists">
            <summary>
            Returns whether the native CLCircularRegion class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.center">
            <summary>
            The center point of the geographic area. (read-only)
            <br></br>Equivalent to the native <c>center</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.radius">
            <summary>
            The radius (measured in meters) that defines the geographic area’s outer boundary. (read-only)
            <br></br>Equivalent to the native <c>radius</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.ContainsCoordinate(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            Returns a Boolean value indicating whether the geographic area contains the specified coordinate.
            <br></br>Equivalent to the native <c>containsCoordinate:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>The coordinate to test against the region. </p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the coordinate lies within the region’s boundaries or <c>false</c> if it does not.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLCircularRegion.#ctor(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.Double,System.String)">
            <summary>
            Creates an instance of the native CLCircularRegion and initializes the object. Initializes and returns a region object defining a circular geographic area.
            <br></br>Equivalent to the native <c>[[CLCircularRegion alloc] initWithCenter:radius:identifier:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>center</em>
                <p>The center point of the geographic region to monitor.</p>
                <em>radius</em>
                <p>The distance (measured in meters) from the center point of the geographic region to the edge of the circular boundary.</p>
                <em>identifier</em>
                <p>A unique identifier to associate with the region object. You use this identifier to differentiate regions within your application. This value must not be <c>null</c>.</p>
                <b>Return Value</b>
                <p>An initialized region object.</p>
                <b>Discussion</b>
                <p>When defining a geographic region, remember that the location manager does not generate notifications immediately upon crossing a region boundary. Instead, it applies time and distance criteria to ensure that the crossing was intended and should genuinely trigger a notification. So choose a center point and radius that are appropriate and give you enough time to alert the user. For more information, see the information about region monitoring in <em>Location and Maps Programming Guide</em>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="center">
            </param>
            <param name="radius">
            </param>
            <param name="identifier">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLDeviceOrientation">
            <summary>
            The physical orientation of the device.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLDeviceOrientation.LandscapeLeft">
            <summary>
                <p>The device is in landscape mode, with the device held upright and the home button on the right side.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLDeviceOrientationLandscapeLeft</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLDeviceOrientation.Unknown">
            <summary>
                <p>The orientation is currently not known.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLDeviceOrientationUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLDeviceOrientation.LandscapeRight">
            <summary>
                <p>The device is in landscape mode, with the device held upright and the home button on the left side.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLDeviceOrientationLandscapeRight</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLDeviceOrientation.PortraitUpsideDown">
            <summary>
                <p>The device is in portrait mode but upside down, with the device held upright and the home button at the top.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLDeviceOrientationPortraitUpsideDown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLDeviceOrientation.FaceUp">
            <summary>
                <p>The device is held parallel to the ground with the screen facing upwards.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLDeviceOrientationFaceUp</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLDeviceOrientation.Portrait">
            <summary>
                <p>The device is in portrait mode, with the device held upright and the home button at the bottom.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLDeviceOrientationPortrait</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLDeviceOrientation.FaceDown">
            <summary>
                <p>The device is held parallel to the ground with the screen facing downwards.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLDeviceOrientationFaceDown</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLError">
            <summary>
            Error codes returned by the location manager object.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Errors are delivered to the delegate using an <c>NSError</c> object.</p>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.LocationUnknown">
            <summary>
                <p>The location manager was unable to obtain a location value right now.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorLocationUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.DeferredFailed">
            <summary>
                <p>The location manager did not enter deferred mode for an unknown reason. This error can occur if GPS is unavailable, not active, or is temporarily interrupted. If you get this error on a device that has GPS hardware, the solution is to try again.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorDeferredFailed</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.Denied">
            <summary>
                <p>Access to the location service was denied by the user.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorDenied</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.RegionMonitoringFailure">
            <summary>
                <p>A registered region cannot be monitored. Monitoring can fail if the app has exceeded the maximum number of regions that it can monitor simultaneously. Monitoring can also fail if the region’s radius distance is too large.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorRegionMonitoringFailure</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.GeocodeFoundPartialResult">
            <summary>
                <p>The geocode request yielded a partial result. </p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorGeocodeFoundPartialResult</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.RegionMonitoringDenied">
            <summary>
                <p>Access to the region monitoring service was denied by the user. </p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorRegionMonitoringDenied</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.DeferredNotUpdatingLocation">
            <summary>
                <p>The location manager did not enter deferred mode because location updates were already disabled or paused. </p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorDeferredNotUpdatingLocation</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.HeadingFailure">
            <summary>
                <p>The heading could not be determined.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorHeadingFailure</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.DeferredCanceled">
            <summary>
                <p>The request for deferred updates was canceled by your app or by the location manager. This error is returned if you call the <c>disallowDeferredLocationUpdates</c> method or schedule a new deferred update before the previous deferred update request is processed. The location manager may also report this error too. For example, if the app is in the foreground when a new location is determined, the location manager cancels deferred updates and delivers the location data to your app.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorDeferredCanceled</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.RangingUnavailable">
            <summary>
                <p>Ranging is disabled. This might happen if the device is in Airplane mode or if Bluetooth or location services are disabled.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorRangingUnavailable</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.DeferredAccuracyTooLow">
            <summary>
                <p>Deferred mode is not supported for the requested accuracy. The accuracy must be set to <c>kCLLocationAccuracyBest</c> or <c>kCLLocationAccuracyBestForNavigation</c>. </p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorDeferredAccuracyTooLow</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.RangingFailure">
            <summary>
                <p>A general ranging error occurred. </p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorRangingFailure</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.RegionMonitoringSetupDelayed">
            <summary>
                <p>Core Location could not initialize the region monitoring feature immediately.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorRegionMonitoringSetupDelayed</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.Network">
            <summary>
                <p>The network was unavailable or a network error occurred.</p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorNetwork</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.GeocodeFoundNoResult">
            <summary>
                <p>The geocode request yielded no result. </p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorGeocodeFoundNoResult</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.RegionMonitoringResponseDelayed">
            <summary>
                <p>Core Location will deliver events but they may be delayed. Possible keys in the user information dictionary are described in  “Error User Info Keys.” </p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorRegionMonitoringResponseDelayed</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.GeocodeCanceled">
            <summary>
                <p>The geocode request was canceled. </p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorGeocodeCanceled</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLError.DeferredDistanceFiltered">
            <summary>
                <p>Deferred mode does not support distance filters. Set the distance filter to <c>kCLDistanceFilterNone</c>. </p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorDeferredDistanceFiltered</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLErrorDomain">
            <summary>
            Constants belonging to CLErrorDomain.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLErrorDomain.kCLErrorDomain">
            <summary>
                <p>The domain for Core Location errors. This value is used in the <c>NSError</c> class. </p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorDomain</c> constant.
            </summary>
            <remarks>
            The domain for Core Location errors.
            <p></p><p></p>This is a constant for "kCLErrorDomain".
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLGeocoder">
            <summary>
            The <c>CLGeocoder</c> class provides services for converting between a coordinate (specified as a latitude and longitude) and the user-friendly representation of that coordinate. A user-friendly representation of the coordinate typically consists of the street, city, state, and country information corresponding to the given location, but it may also contain a relevant point of interest, landmarks, or other identifying information. A geocoder object is a single-shot object that works with a network-based service to look up placemark information for its specified coordinate value.
            </summary>
            <remarks>
                <p>To use a geocoder object, create it and call one of its forward- or reverse-geocoding methods to begin the request. <strong>Reverse-geocoding</strong> requests take a latitude and longitude value and find a user-readable address. <strong>Forward-geocoding</strong> requests take a user-readable address and find the corresponding latitude and longitude value. Forward-geocoding requests may also return additional information about the specified location, such as a point of interest or building at that location. For both types of request, the results are returned using a <c>CLPlacemark</c> object. In the case of forward-geocoding requests, multiple placemark objects may be returned if the provided information yielded multiple possible locations.</p>
                <p>To make smart decisions about what types of information to return, the geocoder server uses all the information provided to it when processing the request. For example, if the user is moving quickly along a highway, it might return the name of the overall region, and not the name of a small park that the user is passing through. </p>
                <p>Applications should be conscious of how they use geocoding. Geocoding requests are rate-limited for each app, so making too many requests in a short period of time may cause some of the requests to fail. (When the maximum rate is exceeded, the geocoder returns an error object with the value <c>kCLErrorNetwork</c> to the associated completion handler.) Here are some rules of thumb for using this class effectively:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Send at most one geocoding request for any one user action.</p>
                    </li>
                    <li class="li">
                        <p>If the user performs multiple actions that involve geocoding the same location, reuse the results from the initial geocoding request instead of starting individual requests for each action.</p>
                    </li>
                    <li class="li">
                        <p>When you want to update the user’s current location automatically (such as when the user is moving), issue new geocoding requests only when the user has moved a significant distance and after a reasonable amount of time has passed. For example, in a typical situation, you should not send more than one geocoding request per minute.</p>
                    </li>
                    <li class="li">
                        <p>Do not start a geocoding request at a time when the user will not see the results immediately. For example, do not start a request if your application is inactive or in the background.</p>
                    </li>
                </ul>
                <p>The computer or device must have access to the network in order for the geocoder object to return detailed placemark information. Although, the geocoder stores enough information locally to report the localized country name and ISO country code for many locations. If country information is not available for a specific location, the geocoder may still report an error to your completion block.</p>
                <p>You can use geocoder objects either in conjunction with, or independent of, the classes of the Map Kit framework. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.UP_CLGeocoder_get_geocoding(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.UP_CLGeocoder_cancelGeocode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.UP_CLGeocoder_geocodeAddressDictionary_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.UP_CLGeocoder_geocodeAddressString_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.UP_CLGeocoder_geocodeAddressString_inRegion_completionHandler_(System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.UP_CLGeocoder_reverseGeocodeLocation_completionHandler_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLGeocoder" /> class.
            <br></br>Equivalent to the native <c>[[CLGeocoder alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLGeocoder.ClassExists">
            <summary>
            Returns whether the native CLGeocoder class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLGeocoder.geocoding">
            <summary>
            A Boolean value indicating whether the receiver is in the middle of geocoding its value. (read-only)
            <br></br>Equivalent to the native <c>geocoding</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property contains the value <c>true</c> if the process is ongoing or <c>false</c> if the process is done or has not yet been initiated.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.CancelGeocode">
            <summary>
            Cancels a pending geocoding request.
            <br></br>Equivalent to the native <c>cancelGeocode</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You can use this method to cancel a pending request and free up the resources associated with that request. Canceling a pending request causes the completion handler block to be called.</p>
                <p>If the request is not pending, because it has already returned or has not yet begun, this method does nothing.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.GeocodeAddressDictionary(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Submits a forward-geocoding request using the specified address dictionary.
            <br></br>Equivalent to the native <c>geocodeAddressDictionary:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressDictionary</em>
                <p>An Address Book dictionary containing information about the address to look up. </p>
                <em>completionHandler</em>
                <p>A block object containing the code to execute at the end of the request. This code is called whether the request is successful or unsuccessful. </p>
                <b>Discussion</b>
                <p>This method submits the specified location data to the geocoding server asynchronously and returns. Your completion handler block will be executed on the main thread. After initiating a forward-geocoding request, do not attempt to initiate another forward- or reverse-geocoding request. </p>
                <p>Geocoding requests are rate-limited for each app, so making too many requests in a short period of time may cause some of the requests to fail. When the maximum rate is exceeded, the geocoder passes an error object with the value  <c>kCLErrorNetwork</c> to your completion handler.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="addressDictionary">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.GeocodeAddressString(System.String,System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Submits a forward-geocoding request using the specified string.
            <br></br>Equivalent to the native <c>geocodeAddressString:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressString</em>
                <p>A string describing the location you want to look up. For example, you could specify the string “1 Infinite Loop, Cupertino, CA” to locate Apple headquarters.</p>
                <em>completionHandler</em>
                <p>A block object containing the code to execute at the end of the request. This code is called whether the request is successful or unsuccessful. </p>
                <b>Discussion</b>
                <p>This method submits the specified location data to the geocoding server asynchronously and returns. Your completion handler block will be executed on the main thread. After initiating a forward-geocoding request, do not attempt to initiate another forward- or reverse-geocoding request. </p>
                <p>Geocoding requests are rate-limited for each app, so making too many requests in a short period of time may cause some of the requests to fail. When the maximum rate is exceeded, the geocoder passes an error object with the value  <c>kCLErrorNetwork</c> to your completion handler.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="addressString">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.GeocodeAddressString(System.String,U3DXT.iOS.Native.CoreLocation.CLRegion,System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Submits a forward-geocoding request using the specified string and region information.
            <br></br>Equivalent to the native <c>geocodeAddressString:inRegion:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressString</em>
                <p>A string describing the location you want to look up. For example, you could specify the string “1 Infinite Loop, Cupertino, CA” to locate Apple headquarters.</p>
                <em>region</em>
                <p>A geographical region to use as a hint when looking up the specified address. Specifying a region lets you prioritize the returned set of results to locations that are close to some specific geographical area, which is typically the user’s current location. If <c>null</c> and the application is authorized for location services, the set of results is prioritized based on the user’s approximate location. Invoking this method does not trigger a location services authorization request.</p>
                <em>completionHandler</em>
                <p>A block object containing the code to execute at the end of the request. This code is called whether the request is successful or unsuccessful. </p>
                <b>Discussion</b>
                <p>This method submits the specified location data to the geocoding server asynchronously and returns. Your completion handler block will be executed on the main thread. After initiating a forward-geocoding request, do not attempt to initiate another forward- or reverse-geocoding request. </p>
                <p>Geocoding requests are rate-limited for each app, so making too many requests in a short period of time may cause some of the requests to fail. When the maximum rate is exceeded, the geocoder passes an error object with the value  <c>kCLErrorNetwork</c> to your completion handler.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="addressString">
            </param>
            <param name="region">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLGeocoder.ReverseGeocodeLocation(U3DXT.iOS.Native.CoreLocation.CLLocation,System.Action{System.Object[],U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Submits a reverse-geocoding request for the specified location.
            <br></br>Equivalent to the native <c>reverseGeocodeLocation:completionHandler:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>location</em>
                <p>The location object containing the coordinate data to look up.</p>
                <em>completionHandler</em>
                <p>A block object containing the code to execute at the end of the request. This code is called whether the request is successful or unsuccessful. </p>
                <b>Discussion</b>
                <p>This method submits the specified location data to the geocoding server asynchronously and returns. Your completion handler block will be executed on the main thread. After initiating a reverse-geocoding request, do not attempt to initiate another reverse- or forward-geocoding request. </p>
                <p>Geocoding requests are rate-limited for each app, so making too many requests in a short period of time may cause some of the requests to fail. When the maximum rate is exceeded, the geocoder passes an error object with the value  <c>kCLErrorNetwork</c> to your completion handler.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="location">
            </param>
            <param name="completionHandler"> A callback delegate.</param>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLHeading">
            <summary>
            A <c>CLHeading</c> object contains heading data generated by a <c>CLLocationManager</c> object. The heading data consists of computed values for true and magnetic north. It also includes the raw data for the three-dimensional vector used to compute those values.
            </summary>
            <remarks>
                <p>Typically, you do not create instances of this class yourself, nor do you subclass it. Instead, you receive instances of this class through the delegate assigned to the <c>CLLocationManager</c> object whose <c>startUpdatingHeading</c> method you called. </p>
                <p>
                    <strong>Note:</strong> If you want heading objects to contain valid data for the <c>trueHeading</c> property, your location manager object should also be configured to deliver location updates. You can start the delivery of these updates by calling the location manager object’s <c>startUpdatingLocation</c> method. </p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLHeading.kCLHeadingFilterNone">
            <summary>
                <p>All heading changes are reported.  </p>
                <p>Available in iOS 3.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLHeadingFilterNone</c> constant.
            </summary>
            <remarks>
            This constant indicates the minimum heading change before an event is generated.
            <p></p><br />
            	Feedback
            <p></p>This is a constant for "Heading Filter Value".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.UP_CLHeading_get_headingAccuracy(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.UP_CLHeading_get_magneticHeading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.UP_CLHeading_get_timestamp(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.UP_CLHeading_get_trueHeading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.UP_CLHeading_get_x(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.UP_CLHeading_get_y(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.UP_CLHeading_get_z(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.UP_CLHeading_description(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLHeading" /> class.
            <br></br>Equivalent to the native <c>[[CLHeading alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLHeading.ClassExists">
            <summary>
            Returns whether the native CLHeading class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLHeading.headingAccuracy">
            <summary>
            The maximum deviation (measured in degrees) between the reported heading and the true geomagnetic heading. (read-only)
            <br></br>Equivalent to the native <c>headingAccuracy</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>A positive value in this property represents the potential error between the value reported by the <c>magneticHeading</c> property and the actual direction of magnetic north. Thus, the lower the value of this property, the more accurate the heading. A negative value means that the reported heading is invalid, which can occur when the device is uncalibrated or there is strong interference from local magnetic fields.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLHeading.magneticHeading">
            <summary>
            The heading (measured in degrees) relative to magnetic north. (read-only)
            <br></br>Equivalent to the native <c>magneticHeading</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value in this property represents the heading relative to the magnetic North Pole, which is different from the geographic North Pole. The value <c>0</c> means the device is pointed toward magnetic north, <c>90</c> means it is pointed east, <c>180</c> means it is pointed south, and so on. The value in this property should always be valid.</p>
                <p>In iOS 3.x and earlier, the value in this property is always measured relative to the top of the device in a portrait orientation, regardless of the device’s actual physical or interface orientation. In iOS 4.0 and later, the value is measured relative to the heading orientation specified by the location manager. For more information, see the <c>headingOrientation</c> property in <em>CLLocationManager Class Reference</em>.</p>
                <p>If the <c>headingAccuracy</c> property contains a negative value, the value in this property should be considered unreliable.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property headingAccuracy</c></li>
                    <li>    <c>@property trueHeading</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLHeading.timestamp">
            <summary>
            The time at which this heading was determined. (read-only)
            <br></br>Equivalent to the native <c>timestamp</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLHeading.trueHeading">
            <summary>
            The heading (measured in degrees) relative to true north. (read-only)
            <br></br>Equivalent to the native <c>trueHeading</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value in this property represents the heading relative to the geographic North Pole. The value <c>0</c> means the device is pointed toward true north, <c>90</c> means it is pointed due east, <c>180</c> means it is pointed due south, and so on. A negative value indicates that the heading could not be determined. </p>
                <p>In iOS 3.x and earlier, the value in this property is always measured relative to the top of the device in a portrait orientation, regardless of the device’s actual physical or interface orientation. In iOS 4.0 and later, the value is measured relative to the heading orientation specified by the location manager. For more information, see the <c>headingOrientation</c> property in <em>CLLocationManager Class Reference</em>.</p>
                <p>
                    <strong>Important:</strong> This property contains a valid value only if location updates are also enabled for the corresponding location manager object. Because the position of true north is different from the position of magnetic north on the Earth’s surface, Core Location needs the current location of the device to compute the value of this property. </p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property magneticHeading</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLHeading.x">
            <summary>
            The geomagnetic data (measured in microteslas) for the x-axis. (read-only)
            <br></br>Equivalent to the native <c>x</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This value represents the x-axis deviation from the magnetic field lines being tracked by the device.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLHeading.y">
            <summary>
            The geomagnetic data (measured in microteslas) for the y-axis. (read-only)
            <br></br>Equivalent to the native <c>y</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This value represents the y-axis deviation from the magnetic field lines being tracked by the device.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLHeading.z">
            <summary>
            The geomagnetic data (measured in microteslas) for the z-axis. (read-only)
            <br></br>Equivalent to the native <c>z</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This value represents the z-axis deviation from the magnetic field lines being tracked by the device.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLHeading.Description">
            <summary>
            Returns the heading data in a formatted text string.
            <br></br>Equivalent to the native <c>description</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A string of the form “magneticHeading <em>&lt;magnetic&gt;</em> trueHeading <em>&lt;heading&gt;</em> accuracy <em>&lt;accuracy&gt;</em> x <em>&lt;x&gt;</em> y <em>&lt;y&gt;</em> z <em>&lt;z&gt;</em> @ <em>&lt;date-time&gt;</em>” where <em>&lt;magnetic&gt;</em>, <em>&lt;heading&gt;</em>, <em>&lt;accuracy&gt;</em>, <em>&lt;x&gt;</em>, <em>&lt;y&gt;</em>, and <em>&lt;z&gt;</em> are formatted floating-point numbers and <em>&lt;date-time&gt;</em> is a formatted date string that includes date, time, and time zone information.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocation">
            <summary>
            A <c>CLLocation</c> object represents the location data generated by a <c>CLLocationManager</c> object. This object incorporates the geographical coordinates and altitude of the device’s location along with values indicating the accuracy of the measurements and when those measurements were made. In iOS, this class also reports information about the speed and heading in which the device is moving.
            </summary>
            <remarks>
                <p>Typically, you use a <c>CLLocationManager</c> object to create instances of this class based on the last known location of the user’s device. You can create instances yourself, however, if you want to cache custom location data or get the distance between two points.</p>
                <p>This class is designed to be used as is and should not be subclassed.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocation.kCLLocationAccuracyKilometer">
            <summary>
                <p>Accurate to the nearest kilometer.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLLocationAccuracyKilometer</c> constant.
            </summary>
            <remarks>
            Constant values you can use to specify the accuracy of a location.
            <p></p><p></p>This is a constant for "Accuracy Constants".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocation.kCLLocationAccuracyNearestTenMeters">
            <summary>
                <p>Accurate to within ten meters of the desired target. </p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLLocationAccuracyNearestTenMeters</c> constant.
            </summary>
            <remarks>
            Constant values you can use to specify the accuracy of a location.
            <p></p><p></p>This is a constant for "Accuracy Constants".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocation.kCLLocationAccuracyHundredMeters">
            <summary>
                <p>Accurate to within one hundred meters.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLLocationAccuracyHundredMeters</c> constant.
            </summary>
            <remarks>
            Constant values you can use to specify the accuracy of a location.
            <p></p><p></p>This is a constant for "Accuracy Constants".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocation.kCLLocationAccuracyBest">
            <summary>
                <p>Use the highest-level of accuracy.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLLocationAccuracyBest</c> constant.
            </summary>
            <remarks>
            Constant values you can use to specify the accuracy of a location.
            <p></p><p></p>This is a constant for "Accuracy Constants".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocation.kCLLocationAccuracyThreeKilometers">
            <summary>
                <p>Accurate to the nearest three kilometers.</p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLLocationAccuracyThreeKilometers</c> constant.
            </summary>
            <remarks>
            Constant values you can use to specify the accuracy of a location.
            <p></p><p></p>This is a constant for "Accuracy Constants".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocation.kCLLocationAccuracyBestForNavigation">
            <summary>
                <p>Use the highest possible accuracy and combine it with additional sensor data. This level of accuracy is intended for use in navigation applications that require precise position information at all times and are intended to be used only while the device is plugged in. </p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLLocationAccuracyBestForNavigation</c> constant.
            </summary>
            <remarks>
            Constant values you can use to specify the accuracy of a location.
            <p></p><p></p>This is a constant for "Accuracy Constants".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocation.kCLDistanceFilterNone">
            <summary>
                <p>All movements are reported. </p>
                <p>Available in iOS 2.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLDistanceFilterNone</c> constant.
            </summary>
            <remarks>
            This constant indicates the minimum distance required before an event is generated.
            <p></p><p></p>This is a constant for "Distance Filter Value".
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_get_altitude(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_get_coordinate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_get_course(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_get_horizontalAccuracy(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_get_speed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_get_timestamp(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_get_verticalAccuracy(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_description(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_distanceFromLocation_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_getDistanceFrom_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_alloc_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_(System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_alloc_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_alloc_initWithLatitude_longitude_(System.String,System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_CLLocationCoordinate2DIsValid(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.UP_CLLocation_CLLocationCoordinate2DMake(System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocation" /> class.
            <br></br>Equivalent to the native <c>[[CLLocation alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocation.ClassExists">
            <summary>
            Returns whether the native CLLocation class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.Coordinate2DIsValid(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            Returns a Boolean indicating whether the specified coordinate is valid.
            <br></br>Equivalent to the native <c>CLLocationCoordinate2DIsValid</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coord</em>
                <p>A coordinate containing latitude and longitude values.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the coordinate is valid or <c>false</c> if it is not.</p>
                <b>Discussion</b>
                <p>A coordinate is considered invalid if it meets at least one of the following criteria:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Its latitude is greater than 90 degrees or less than -90 degrees.</p>
                    </li>
                    <li class="li">
                        <p>Its longitude is greater than 180 degrees or less than -180 degrees.</p>
                    </li>
                </ul>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="coord">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.Coordinate2DMake(System.Double,System.Double)">
            <summary>
            Formats a latitude and longitude value into a coordinate data structure format.
            <br></br>Equivalent to the native <c>CLLocationCoordinate2DMake</c> function.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>latitude</em>
                <p>The latitude for the new coordinate.</p>
                <em>longitude</em>
                <p>The longitude for the new coordinate.</p>
                <b>Return Value</b>
                <p>A coordinate structure encompassing the latitude and longitude values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="latitude">
            </param>
            <param name="longitude">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocation.altitude">
            <summary>
            The altitude measured in meters. (read-only)
            <br></br>Equivalent to the native <c>altitude</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Positive values indicate altitudes above sea level. Negative values indicate altitudes below sea level.</p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property verticalAccuracy</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocation.coordinate">
            <summary>
            The geographical coordinate information. (read-only)
            <br></br>Equivalent to the native <c>coordinate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When running in the simulator, Core Location assigns a fixed set of coordinate values to this property. You must run your application on an iOS-based device to get real location values. </p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocation.course">
            <summary>
            The direction in which the device is traveling.
            <br></br>Equivalent to the native <c>course</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Course values are measured in degrees starting at due north and continuing clockwise around the compass. Thus, north is 0 degrees, east is 90 degrees, south is 180 degrees, and so on. Course values may not be available on all devices. A negative value indicates that the direction is invalid.</p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.2 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocation.horizontalAccuracy">
            <summary>
            The radius of uncertainty for the location, measured in meters. (read-only)
            <br></br>Equivalent to the native <c>horizontalAccuracy</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The location’s latitude and longitude identify the center of the circle, and this value indicates the radius of that circle. A negative value indicates that the location’s latitude and longitude are invalid. </p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocation.speed">
            <summary>
            The instantaneous speed of the device in meters per second.
            <br></br>Equivalent to the native <c>speed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This value reflects the instantaneous speed of the device in the direction of its current heading. A negative value indicates an invalid speed. Because the actual speed can change many times between the delivery of subsequent location events, you should use this property for informational purposes only. </p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.2 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocation.timestamp">
            <summary>
            The time at which this location was determined. (read-only)
            <br></br>Equivalent to the native <c>timestamp</c> property.
            </summary>
            <remarks>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocation.verticalAccuracy">
            <summary>
            The accuracy of the altitude value in meters. (read-only)
            <br></br>Equivalent to the native <c>verticalAccuracy</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value in the <c>altitude</c> property could be plus or minus the value indicated by this property. A negative value indicates that the altitude value is invalid.</p>
                <p>Determining the vertical accuracy requires a device with GPS capabilities.  Thus, on some earlier iOS-based devices, this property always contains a negative value. </p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property altitude</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.Description">
            <summary>
            Returns the location data in a formatted text string.
            <br></br>Equivalent to the native <c>description</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A string of the form “&lt;<em>&lt;latitude&gt;</em>, <em>&lt;longitude&gt;</em>&gt; +/- <em>&lt;accuracy&gt;</em>m (speed <em>&lt;speed&gt;</em> kph / heading <em>&lt;heading&gt;</em>) @ <em>&lt;date-time&gt;</em>”, where <em>&lt;latitude&gt;</em>, <em>&lt;longitude&gt;</em>, <em>&lt;accuracy&gt;</em>, <em>&lt;speed&gt;</em>, and <em>&lt;heading&gt;</em> are formatted floating point numbers and <em>&lt;date-time&gt;</em> is a formatted date string that includes date, time, and time zone information.  </p>
                <b>Discussion</b>
                <p>The returned string is intended for display purposes only. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.Distance(U3DXT.iOS.Native.CoreLocation.CLLocation)">
            <summary>
            Returns the distance (in meters) from the receiver’s location to the specified location.
            <br></br>Equivalent to the native <c>distanceFromLocation:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>location</em>
                <p>The other location. </p>
                <b>Return Value</b>
                <p>The distance (in meters) between the two locations.</p>
                <b>Discussion</b>
                <p>This method measures the distance between the two locations by tracing a line between them that follows the curvature of the Earth. The resulting arc is a smooth curve and does not take into account specific altitude changes between the two locations.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.2 and later.</li>
                </ul>
            </remarks>
            <param name="location">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.GetDistanceFrom(U3DXT.iOS.Native.CoreLocation.CLLocation)">
            <summary>
            Returns the distance (in meters) from the receiver’s location to the specified location.  ( Deprecated in iOS 3.2.  Use the <c>distanceFromLocation:</c> method instead.)
            <br></br>Equivalent to the native <c>getDistanceFrom:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>location</em>
                <p>The other location. </p>
                <b>Return Value</b>
                <p>The distance (in meters) between the two locations.</p>
                <b>Discussion</b>
                <p>This method measures the distance between the two locations by tracing a line between them that follows the curvature of the Earth. The resulting arc is a smooth curve and does not take into account specific altitude changes between the two locations.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                    <li>Deprecated in iOS 3.2.</li>
                </ul>
            </remarks>
            <param name="location">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.#ctor(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.Double,System.Double,System.Double,System.Double,System.Double,System.DateTime)">
            <summary>
            Creates an instance of the native CLLocation and initializes the object. Initializes and returns a location object with the specified coordinate and course information.
            <br></br>Equivalent to the native <c>[[CLLocation alloc] initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>A coordinate structure containing the latitude and longitude values.</p>
                <em>altitude</em>
                <p>The altitude value for the location.</p>
                <em>hAccuracy</em>
                <p>The accuracy of the coordinate value. Specifying a negative number indicates that the coordinate value is invalid.</p>
                <em>vAccuracy</em>
                <p>The accuracy of the altitude value. Specifying a negative number indicates that the altitude value is invalid.</p>
                <em>course</em>
                <p>The direction of travel for the location.</p>
                <em>speed</em>
                <p>The current speed associated with this location.</p>
                <em>timestamp</em>
                <p>The time to associate with the location object. Typically, you would set this to the current time.</p>
                <b>Return Value</b>
                <p>A location object initialized with the specified information.</p>
                <b>Discussion</b>
                <p>Typically, you acquire location objects from the location service, but you can use this method to create new location objects for other uses in your application.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
            <param name="altitude">
            </param>
            <param name="hAccuracy">
            </param>
            <param name="vAccuracy">
            </param>
            <param name="course">
            </param>
            <param name="speed">
            </param>
            <param name="timestamp">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.#ctor(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,System.Double,System.Double,System.Double,System.DateTime)">
            <summary>
            Creates an instance of the native CLLocation and initializes the object. Initializes and returns a location object with the specified coordinate information.
            <br></br>Equivalent to the native <c>[[CLLocation alloc] initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>A coordinate structure containing the latitude and longitude values.</p>
                <em>altitude</em>
                <p>The altitude value for the location.</p>
                <em>hAccuracy</em>
                <p>The accuracy of the coordinate value. Specifying a negative number indicates that the coordinate value is invalid.</p>
                <em>vAccuracy</em>
                <p>The accuracy of the altitude value. Specifying a negative number indicates that the altitude value is invalid.</p>
                <em>timestamp</em>
                <p>The time to associate with the location object. Typically, you would set this to the current time.</p>
                <b>Return Value</b>
                <p>A location object initialized with the specified information.</p>
                <b>Discussion</b>
                <p>Typically, you acquire location objects from the location service, but you can use this method to create new location objects for other uses in your application.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
            <param name="altitude">
            </param>
            <param name="hAccuracy">
            </param>
            <param name="vAccuracy">
            </param>
            <param name="timestamp">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocation.#ctor(System.Double,System.Double)">
            <summary>
            Creates an instance of the native CLLocation and initializes the object. Initializes and returns a location object with the specified latitude and longitude.
            <br></br>Equivalent to the native <c>[[CLLocation alloc] initWithLatitude:longitude:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>latitude</em>
                <p>The latitude of the coordinate point.</p>
                <em>longitude</em>
                <p>The longitude of the coordinate point.</p>
                <b>Return Value</b>
                <p>A location object initialized with the specified coordinate point.</p>
                <b>Discussion</b>
                <p>Typically, you acquire location objects from the location service, but you can use this method to create new location objects for other uses in your application. When using this method, the other properties of the object are initialized to appropriate values. In particular, the <c>altitude</c> and <c>horizontalAccuracy</c> properties are set to 0, the <c>verticalAccuracy</c> property is set to -1 to indicate that the altitude value is invalid, and the <c>timestamp</c> property is set to the time at which the instance was initialized.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="latitude">
            </param>
            <param name="longitude">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D">
            <summary>
            A structure that contains a geographical coordinate using the WGS 84 reference frame.
            </summary>
            <remarks>
                <b>Fields</b>
                <p>
                </p>
                <c>latitude</c>
                <p>The latitude in degrees. Positive values indicate latitudes north of the equator. Negative values indicate latitudes south of the equator.</p>
                <c>longitude</c>
                <p>The longitude in degrees. Measurements are relative to the zero meridian, with positive values extending east of the meridian and negative values extending west of the meridian.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D.latitude">
            <summary> The latitude.</summary>;</member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D.longitude">
            <summary> The longitude.</summary>;</member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" /> struct.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D._Serialize">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D._Deserialize(System.Object)">
            <summary>
            U3DXT internal method.</summary>
            <returns>
            </returns>
            <param name="json">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" />.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" /> object.
            </summary>
            <returns>
            A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a hash table.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" />.
            </summary>
            <param name="other">
            The <see cref="T:System.Object" /> to compare with the current <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D.op_Equality(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" /> is equal to another specified <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D.op_Inequality(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D,U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            Determines whether a specified instance of <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" /> is not equal to another specified <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" />.
            </summary>
            <param name="lhs">
            The first <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" /> to compare.
            </param>
            <param name="rhs">
            The second <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D" /> to compare.
            </param>
            <returns>
                <c>true</c> if <c>lhs</c> and <c>rhs</c> are not equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager">
            <summary>
            The <c>CLLocationManager</c> class defines the interface for configuring the delivery of location- and heading-related events to your application. You use an instance of this class to establish the parameters that determine when location and heading events should be delivered and to start and stop the actual delivery of those events. You can also use a location manager object to retrieve the most recent location and heading data.
            </summary>
            <remarks>
                <p>A location manager object provides support for the following location-related activities:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Tracking large or small changes in the user’s current location with a configurable degree of accuracy.</p>
                    </li>
                    <li class="li">
                        <p>Reporting heading changes from the onboard compass. (iOS only)</p>
                    </li>
                    <li class="li">
                        <p>Monitoring distinct regions of interest and generating location events when the user enters or leaves those regions. </p>
                    </li>
                    <li class="li">
                        <p>Deferring the delivery of location updates while the app is in the background. (iOS 6 and later only)</p>
                    </li>
                    <li class="li">
                        <p>Reporting the range to nearby beacons. </p>
                    </li>
                </ul>
                <p>Some location services require the presence of specific hardware on the given device. For example, heading information is available only for devices that contain a hardware compass. This class defines several methods that you can use to determine which services are currently available.</p>
                <p>
                    <strong>Important:</strong> In addition to hardware not being available, the user has the option of denying an application’s access to location service data. During its initial uses by an application, the Core Location framework prompts the user to confirm that using the location service is acceptable. If the user denies the request, the <c>CLLocationManager</c> object reports an appropriate error to its delegate during future requests. You can also check the application’s explicit authorization status using the <c>authorizationStatus</c> method. </p>
                <p>
                </p>
                <p>For the services you do use, you should configure any properties associated with that service accurately. The location manager object manages power aggressively by turning off hardware when it is not needed. For example, setting the desired accuracy for location events to one kilometer gives the location manager the flexibility to turn off GPS hardware and rely solely on the WiFi or cell radios. Turning off GPS hardware can lead to significant power savings.</p>
                <p>To configure and use a <c>CLLocationManager</c> object to deliver events:</p>
                <ol class="ol">
                    <li class="li">
                        <p>Always check to see whether the desired services are available before starting any services and abandon the operation if they are not.</p>
                    </li>
                    <li class="li">
                        <p>Create an instance of the <c>CLLocationManager</c> class.</p>
                    </li>
                    <li class="li">
                        <p>Assign a custom object to the <c>delegate</c> property. This object must conform to the <c>CLLocationManagerDelegate</c> protocol.</p>
                    </li>
                    <li class="li">
                        <p>Configure any additional properties relevant to the desired service.</p>
                    </li>
                    <li class="li">
                        <p>Call the appropriate start method to begin the delivery of events.</p>
                    </li>
                </ol>
                <p>All location- and heading-related updates are delivered to the associated delegate object, which is a custom object that you provide.  For information about the delegate methods, see <em>CLLocationManagerDelegate Protocol Reference</em>. </p>
                <b>Getting the User’s Current Location</b>
                <p>There are two options for configuring location-related services:</p>
                <ul class="ul">
                    <li class="li">
                        <p>Use the standard location services, which allow you to specify the desired accuracy of the location data and receive updates as the location changes. Standard location services are available in all versions of iOS and in OS X 10.6 and later. </p>
                    </li>
                    <li class="li">
                        <p>Request events for significant location changes only, which provides a more limited set of tracking options but offers tremendous power savings and the ability to receive location updates even if your application is not running. This service is available only in iOS 4.0 and later and requires a device with a cellular radio. </p>
                    </li>
                </ul>
                <p>Start standard location services by calling the <c>startUpdatingLocation</c> method. This service is most appropriate for applications that need more fine-grained control over the delivery of location events. Specifically, it takes into account the values in the <c>desiredAccuracy</c> and <c>distanceFilter</c> property to determine when to deliver new events. The precision of the standard location services are needed by navigation applications or any application where high-precision location data or a regular stream of updates is required. However, these services typically require the location-tracking hardware to be enabled for longer periods of time, which can result in higher power usage. </p>
                <p>For applications that do not need a regular stream of location events, consider using the <c>startMonitoringSignificantLocationChanges</c> method to start the delivery of events instead. This method is more appropriate for the majority of applications that just need an initial user location fix and need updates only when the user moves a significant distance. This interface delivers new events only when it detects changes to the device’s associated cell towers, resulting in less frequent updates and significantly lower power usage.</p>
                <p>Regardless of which location service you use, location data is reported to your application via the location manager’s associated delegate object. Because it can take several seconds to return an initial location, the location manager typically delivers the previously cached location data immediately and then delivers more up-to-date location data as it becomes available. Therefore it is always a good idea to check the timestamp of any location object before taking any actions. If both location services are enabled simultaneously, they deliver events using the same set of delegate methods.</p>
                <p>In iOS 6 and later, you can defer the delivery of location data when your app is in the background. It is recommended that you use this feature in situations where your app could process the data later without any problems. For example, an app that tracks the user’s location on a hiking trail could defer updates until the user hikes a certain distance and then process the points all at once. Deferring updates helps save power by allowing your app to remain asleep for longer periods of time. </p>
                <b>Using Regions to Monitor Boundary Crossings</b>
                <p>In iOS 4.0 and later and OS X 10.8 and later, you can use the region-monitoring service to define the boundaries for multiple geographical regions. After registering a region using the <c>startMonitoringForRegion:</c> method, the location manager tracks movement across the region’s boundary and reports that movement to its delegate. You might use region monitoring to alert the user to approaching landmarks or to provide other relevant information. For example, upon approaching a dry cleaners, an application could notify the user to pick up any clothes that had been dropped off and are now ready. </p>
                <p>In iOS, the regions you register with the location manager persist between launches of your application. If a region crossing occurs while your iOS app is not running, the system automatically wakes it up (or relaunches it) in the background so that it can process the event. When relaunched, all of the regions you configured previously are made available in the <c>monitoredRegions</c> property of any location manager objects you create. </p>
                <p>In OS X, region monitoring works only while the app is running (either in the foreground or background) and the user’s system is awake. The system does not launch apps to deliver region-related notifications. Similarly, if the user puts the computer to sleep, the system does not deliver region monitoring notifications to your app. If the user wakes up the computer inside a monitored region, the system does deliver region notifications to your app if it is running. However, if the computer enters and exits the region before being woken up, no notification is delivered.</p>
                <p>
                    <strong>Note:</strong> The region monitoring interfaces were introduced in OS X 10.7 but support for monitoring actual regions is supported only in OS X 10.8 and later.</p>
                <p>
                </p>
                <p>The region monitoring service operates independently of any location services in use by your application, and you may use it in conjunction with any of the other services. Region monitoring is not supported on all devices. Use the <c>regionMonitoringAvailable</c> class method to determine if region monitoring can be used.  </p>
                <b>Configuring Heading-Related Services</b>
                <p>In iOS, a device with the appropriate hardware may also report heading information. When the value in the <c>headingAvailable</c> property is <c>true</c>, you can use a location manager object to retrieve heading information. To begin the delivery of heading-related events, assign a delegate to the location manager object and call the location manager’s <c>startUpdatingHeading</c> method. If location updates are also enabled, the location manager returns both the true heading and magnetic heading values. If location updates are not enabled, the location manager returns only the magnetic heading value. These features are not available in OS X.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.CLLocationDistanceMax">
            <summary>
                <p>A value representing an unlimited distance.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLLocationDistanceMax</c> constant.
            </summary>
            <remarks>
            Constants for specifying maximum values during deferred updates.
            <p></p><p></p>This is a constant for "Deferred Update Constants".
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.CLTimeIntervalMax">
            <summary>
                <p>A value representing an unlimited amount of time. </p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLTimeIntervalMax</c> constant.
            </summary>
            <remarks>
            Constants for specifying maximum values during deferred updates.
            <p></p><p></p>This is a constant for "Deferred Update Constants".
            </remarks>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidChange">
            <summary>
            Tells the delegate that the authorization status for the application changed.
            <br></br>Equivalent to implementing the native <c>locationManager:didChangeAuthorizationStatus:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidChangeEventArgs">
            <summary>
            Event arguments for DidChange.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidChangeEventArgs.#ctor(U3DXT.iOS.Native.CoreLocation.CLAuthorizationStatus)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidChangeEventArgs.status">
            <summary>status</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidDetermine">
            <summary>
            Tells the delegate about the state of the specified region. (required)
            <br></br>Equivalent to implementing the native <c>locationManager:didDetermineState:forRegion:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidDetermineEventArgs">
            <summary>
            Event arguments for DidDetermine.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidDetermineEventArgs.#ctor(U3DXT.iOS.Native.CoreLocation.CLRegionState,U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidDetermineEventArgs.state">
            <summary>state</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidDetermineEventArgs.region">
            <summary>region</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidEnter">
            <summary>
            Tells the delegate that the user entered the specified region.
            <br></br>Equivalent to implementing the native <c>locationManager:didEnterRegion:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidEnterEventArgs">
            <summary>
            Event arguments for DidEnter.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidEnterEventArgs.#ctor(U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidEnterEventArgs.region">
            <summary>region</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidExit">
            <summary>
            Tells the delegate that the user left the specified region.
            <br></br>Equivalent to implementing the native <c>locationManager:didExitRegion:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidExitEventArgs">
            <summary>
            Event arguments for DidExit.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidExitEventArgs.#ctor(U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidExitEventArgs.region">
            <summary>region</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidFail">
            <summary>
            Tells the delegate that the location manager was unable to retrieve a location value.
            <br></br>Equivalent to implementing the native <c>locationManager:didFailWithError:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidFailEventArgs">
            <summary>
            Event arguments for DidFail.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidFailEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidFailEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidFinishDeferredUpdates">
            <summary>
            Tells the delegate that updates will no longer be deferred.
            <br></br>Equivalent to implementing the native <c>locationManager:didFinishDeferredUpdatesWithError:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidFinishDeferredUpdatesEventArgs">
            <summary>
            Event arguments for DidFinishDeferredUpdates.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidFinishDeferredUpdatesEventArgs.#ctor(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidFinishDeferredUpdatesEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidRangeBeacons">
            <summary>
            Tells the delegate that one or more beacons are in range. (required)
            <br></br>Equivalent to implementing the native <c>locationManager:didRangeBeacons:inRegion:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidRangeBeaconsEventArgs">
            <summary>
            Event arguments for DidRangeBeacons.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidRangeBeaconsEventArgs.#ctor(System.Object[],U3DXT.iOS.Native.CoreLocation.CLBeaconRegion)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidRangeBeaconsEventArgs.beacons">
            <summary>beacons</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidRangeBeaconsEventArgs.region">
            <summary>region</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidStartMonitoring">
            <summary>
            Tells the delegate that a new region is being monitored.
            <br></br>Equivalent to implementing the native <c>locationManager:didStartMonitoringForRegion:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidStartMonitoringEventArgs">
            <summary>
            Event arguments for DidStartMonitoring.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidStartMonitoringEventArgs.#ctor(U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidStartMonitoringEventArgs.region">
            <summary>region</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidUpdate">
            <summary>
            Tells the delegate that the location manager received updated heading information.
            <br></br>Equivalent to implementing the native <c>locationManager:didUpdateHeading:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidUpdateEventArgs">
            <summary>
            Event arguments for DidUpdate.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidUpdateEventArgs.#ctor(U3DXT.iOS.Native.CoreLocation.CLHeading)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidUpdateEventArgs.newHeading">
            <summary>newHeading</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidUpdateLocations">
            <summary>
            Tells the delegate that new location data is available.
            <br></br>Equivalent to implementing the native <c>locationManager:didUpdateLocations:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidUpdateLocationsEventArgs">
            <summary>
            Event arguments for DidUpdateLocations.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidUpdateLocationsEventArgs.#ctor(System.Object[])">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidUpdateLocationsEventArgs.locations">
            <summary>locations</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.MonitoringDidFail">
            <summary>
            Tells the delegate that a region monitoring error occurred.
            <br></br>Equivalent to implementing the native <c>locationManager:monitoringDidFailForRegion:withError:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.MonitoringDidFailEventArgs">
            <summary>
            Event arguments for MonitoringDidFail.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.MonitoringDidFailEventArgs.#ctor(U3DXT.iOS.Native.CoreLocation.CLRegion,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.MonitoringDidFailEventArgs.region">
            <summary>region</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.MonitoringDidFailEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.RangingBeaconsDidFail">
            <summary>
            Tells the delegate that an error occurred while gathering ranging information for a set of beacons. (required)
            <br></br>Equivalent to implementing the native <c>locationManager:rangingBeaconsDidFailForRegion:withError:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager.RangingBeaconsDidFailEventArgs">
            <summary>
            Event arguments for RangingBeaconsDidFail.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.RangingBeaconsDidFailEventArgs.#ctor(U3DXT.iOS.Native.CoreLocation.CLBeaconRegion,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.RangingBeaconsDidFailEventArgs.region">
            <summary>region</summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLLocationManager.RangingBeaconsDidFailEventArgs.error">
            <summary>error</summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidPauseLocationUpdates">
            <summary>
            Tells the delegate that location updates were paused. (required)
            <br></br>Equivalent to implementing the native <c>locationManagerDidPauseLocationUpdates:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DidResumeLocationUpdates">
            <summary>
            Tells the delegate that the delivery of location updates has resumed. (required)
            <br></br>Equivalent to implementing the native <c>locationManagerDidResumeLocationUpdates:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.shouldDisplayHeadingCalibrationHandler">
            <summary>
            Asks the delegate whether the heading calibration alert should be displayed.
            <br></br>Equivalent to implementing the native <c>locationManagerShouldDisplayHeadingCalibration:</c> method of <c>CLLocationManagerDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_authorizationStatus">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_deferredLocationUpdatesAvailable">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_headingAvailable">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_isRangingAvailable">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_locationServicesEnabled">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_regionMonitoringAvailable">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_regionMonitoringEnabled">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_significantLocationChangeMonitoringAvailable">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_activityType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_set_activityType(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_desiredAccuracy(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_set_desiredAccuracy(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_distanceFilter(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_set_distanceFilter(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_heading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_headingFilter(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_set_headingFilter(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_headingOrientation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_set_headingOrientation(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_location(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_maximumRegionMonitoringDistance(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_monitoredRegions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_pausesLocationUpdatesAutomatically(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_set_pausesLocationUpdatesAutomatically(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_purpose(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_set_purpose(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_get_rangedRegions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_allowDeferredLocationUpdatesUntilTraveled_timeout_(System.String,System.Double,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_disallowDeferredLocationUpdates(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_dismissHeadingCalibrationDisplay(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_requestStateForRegion_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_startMonitoringForRegion_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_startMonitoringForRegion_desiredAccuracy_(System.String,System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_startMonitoringSignificantLocationChanges(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_startRangingBeaconsInRegion_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_startUpdatingHeading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_startUpdatingLocation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_stopMonitoringForRegion_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_stopMonitoringSignificantLocationChanges(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_stopRangingBeaconsInRegion_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_stopUpdatingHeading(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.UP_CLLocationManager_stopUpdatingLocation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLLocationManager" /> class.
            <br></br>Equivalent to the native <c>[[CLLocationManager alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.ClassExists">
            <summary>
            Returns whether the native CLLocationManager class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.AuthorizationStatus">
            <summary>
            Returns the application’s authorization status for using location services.
            <br></br>Equivalent to the native <c>authorizationStatus</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>A value indicating whether the application is authorized to use location services.</p>
                <b>Discussion</b>
                <p>The authorization status of a given application is managed by the system and determined by several factors. Applications must be explicitly authorized to use location services by the user and location services must themselves currently be enabled for the system. A request for user authorization is displayed automatically when your application first attempts to use location services.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DeferredLocationUpdatesAvailable">
            <summary>
            Returns a Boolean value indicating whether the device supports deferred location updates.
            <br></br>Equivalent to the native <c>deferredLocationUpdatesAvailable</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the device supports deferred location updates or <c>false</c> if it does not.</p>
                <b>Discussion</b>
                <p>Deferred location updates are a way for the location manager to avoid frequently waking up a background app to deliver location changes. Normally, when an app wants location updates in the background, the app must be woken up whenever a new event arrives. Waking up the app consumes power, which in some situations might be wasted if the app cannot do anything with the location information other than log it and go back to sleep anyway. Deferring location updates gives you the ability to wait until a time when your app can do something useful with the data and then process the updates all at once.</p>
                <p>Deferred location updates require the presence of GPS hardware and may not be supported on all iOS devices.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– allowDeferredLocationUpdatesUntilTraveled:timeout:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.HeadingAvailable">
            <summary>
            A Boolean value indicating whether the location manager is able to generate heading-related events. (read-only) ( Deprecated in iOS 4.0.  Use the <c>headingAvailable</c> class method instead.)
            <br></br>Equivalent to the native <c>headingAvailable</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Heading data may not be available on all iOS-based devices. You should check the value of this property before asking the location manager to deliver heading-related events.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                    <li>Deprecated in iOS 4.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– startUpdatingHeading</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.IsRangingAvailable">
            <summary>
            Returns a Boolean indicating whether the device supports ranging of Bluetooth beacons.
            <br></br>Equivalent to the native <c>isRangingAvailable</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the device supports ranging or <c>false</c> if it does not.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.LocationServicesEnabled">
            <summary>
            A Boolean value indicating whether location services are enabled on the device. (read-only) ( Deprecated in iOS 4.0.  Use the <c>locationServicesEnabled</c> class method instead.)
            <br></br>Equivalent to the native <c>locationServicesEnabled</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>In iOS, the user can enable or disable location services using the controls in Settings &gt; Location Services. In OS X, the user can enable or disable location services from the Security &amp; Privacy system preference. </p>
                <p>You should check this property before starting location updates to determine whether the user has location services enabled for the current device. If this property contains the value <c>false</c> and you start location updates anyway, the Core Location framework prompts the user with a confirmation alert asking whether location services should be reenabled. </p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                    <li>Deprecated in iOS 4.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– startUpdatingLocation</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.RegionMonitoringAvailable">
            <summary>
            Returns a Boolean value indicating whether region monitoring is supported on the current device. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>regionMonitoringAvailable</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if region monitoring is available; <c>false</c> if it is not.  </p>
                <b>Discussion</b>
                <p>Support for region monitoring may not be available on all devices and models. You should check the value of this property before attempting to set up any regions or initiate region monitoring. </p>
                <p>Even if region monitoring support is present on a device, it may still be unavailable because the user disabled it for the current application or for all applications. </p>
                <b>Special Considerations</b>
                <p>This class is deprecated in iOS 7 and later but is still supported in OS X. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>+ regionMonitoringEnabled</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.RegionMonitoringEnabled">
            <summary>
            Returns a Boolean value indicating whether region monitoring is currently enabled. ( Deprecated in iOS 6.0.  Use <c>regionMonitoringAvailable</c> and <c>authorizationStatus</c> instead.)
            <br></br>Equivalent to the native <c>regionMonitoringEnabled</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if region monitoring is available and is currently enabled; <c>false</c> if it is unavailable or not enabled.</p>
                <b>Discussion</b>
                <p>In iOS, the user can enable or disable location services (including region monitoring) using the controls in Settings &gt; Location Services.</p>
                <p>You should check the return value of this method before starting region monitoring updates to determine whether the user currently allows location services to be used at all. If this method returns <c>false</c> and you start region monitoring updates anyway, the Core Location framework prompts the user to confirm asking whether location services should be reenabled.</p>
                <p>This method does not check to see if region monitoring capabilities are actually supported by the device. Therefore, you should also check the return value of the <c>regionMonitoringAvailable</c> class method before attempting to start region monitoring services.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>+ regionMonitoringAvailable</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.SignificantLocationChangeMonitoringAvailable">
            <summary>
            Returns a Boolean value indicating whether significant location change tracking is available.
            <br></br>Equivalent to the native <c>significantLocationChangeMonitoringAvailable</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>
                    <c>true</c> if location change monitoring is available; <c>false</c> if it is not. </p>
                <b>Discussion</b>
                <p>This method indicates whether the device is able to report updates based on significant location changes only. (Significant location change monitoring primarily involves detecting changes in the cell tower currently associated with the device.) This capability provides tremendous power savings for applications that want to track a user’s approximate location and do not need highly accurate position information. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.activityType">
            <summary>
            The type of user activity associated with the location updates.
            <br></br>Equivalent to the native <c>activityType</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The location manager uses the information in this property as a cue to determine when location updates may be automatically paused. Pausing updates gives the system the opportunity to save power in situations where the user's location is not likely to be changing. For example, if the activity type is <c>CLActivityTypeAutomotiveNavigation</c> and no location changes have occurred recently, the radios might be powered down until movement is detected again.</p>
                <p>The default value of this property is <c>CLActivityTypeOther</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.Delegate">
            <summary>
            The delegate object to receive update events.
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.desiredAccuracy">
            <summary>
            The accuracy of the location data.
            <br></br>Equivalent to the native <c>desiredAccuracy</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The receiver does its best to achieve the requested accuracy; however, the actual accuracy is not guaranteed. </p>
                <p>You should assign a value to this property that is appropriate for your usage scenario. For example, if you need the current location only within a kilometer, you should specify <c>kCLLocationAccuracyKilometer</c> and not <c>kCLLocationAccuracyBestForNavigation</c>. Determining a location with greater accuracy requires more time and more power.</p>
                <p>When requesting high-accuracy location data, the initial event delivered by the location service may not have the accuracy you requested. The location service delivers the initial event as quickly as possible. It then continues to determine the location with the accuracy you requested and delivers additional events, as necessary, when that data is available. </p>
                <p>The default value of this property is <c>kCLLocationAccuracyBest</c>. </p>
                <p>This property is used only in conjunction with the standard location services and is not used when monitoring significant location changes.</p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.distanceFilter">
            <summary>
            The minimum distance (measured in meters) a device must move horizontally before an update event is generated.
            <br></br>Equivalent to the native <c>distanceFilter</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This distance is measured relative to the previously delivered location. Use the value <c>kCLDistanceFilterNone</c> to be notified of all movements. The default value of this property is <c>kCLDistanceFilterNone</c>. </p>
                <p>This property is used only in conjunction with the standard location services and is not used when monitoring significant location changes.</p>
                <b>Special Considerations</b>
                <p>In iOS, this property is declared as <c>nonatomic</c>. In OS X, it is declared as <c>atomic</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.heading">
            <summary>
            The most recently reported heading. (read-only)
            <br></br>Equivalent to the native <c>heading</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is <c>null</c> if heading updates have never been initiated.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.headingFilter">
            <summary>
            The minimum angular change (measured in degrees) required to generate new heading events.
            <br></br>Equivalent to the native <c>headingFilter</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The angular distance is measured relative to the last delivered heading event. Use the value <c>kCLHeadingFilterNone</c> to be notified of all movements. The default value of this property is <c>1</c> degree.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.headingOrientation">
            <summary>
            The device orientation to use when computing heading values.
            <br></br>Equivalent to the native <c>headingOrientation</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When computing heading values, the location manager assumes that the top of the device in portrait mode represents due north (0 degrees) by default. For applications that run in other orientations, this may not always be the most convenient orientation. This property allows you to specify which device orientation you want the location manager to use as the reference point for due north.</p>
                <p>Although you can set the value of this property to <c>CLDeviceOrientationUnknown</c>, <c>CLDeviceOrientationFaceUp</c>, or <c>CLDeviceOrientationFaceDown</c>, doing so has no effect on the orientation reference point. The original reference point is retained instead.</p>
                <p>Changing the value in this property affects only those heading values reported after the change is made.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.location">
            <summary>
            The most recently retrieved user location. (read-only)
            <br></br>Equivalent to the native <c>location</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The value of this property is <c>null</c> if no location data has ever been retrieved. </p>
                <p>In iOS 4.0 and later, this property may contain a more recent location object at launch time. Specifically, if significant location updates are running and your application is terminated, this property is updated with the most recent location data when your application is relaunched (and you create a new location manager object). This location data may be more recent than the last location event processed by your application.  </p>
                <p>It is always a good idea to check the timestamp of the location stored in this property. If the receiver is currently gathering location data, but the minimum distance filter is large, the returned location might be relatively old. If it is, you can stop the receiver and start it again to force an update. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– startUpdatingLocation</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.maximumRegionMonitoringDistance">
            <summary>
            The largest boundary distance that can be assigned to a region. (read-only)
            <br></br>Equivalent to the native <c>maximumRegionMonitoringDistance</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property defines the largest boundary distance allowed from a region’s center point. Attempting to monitor a region with a distance larger than this value causes the location manager to send a <c>kCLErrorRegionMonitoringFailure</c> error to the delegate.</p>
                <p>If region monitoring is unavailable or not supported, the value in this property is <c>-1</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.monitoredRegions">
            <summary>
            The set of shared regions monitored by all location manager objects. (read-only)
            <br></br>Equivalent to the native <c>monitoredRegions</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You cannot add regions to this property directly. Instead, you must register regions by calling the <c>startMonitoringForRegion:</c> method. The regions in this property are shared by all instances of the <c>CLLocationManager</c> class in your application.</p>
                <p>The objects in this set may not necessarily be the same objects you specified at registration time. Only the region data itself is maintained by the system. Therefore, the only way to uniquely identify a registered region is using its <c>identifier</c> property.</p>
                <p>The location manager persists region data between launches of your application. If your application is terminated and then relaunched, the contents of this property are repopulated with region objects that contain the previously registered data. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.pausesLocationUpdatesAutomatically">
            <summary>
            A Boolean value indicating whether the location manager object may pause location updates.
            <br></br>Equivalent to the native <c>pausesLocationUpdatesAutomatically</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Allowing the location manager to pause updates can improve battery life on the target device without sacrificing location data. When this property is set to <c>true</c>, the location manager pauses updates (and powers down the appropriate hardware) at times when the location data is unlikely to change. For example, if the user stops for food while using a navigation app, the location manager might pause updates for a period of time. You can help the determination of when to pause location updates by assigning a value to the <c>activityType</c> property.</p>
                <p>The default value of this property is <c>true</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property activityType</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.purpose">
            <summary>
            An application-provided string that describes the reason for using location services. ( Deprecated in iOS 6.0. )
            <br></br>Equivalent to the native <c>purpose</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If this property is not <c>null</c> and the system needs to ask for the user’s consent to use location services, it displays the provided string. You can use this string to explain why your application is using location services.  </p>
                <p>You must set the value of this property prior to starting any location services. Because the string is ultimately displayed to the user, you should always load it from a localized strings file.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.2 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManager.rangedRegions">
            <summary>
            The set of regions currently being tracked using ranging. (read-only)
            <br></br>Equivalent to the native <c>rangedRegions</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The objects in the set are instances of the <c>CLBeaconRegion</c> class. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– startRangingBeaconsInRegion:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.AllowDeferredLocationUpdatesUntilTraveled(System.Double,System.Double)">
            <summary>
            Asks the location manager to defer the delivery of location updates until the specified criteria are met.
            <br></br>Equivalent to the native <c>allowDeferredLocationUpdatesUntilTraveled:timeout:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>distance</em>
                <p>The distance (in meters) from the current location that must be travelled before event delivery resumes. To specify an unlimited distance, pass the <c>CLLocationDistanceMax</c> constant. </p>
                <em>timeout</em>
                <p>The amount of time (in seconds) from the current time that must pass before event delivery resumes. To specify an unlimited amount of time, pass the <c>CLTimeIntervalMax</c> constant. </p>
                <b>Discussion</b>
                <p>Call this method in situations where you want location data with GPS accuracy but do not need to process that data right away. If your app is in the background and the system is able to optimize its power usage, the location manager tells the GPS hardware to store new locations internally until the specified distance or timeout conditions are met. When one or both criteria are met, the location manager ends deferred locations by calling the <c>locationManager:didFinishDeferredUpdatesWithError:</c> method of its delegate and delivers the cached locations to the  <c>locationManager:didUpdateLocations:</c> method. If your app is in the foreground, the location manager does not defer the deliver of events but does monitor for the specified criteria. If your app moves to the background before the criteria are met, the location manager may begin deferring the delivery of events.  </p>
                <p>
                    <strong>Important:</strong> Because deferred updates use the GPS to track location changes, the location manager allows deferred updates only when GPS hardware is available on the device and when the desired accuracy is set to <c>kCLLocationAccuracyBest</c> or <c>kCLLocationAccuracyBestForNavigation</c>. If the GPS hardware is not available, the location manager reports a <c>kCLErrorDeferredFailed</c> error. If the accuracy is not set to one of the supported values, the location manager reports a <c>kCLErrorDeferredAccuracyTooLow</c> error. </p>
                <p>In addition, the <c>distanceFilter</c> property of the location manager must be set to <c>kCLDistanceFilterNone</c>. If it is set to any other value, the location manager reports a <c>kCLErrorDeferredDistanceFiltered</c> error. </p>
                <p>
                </p>
                <p>Start the delivery of location updates before calling this method. The most common place to call this method is in your delegate’s <c>locationManager:didUpdateLocations:</c> method. After processing any new locations, call this method if you want to defer future updates until the distance or time criteria are met. If new events arrive and your app is in the background, the events are cached and their delivery is deferred appropriately.</p>
                <p>Your delegate’s <c>locationManager:didFinishDeferredUpdatesWithError:</c> method is called exactly once for each time you call this method. If you call this method twice in succession, the location manager cancels the previous deferral before starting the new one. Therefore, you should keep track of whether updates are currently deferred and avoid calling this method multiple times in succession. If you want to change the deferral criteria for any reason, and therefore call this method again, be prepared to receive a <c>kCLErrorDeferredCanceled</c> error in your delegate’s <c>locationManager:didFinishDeferredUpdatesWithError:</c> method.</p>
                <p>After calling this method, the location manager may deliver location updates even if the specified distance and timeout criteria are not met. For example, if the caches used to store deferred samples become full, the location manager may deliver the cached samples so it can collect new ones. The delivery of samples does not automatically end deferred mode for your app. The location manager resumes deferred mode when it is able to do so.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– disallowDeferredLocationUpdates</c>
                    </li>
                </ul>
            </remarks>
            <param name="distance">
            </param>
            <param name="timeout">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DisallowDeferredLocationUpdates">
            <summary>
            Cancels the deferral of location updates for this app.
            <br></br>Equivalent to the native <c>disallowDeferredLocationUpdates</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Call this method if you previously deferred location event delivery using the <c>allowDeferredLocationUpdatesUntilTraveled:timeout:</c> method and now want to resume the delivery of events at normal intervals. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– allowDeferredLocationUpdatesUntilTraveled:timeout:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.DismissHeadingCalibrationDisplay">
            <summary>
            Dismisses the heading calibration view from the screen immediately.
            <br></br>Equivalent to the native <c>dismissHeadingCalibrationDisplay</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Core Location uses the heading calibration alert to calibrate the available heading hardware as needed. The display of this view is automatic, assuming your delegate supports displaying the view at all. If the view is displayed, you can use this method to dismiss it after an appropriate amount of time to ensure that your application’s user interface is not unduly disrupted. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.RequestState(U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            Retrieves the state of a region asynchronously.
            <br></br>Equivalent to the native <c>requestStateForRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The region whose state you want to know. This object must be an instance of one of the standard region subclasses provided by Map Kit. You cannot use this method to determine the state of custom regions you define yourself. </p>
                <b>Discussion</b>
                <p>This method performs the request asynchronously and delivers the results to the location manager’s delegate. You must implement the <c>locationManager:didDetermineState:forRegion:</c> method in the delegate to receive the results. </p>
                <p>If the <em>region</em> parameter contains an unknown type of region object, this method does nothing. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StartMonitoring(U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            Starts monitoring the specified region.
            <br></br>Equivalent to the native <c>startMonitoringForRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The region object that defines the boundary to monitor. This parameter must not be <c>null</c>.</p>
                <b>Discussion</b>
                <p>You must call this method once for each region you want to monitor. If an existing region with the same identifier is already being monitored by the application, the old region is replaced by the new one. The regions you add using this method are shared by all location manager objects in your application and stored in the <c>monitoredRegions</c> property.</p>
                <p>Region events are delivered to the <c>locationManager:didEnterRegion:</c> and <c>locationManager:didExitRegion:</c> methods of your delegate. If there is an error, the location manager calls the <c>locationManager:monitoringDidFailForRegion:withError:</c> method of your delegate instead.</p>
                <p>An app can register up to 20 regions at a time. In order to report region changes in a timely manner, the region monitoring service requires network connectivity.</p>
                <p>In iOS 6, regions with a radius between 1 and 400 meters work better on iPhone 4S or later devices. (In iOS 5, regions with a radius between 1 and 150 meters work better on iPhone 4S and later devices.) On these devices, an app can expect to receive the appropriate region entered or region exited notification within 3 to 5 minutes on average, if not sooner.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– stopMonitoringForRegion:</c>
                    </li>
                </ul>
            </remarks>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StartMonitoring(U3DXT.iOS.Native.CoreLocation.CLRegion,System.Double)">
            <summary>
            Starts monitoring the specified region for boundary crossings. ( Deprecated in iOS 6.0.  Use <c>startMonitoringForRegion:</c> instead.)
            <br></br>Equivalent to the native <c>startMonitoringForRegion:desiredAccuracy:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The region object that defines the boundary to monitor. This parameter must not be <c>null</c>.</p>
                <em>accuracy</em>
                <p>The distance past the border (measured in meters) at which to generate notifications. You can use this value to prevent the delivery of multiple notifications when the user is close to the border’s edge. </p>
                <b>Discussion</b>
                <p>You must call this method separately for each region you want to monitor. If an existing region with the same identifier is already being monitored by the application, the old region is replaced by the new one. The regions you add using this method are shared by all location manager objects in your application and stored in the <c>monitoredRegions</c> property.</p>
                <p>If you begin monitoring a region and your application is subsequently terminated, the system automatically relaunches it into the background if the region boundary is crossed. In such a case, the options dictionary passed to the <c>application:didFinishLaunchingWithOptions:</c> method of your application delegate contains the key <c>UIApplicationLaunchOptionsLocationKey</c> to indicate that your application was launched because of a location-related event. In addition, creating a new location manager and assigning a delegate results in the delivery of the corresponding region messages. The newly created location manager’s <c>location</c> property also contains the current location even if location services are not enabled.</p>
                <p>Region events are delivered to the <c>locationManager:didEnterRegion:</c> and <c>locationManager:didExitRegion:</c> methods of your delegate. If there is an error, the location manager calls the <c>locationManager:monitoringDidFailForRegion:withError:</c> method of your delegate instead.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
            </remarks>
            <param name="region">
            </param>
            <param name="accuracy">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StartMonitoringSignificantLocationChanges">
            <summary>
            Starts the generation of updates based on significant location changes.
            <br></br>Equivalent to the native <c>startMonitoringSignificantLocationChanges</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This method initiates the delivery of location events asynchronously, returning shortly after you call it. Location events are delivered to your delegate’s <c>locationManager:didUpdateLocations:</c> method. The first event to be delivered is usually the most recently cached location event (if any) but may be a newer event in some circumstances. Obtaining a current location fix may take several additional seconds, so be sure to check the timestamps on the location events in your delegate method. </p>
                <p>After returning a current location fix, the receiver generates update events only when a significant change in the user’s location is detected. For example, it might generate a new event when the device becomes associated with a different cell tower. It does not rely on the value in the <c>distanceFilter</c> property to generate events. Calling this method several times in succession does not automatically result in new events being generated. Calling <c>stopMonitoringSignificantLocationChanges</c> in between, however, does cause a new initial event to be sent the next time you call this method. </p>
                <p>If you start this service and your application is subsequently terminated, the system automatically relaunches the application into the background if a new event arrives. In such a case, the options dictionary passed to the <c>locationManager:didUpdateLocations:</c> method of your application delegate contains the key <c>UIApplicationLaunchOptionsLocationKey</c> to indicate that your application was launched because of a location event. Upon relaunch, you must still configure a location manager object and call this method to continue receiving location events. When you restart location services, the current event is delivered to your delegate immediately. In addition, the <c>location</c> property of your location manager object is populated with the most recent location object even before you start location services. </p>
                <p>In addition to your delegate object implementing the <c>locationManager:didUpdateLocations:</c> method, it should also implement the <c>locationManager:didFailWithError:</c> method to respond to potential errors.</p>
                <p>
                    <strong>Note:</strong> Apps can expect a notification as soon as the device moves 500 meters or more from its previous notification. It should not expect notifications more frequently than once every five minutes. If the device is able to retrieve data from the network, the location manager is much more likely to deliver notifications in a timely manner.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– stopMonitoringSignificantLocationChanges</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StartRangingBeaconsInRegion(U3DXT.iOS.Native.CoreLocation.CLBeaconRegion)">
            <summary>
            Starts the delivery of notifications for beacons in the specified region.
            <br></br>Equivalent to the native <c>startRangingBeaconsInRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The region object that defines the identifying information for the targeted beacons. The number of beacons represented by this region object depends on which identifier values you use to initialize it. Beacons must match all of the identifiers you specify. This method copies the region information it needs from the object you provide.  </p>
                <b>Discussion</b>
                <p>Once registered, the location manager reports any encountered beacons to its delegate by calling the <c>locationManager:didRangeBeacons:inRegion:</c> method. If there is an error registering the specified beacon region, the location manager calls its delegate’s <c>locationManager:rangingBeaconsDidFailForRegion:withError:</c> method and provides the appropriate error information. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StartUpdatingHeading">
            <summary>
            Starts the generation of updates that report the user’s current heading.
            <br></br>Equivalent to the native <c>startUpdatingHeading</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This method returns immediately. Calling this method when the receiver is stopped causes it to obtain an initial heading and notify your delegate. After that, the receiver generates update events when the value in the <c>headingFilter</c> property is exceeded.</p>
                <p>Before calling this method, you should always check the <c>headingAvailable</c> property to see whether heading information is supported on the current device. If heading information is not supported, calling this method has no effect and does not result in the delivery of events to your delegate.</p>
                <p>Calling this method several times in succession does not automatically result in new events being generated. Calling <c>stopUpdatingHeading</c> in between, however, does cause a new initial event to be sent the next time you call this method. </p>
                <p>If you start this service and your application is suspended, the system stops the delivery of events until your application starts running again (either in the foreground or background). If your application is terminated, the delivery of new heading events stops altogether and must be restarted by your code when the application is relaunched.</p>
                <p>Heading events are delivered to the <c>locationManager:didUpdateHeading:</c> method of your delegate. If there is an error, the location manager calls the <c>locationManager:didFailWithError:</c> method of your delegate instead.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– stopUpdatingHeading</c>
                    </li>
                    <li>    <c>@property headingAvailable</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StartUpdatingLocation">
            <summary>
            Starts the generation of updates that report the user’s current location.
            <br></br>Equivalent to the native <c>startUpdatingLocation</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This method returns immediately. Calling this method causes the location manager to obtain an initial location fix (which may take several seconds) and notify your delegate by calling its  <c>locationManager:didUpdateLocations:</c> method. (In iOS 5 and earlier, the location manager calls the <c>locationManager:didUpdateToLocation:fromLocation:</c> method instead.) After that, the receiver generates update events primarily when the value in the <c>distanceFilter</c> property is exceeded. Updates may be delivered in other situations though. For example, the receiver may send another notification if the hardware gathers a more accurate location reading.</p>
                <p>Calling this method several times in succession does not automatically result in new events being generated. Calling <c>stopUpdatingLocation</c> in between, however, does cause a new initial event to be sent the next time you call this method. </p>
                <p>If you start this service and your application is suspended, the system stops the delivery of events until your application starts running again (either in the foreground or background). If your application is terminated, the delivery of new location events stops altogether. Therefore, if your application needs to receive location events while in the background, it must include the <c>UIBackgroundModes</c> key (with the <c>location</c> value) in its <c>Info.plist</c> file.</p>
                <p>In addition to your delegate object implementing the <c>locationManager:didUpdateLocations:</c> method, it should also implement the <c>locationManager:didFailWithError:</c> method to respond to potential errors.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– stopUpdatingLocation</c>
                    </li>
                    <li>    <c>@property locationServicesEnabled</c></li>
                    <li>    <c>@property distanceFilter</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StopMonitoring(U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            Stops monitoring the specified region.
            <br></br>Equivalent to the native <c>stopMonitoringForRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The region object currently being monitored. This parameter must not be <c>null</c>.</p>
                <b>Discussion</b>
                <p>If the specified region object is not currently being monitored, this method has no effect.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– startMonitoringForRegion:</c>
                    </li>
                </ul>
            </remarks>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StopMonitoringSignificantLocationChanges">
            <summary>
            Stops the delivery of location events based on significant location changes.
            <br></br>Equivalent to the native <c>stopMonitoringSignificantLocationChanges</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Use this method to stop the delivery of location events that was started using the <c>startMonitoringSignificantLocationChanges</c> method. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– startMonitoringSignificantLocationChanges</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StopRangingBeaconsInRegion(U3DXT.iOS.Native.CoreLocation.CLBeaconRegion)">
            <summary>
            Stops the delivery of notifications for the specified beacon region.
            <br></br>Equivalent to the native <c>stopRangingBeaconsInRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>region</em>
                <p>The region that identifies the beacons. The object you specify need not be the exact same object that you registered but the beacon attributes should be the same. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StopUpdatingHeading">
            <summary>
            Stops the generation of heading updates.
            <br></br>Equivalent to the native <c>stopUpdatingHeading</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Call this method whenever your code no longer needs to receive heading-related events. Disabling event delivery gives the receiver the option of disabling the appropriate hardware (and thereby saving power) when no clients need location data. You can always restart the generation of heading updates by calling the <c>startUpdatingHeading</c> method again.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– startUpdatingHeading</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManager.StopUpdatingLocation">
            <summary>
            Stops the generation of location updates.
            <br></br>Equivalent to the native <c>stopUpdatingLocation</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Call this method whenever your code no longer needs to receive location-related events. Disabling event delivery gives the receiver the option of disabling the appropriate hardware (and thereby saving power) when no clients need location data. You can always restart the generation of location updates by calling the <c>startUpdatingLocation</c> method again.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– startUpdatingLocation</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate">
            <summary>
            The <c>CLLocationManagerDelegate</c> protocol defines the methods used to receive location and heading updates from a <c>CLLocationManager</c> object.
            </summary>
            <remarks>
                <p>Upon receiving a successful location or heading update, you can use the result to update your user interface or perform other actions. If the location or heading could not be determined, you might want to stop updates for a short period of time and try again later. You can use the <c>stopUpdatingLocation</c>, <c>stopMonitoringSignificantLocationChanges</c>,  <c>stopUpdatingHeading</c>, or <c>stopMonitoringForRegion:</c> methods of <c>CLLocationManager</c> to stop location, heading, and region updates.</p>
                <p>The methods of your delegate object are called from the thread in which you started the corresponding location services. That thread must itself have an active run loop, like the one found in your application’s main thread. </p>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didChangeAuthorizationStatus__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didDetermineState_forRegion__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didEnterRegion__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didExitRegion__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didFailWithError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didFinishDeferredUpdatesWithError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didRangeBeacons_inRegion__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didStartMonitoringForRegion__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didUpdateHeading__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_didUpdateLocations__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_monitoringDidFailForRegion_withError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManager_rangingBeaconsDidFailForRegion_withError__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManagerDidPauseLocationUpdates__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManagerDidResumeLocationUpdates__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.UP_CLLocationManagerDelegate_set__locationManagerShouldDisplayHeadingCalibration__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidChange(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.CoreLocation.CLAuthorizationStatus)">
            <summary>
            (optional) Tells the delegate that the authorization status for the application changed.
            <br></br>Equivalent to the native <c>locationManager:didChangeAuthorizationStatus:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object reporting the event.</p>
                <em>status</em>
                <p>The new authorization status for the application.</p>
                <b>Discussion</b>
                <p>This method is called whenever the application’s ability to use location services changes. Changes can occur because the user allowed or denied the use of location services for your application or for the system as a whole.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="status">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidDetermine(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.CoreLocation.CLRegionState,U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            (optional) Tells the delegate about the state of the specified region. (required)
            <br></br>Equivalent to the native <c>locationManager:didDetermineState:forRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object reporting the event.</p>
                <em>state</em>
                <p>The state of the specified region. For a list of possible values, see the <c>CLRegionState</c> type. </p>
                <em>region</em>
                <p>The region whose state was determined.</p>
                <b>Discussion</b>
                <p>The location manager calls this method whenever there is a boundary transition for a region. It calls this method in addition to calling the  <c>locationManager:didEnterRegion:</c> and <c>locationManager:didExitRegion:</c> methods. The location manager also calls this method in response to a call to its <c>requestStateForRegion:</c> method, which runs asynchronously. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– locationManager:didEnterRegion:</c>
                    </li>
                    <li>
                        <c>– locationManager:didExitRegion:</c>
                    </li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="state">
            </param>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidEnter(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            (optional) Tells the delegate that the user entered the specified region.
            <br></br>Equivalent to the native <c>locationManager:didEnterRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object reporting the event.</p>
                <em>region</em>
                <p>An object containing information about the region that was entered.</p>
                <b>Discussion</b>
                <p>Because regions are a shared application resource, every active location manager object delivers this message to its associated delegate. It does not matter which location manager actually registered the specified region. And if multiple location managers share a delegate object, that delegate receives the message multiple times.</p>
                <p>The region object provided may not be the same one that was registered. As a result, you should never perform pointer-level comparisons to determine equality. Instead, use the region’s identifier string to determine if your delegate should respond.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidExit(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            (optional) Tells the delegate that the user left the specified region.
            <br></br>Equivalent to the native <c>locationManager:didExitRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object reporting the event.</p>
                <em>region</em>
                <p>An object containing information about the region that was exited.</p>
                <b>Discussion</b>
                <p>Because regions are a shared application resource, every active location manager object delivers this message to its associated delegate. It does not matter which location manager actually registered the specified region. And if multiple location managers share a delegate object, that delegate receives the message multiple times.</p>
                <p>The region object provided may not be the same one that was registered. As a result, you should never perform pointer-level comparisons to determine equality. Instead, use the region’s identifier string to determine if your delegate should respond.  </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidFail(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Tells the delegate that the location manager was unable to retrieve a location value.
            <br></br>Equivalent to the native <c>locationManager:didFailWithError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object that was unable to retrieve the location.</p>
                <em>error</em>
                <p>The error object containing the reason the location or heading could not be retrieved. </p>
                <b>Discussion</b>
                <p>Implementation of this method is optional but recommended.</p>
                <p>The location manager calls this method when it encounters an error trying to get the location or heading data. If the location service is unable to retrieve a location right away, it reports a <c>kCLErrorLocationUnknown</c> error and keeps trying. In such a situation, you can simply ignore the error and wait for a new event. If a heading could not be determined because of strong interference from nearby magnetic fields, this method returns <c>kCLErrorHeadingFailure</c>. </p>
                <p>If the user denies your application’s use of the location service, this method reports a <c>kCLErrorDenied</c> error. Upon receiving such an error, you should stop the location service.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 2.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidFinishDeferredUpdates(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Tells the delegate that updates will no longer be deferred.
            <br></br>Equivalent to the native <c>locationManager:didFinishDeferredUpdatesWithError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object that generated the update event.</p>
                <em>error</em>
                <p>The error object containing the reason deferred location updates could not be delivered. </p>
                <b>Discussion</b>
                <p>The location manager object calls this method to let you know that it has stopped deferring the delivery of location events. The manager may call this method for any number of reasons. For example, it calls it when you stop location updates altogether, when you ask the location manager to disallow deferred updates, or when a condition for deferring updates (such as exceeding a timeout or distance parameter) is met.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>disallowDeferredLocationUpdates</c>
                    </li>
                    <li>
                        <c>allowDeferredLocationUpdatesUntilTraveled:timeout:</c>
                    </li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidRangeBeacons(U3DXT.iOS.Native.CoreLocation.CLLocationManager,System.Object[],U3DXT.iOS.Native.CoreLocation.CLBeaconRegion)">
            <summary>
            (optional) Tells the delegate that one or more beacons are in range. (required)
            <br></br>Equivalent to the native <c>locationManager:didRangeBeacons:inRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object reporting the event.</p>
                <em>beacons</em>
                <p>An array of <c>CLBeacon</c> objects representing the beacons currently in range. You can use the information in these objects to determine the range of each beacon and its identifying information.</p>
                <em>region</em>
                <p>The region object containing the parameters that were used to locate the beacons. </p>
                <b>Discussion</b>
                <p>The location manager calls this method whenever a beacon comes within range or goes out of range. The location manager also calls this method when the range of the beacon changes; for example, when the beacon gets closer. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="beacons">
            </param>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidStartMonitoring(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.CoreLocation.CLRegion)">
            <summary>
            (optional) Tells the delegate that a new region is being monitored.
            <br></br>Equivalent to the native <c>locationManager:didStartMonitoringForRegion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object reporting the event.</p>
                <em>region</em>
                <p>The region that is being monitored.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="region">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidUpdate(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.CoreLocation.CLHeading)">
            <summary>
            (optional) Tells the delegate that the location manager received updated heading information.
            <br></br>Equivalent to the native <c>locationManager:didUpdateHeading:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object that generated the update event.</p>
                <em>newHeading</em>
                <p>The new heading data.</p>
                <b>Discussion</b>
                <p>Implementation of this method is optional but expected if you start heading updates using the <c>startUpdatingHeading</c> method. </p>
                <p>The location manager object calls this method after you initially start the heading service. Subsequent events are delivered when the previously reported value changes by more than the value specified in the <c>headingFilter</c> property of the location manager object. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="newHeading">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidUpdateLocations(U3DXT.iOS.Native.CoreLocation.CLLocationManager,System.Object[])">
            <summary>
            (optional) Tells the delegate that new location data is available.
            <br></br>Equivalent to the native <c>locationManager:didUpdateLocations:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object that generated the update event.</p>
                <em>locations</em>
                <p>An array of <c>CLLocation</c> objects containing the location data. This array always contains at least one object representing the current location. If updates were deferred or if multiple locations arrived before they could be delivered, the array may contain additional entries. The objects in the array are organized in the order in which they occurred. Therefore, the most recent location update is at the end of the array. </p>
                <b>Discussion</b>
                <p>Implementation of this method is optional but recommended.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="locations">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.MonitoringDidFail(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.CoreLocation.CLRegion,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Tells the delegate that a region monitoring error occurred.
            <br></br>Equivalent to the native <c>locationManager:monitoringDidFailForRegion:withError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object reporting the event.</p>
                <em>region</em>
                <p>The region for which the error occurred.</p>
                <em>error</em>
                <p>An error object containing the error code that indicates why region monitoring failed.</p>
                <b>Discussion</b>
                <p>If an error occurs while trying to monitor a given region, the location manager sends this message to its delegate. Region monitoring might fail because the region itself cannot be monitored or because there was a more general failure in configuring the region monitoring service.</p>
                <p>Although implementation of this method is optional, it is recommended that you implement it if you use region monitoring in your application.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="region">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.RangingBeaconsDidFail(U3DXT.iOS.Native.CoreLocation.CLLocationManager,U3DXT.iOS.Native.CoreLocation.CLBeaconRegion,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            (optional) Tells the delegate that an error occurred while gathering ranging information for a set of beacons. (required)
            <br></br>Equivalent to the native <c>locationManager:rangingBeaconsDidFailForRegion:withError:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object reporting the event.</p>
                <em>region</em>
                <p>The region object that encountered the error.</p>
                <em>error</em>
                <p>An error object containing the error code that indicates why ranging failed.</p>
                <b>Discussion</b>
                <p>Errors occur most often when registering a beacon region failed. If the region object itself is invalid or if it contains invalid data, the location manager calls this method to report the problem. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
            <param name="region">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidPauseLocationUpdates(U3DXT.iOS.Native.CoreLocation.CLLocationManager)">
            <summary>
            (optional) Tells the delegate that location updates were paused. (required)
            <br></br>Equivalent to the native <c>locationManagerDidPauseLocationUpdates:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object that paused the delivery of events.</p>
                <b>Discussion</b>
                <p>When the location manager detects that the device’s location is not changing, it can pause the delivery of updates in order to shut down the appropriate hardware and save power. When it does this, it calls this method to let your app know that this has happened.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– locationManagerDidResumeLocationUpdates:</c>
                    </li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.DidResumeLocationUpdates(U3DXT.iOS.Native.CoreLocation.CLLocationManager)">
            <summary>
            (optional) Tells the delegate that the delivery of location updates has resumed. (required)
            <br></br>Equivalent to the native <c>locationManagerDidResumeLocationUpdates:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager that resumed the delivery of events.</p>
                <b>Discussion</b>
                <p>When location updates are paused and need to be resumed (perhaps because the user is moving again), the location manager calls this method to let your app know that it is about to begin the delivery of those updates again. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– locationManagerDidPauseLocationUpdates:</c>
                    </li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate.ShouldDisplayHeadingCalibration(U3DXT.iOS.Native.CoreLocation.CLLocationManager)">
            <summary>
            (optional) Asks the delegate whether the heading calibration alert should be displayed.
            <br></br>Equivalent to the native <c>locationManagerShouldDisplayHeadingCalibration:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>manager</em>
                <p>The location manager object coordinating the display of the heading calibration alert.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if you want to allow the heading calibration alert to be displayed; <c>false</c> if you do not.</p>
                <b>Discussion</b>
                <p>Core Location may call this method in an effort to calibrate the onboard hardware used to determine heading values. Typically, Core Location calls this method at the following times:</p>
                <ul class="ul">
                    <li class="li">
                        <p>The first time heading updates are ever requested</p>
                    </li>
                    <li class="li">
                        <p>When Core Location observes a significant change in magnitude or inclination of the observed magnetic field</p>
                    </li>
                </ul>
                <p>If you return <c>true</c> from this method, Core Location displays the heading calibration alert on top of the current window immediately. The calibration alert prompts the user to move the device in a particular pattern so that Core Location can distinguish between the Earth’s magnetic field and any local magnetic fields. The alert remains visible until calibration is complete or until you explicitly dismiss it by calling the <c>dismissHeadingCalibrationDisplay</c> method. In the latter case, you can use this method to set up a timer and dismiss the interface after a specified amount of time has elapsed.</p>
                <p>
                    <strong>Note:</strong> The calibration process is able to filter out only those magnetic fields that move with the device. To calibrate a device that is near other sources of magnetic interference, the user must either move the device away from the source or move the source in conjunction with the device during the calibration process.</p>
                <p>
                </p>
                <p>If you return <c>false</c> from this method or do not provide an implementation for it in your delegate, Core Location does not display the heading calibration alert. Even if the alert is not displayed, calibration can still occur naturally when any interfering magnetic fields move away from the device. However, if the device is unable to calibrate itself for any reason, the value in the <c>headingAccuracy</c> property of any subsequent events will reflect the uncalibrated readings.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 3.0 and later.</li>
                </ul>
            </remarks>
            <param name="manager">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didChangeAuthorizationStatus__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didChangeAuthorizationStatus__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didDetermineState_forRegion__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didDetermineState_forRegion__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didEnterRegion__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didEnterRegion__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didExitRegion__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didExitRegion__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didFailWithError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didFailWithError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didFinishDeferredUpdatesWithError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didFinishDeferredUpdatesWithError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didRangeBeacons_inRegion__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didRangeBeacons_inRegion__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didStartMonitoringForRegion__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didStartMonitoringForRegion__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didUpdateHeading__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didUpdateHeading__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_didUpdateLocations__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_didUpdateLocations__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_monitoringDidFailForRegion_withError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_monitoringDidFailForRegion_withError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManager_rangingBeaconsDidFailForRegion_withError__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManager_rangingBeaconsDidFailForRegion_withError__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManagerDidPauseLocationUpdates__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManagerDidPauseLocationUpdates__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManagerDidResumeLocationUpdates__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManagerDidResumeLocationUpdates__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLLocationManagerDelegate._locationManagerShouldDisplayHeadingCalibration__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_locationManagerShouldDisplayHeadingCalibration__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLPlacemark">
            <summary>
            A <c>CLPlacemark</c> object stores placemark data for a given latitude and longitude. Placemark data includes information such as the country, state, city, and street address associated with the specified coordinate. It can also include points of interest and geographically related data. Placemark objects are typically generated by a <c>CLGeocoder</c> object, although you can also create them explicitly yourself.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_addressDictionary(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_administrativeArea(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_areasOfInterest(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_country(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_inlandWater(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_ISOcountryCode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_locality(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_location(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_name(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_ocean(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_postalCode(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_region(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_subAdministrativeArea(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_subLocality(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_subThoroughfare(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_get_thoroughfare(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.UP_CLPlacemark_alloc_initWithPlacemark_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLPlacemark" /> class.
            <br></br>Equivalent to the native <c>[[CLPlacemark alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.ClassExists">
            <summary>
            Returns whether the native CLPlacemark class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.addressDictionary">
            <summary>
            A dictionary containing the Address Book keys and values for the placemark. (read-only)
            <br></br>Equivalent to the native <c>addressDictionary</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The keys in this dictionary are those defined by the Address Book framework and used to access address information for a person. For a list of the strings that can be in this dictionary, see the “Address Property” constants in <em>ABPerson Reference</em>.</p>
                <p>You can format the contents of this dictionary to get a full address string as opposed to building the address yourself. To format the dictionary, use the <c>ABCreateStringWithAddressDictionary</c> function as described in <em>Address Book UI Functions Reference</em>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.administrativeArea">
            <summary>
            The state or province associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>administrativeArea</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The string in this property can be either the spelled out name of the administrative area or its designated abbreviation, if one exists. If the placemark location is Apple’s headquarters, for example, the value for this property would be the string “CA” or “California”.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.areasOfInterest">
            <summary>
            The relevant areas of interest associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>areasOfInterest</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Examples of an area of interest are the name of a military base or large national park or an attraction such as Eiffel Tower, Disneyland, or Golden Gate Park.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.country">
            <summary>
            The name of the country associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>country</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the placemark location is Apple’s headquarters, for example, the value for this property would be the string “United States”.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.inlandWater">
            <summary>
            The name of the inland water body associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>inlandWater</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>For coordinates that lie over an inland body of water, this property contains the name of that water body—the name of a lake, stream, river, or other waterway.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.ISOcountryCode">
            <summary>
            The abbreviated country name. (read-only)
            <br></br>Equivalent to the native <c>ISOcountryCode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This string is the standard abbreviation used to refer to the country. For example, if the placemark location is Apple’s headquarters, the value for this property would be the string “US”.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.locality">
            <summary>
            The city associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>locality</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the placemark location is Apple’s headquarters, for example, the value for this property would be the string “Cupertino”.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.location">
            <summary>
            The location object containing latitude and longitude information. (read-only)
            <br></br>Equivalent to the native <c>location</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This object is used to initialize the placemark object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.name">
            <summary>
            The name of the placemark. (read-only)
            <br></br>Equivalent to the native <c>name</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.ocean">
            <summary>
            The name of the ocean associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>ocean</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>For coordinates that lie over an ocean, this property contains the name of the ocean.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.postalCode">
            <summary>
            The postal code associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>postalCode</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the placemark location is Apple’s headquarters, for example, the value for this property would be the string “95014”. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.region">
            <summary>
            The geographic region associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>region</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.subAdministrativeArea">
            <summary>
            Additional administrative area information for the placemark. (read-only)
            <br></br>Equivalent to the native <c>subAdministrativeArea</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Subadministrative areas typically correspond to counties or other regions that are then organized into a larger administrative area or state. For example, if the placemark location is Apple’s headquarters, the value for this property would be the string “Santa Clara”, which is the county in California that contains the city of Cupertino.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.subLocality">
            <summary>
            Additional city-level information for the placemark. (read-only)
            <br></br>Equivalent to the native <c>subLocality</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property contains additional information, such as the name of the neighborhood or landmark associated with the placemark. It might also refer to a common name that is associated with the location.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.subThoroughfare">
            <summary>
            Additional street-level information for the placemark. (read-only)
            <br></br>Equivalent to the native <c>subThoroughfare</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Subthroughfares provide information such as the street number for the location. For example, if the placemark location is Apple’s headquarters (1 Infinite Loop), the value for this property would be the string “1”.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLPlacemark.thoroughfare">
            <summary>
            The street address associated with the placemark. (read-only)
            <br></br>Equivalent to the native <c>thoroughfare</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The street address contains the street name. For example, if the placemark location is Apple’s headquarters, the value for this property would be the string “Infinite Loop”.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLPlacemark.#ctor(U3DXT.iOS.Native.CoreLocation.CLPlacemark)">
            <summary>
            Creates an instance of the native CLPlacemark and initializes the object. Initializes and returns a placemark object from another placemark object.
            <br></br>Equivalent to the native <c>[[CLPlacemark alloc] initWithPlacemark:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>placemark</em>
                <p>The placemark object to use as the source of the data for the new object.</p>
                <b>Return Value</b>
                <p>A new placemark object.</p>
                <b>Discussion</b>
                <p>You can use this method to transfer information from one placemark object to another placemark object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="placemark">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLProximity">
            <summary>
            Constants that reflect the relative distance to a beacon.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLProximity.Unknown">
            <summary>
                <p>The proximity of the beacon could not be determined.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLProximityUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLProximity.Immediate">
            <summary>
                <p>The beacon is in the user’s immediate vicinity.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLProximityImmediate</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLProximity.Near">
            <summary>
                <p>The beacon is relatively close to the user.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLProximityNear</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLProximity.Far">
            <summary>
                <p>The beacon is far away.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLProximityFar</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLRegion">
            <summary>
            The <c>CLRegion</c> class defines an abstract area that can be tracked. In iOS, you do not create instances of this class directly; instead, you instantiate subclasses that define specific types of regions. In OS X, you create instances of this class and use them to store the region information. After you create a region, you must register it with a <c>CLLocationManager</c> object. The location manager generates appropriate events whenever the user crosses the boundaries of the region.
            </summary>
            <remarks>
                <p>To use this class, create an instance of it and use the <c>startMonitoringForRegion:</c> method of a <c>CLLocationManager</c> object to begin monitoring it. </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.UP_CLRegion_get_center(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.UP_CLRegion_get_identifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.UP_CLRegion_get_notifyOnEntry(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.UP_CLRegion_set_notifyOnEntry(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.UP_CLRegion_get_notifyOnExit(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.UP_CLRegion_set_notifyOnExit(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.UP_CLRegion_get_radius(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.UP_CLRegion_containsCoordinate_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.CoreLocation.CLRegion" /> class.
            <br></br>Equivalent to the native <c>[[CLRegion alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLRegion.ClassExists">
            <summary>
            Returns whether the native CLRegion class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLRegion.center">
            <summary>
            The center point of the region. (read-only) ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>center</c> property.
            </summary>
            <remarks>
                <b>Special Considerations</b>
                <p>In iOS, use a <c>CLCircularRegion</c> object to manage geographic regions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLRegion.identifier">
            <summary>
            The identifier for the region object. (read-only)
            <br></br>Equivalent to the native <c>identifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This is a value that you specify and can use to identify this region inside your application.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLRegion.notifyOnEntry">
            <summary>
            A Boolean indicating that notifications are generated upon entry into the region.
            <br></br>Equivalent to the native <c>notifyOnEntry</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is <c>true</c>, a device crossing from outside the region to inside the region triggers the delivery of a notification. If the property is <c>false</c>, a notification is not generated. The default value of this property is <c>true</c>.</p>
                <p>If the app is not running when a boundary crossing occurs, the system launches the app into the background to handle it. Upon launch, your app must configure new location manager and delegate objects to receive the notification. The notification is sent to your delegate’s <c>locationManager:didEnterRegion:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLRegion.notifyOnExit">
            <summary>
            A Boolean indicating that notifications are generated upon exit from the region.
            <br></br>Equivalent to the native <c>notifyOnExit</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>When this property is <c>true</c>, a device crossing from inside the region to outside the region triggers the delivery of a notification. If the property is <c>false</c>, a notification is not generated. The default value of this property is <c>true</c>. </p>
                <p>If the app is not running when a boundary crossing occurs, the system launches the app into the background to handle it. Upon launch, your app must configure new location manager and delegate objects to receive the notification. The notification is sent to your delegate’s <c>locationManager:didExitRegion:</c> method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 7.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.CoreLocation.CLRegion.radius">
            <summary>
            The radius (measured in meters) that defines the region’s outer boundary. (read-only) ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>radius</c> property.
            </summary>
            <remarks>
                <b>Special Considerations</b>
                <p>In iOS, use a <c>CLCircularRegion</c> object to manage geographic regions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.CoreLocation.CLRegion.ContainsCoordinate(U3DXT.iOS.Native.CoreLocation.CLLocationCoordinate2D)">
            <summary>
            Returns a Boolean value indicating whether the region contains the specified coordinate. ( Deprecated in iOS 7.0. )
            <br></br>Equivalent to the native <c>containsCoordinate:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>coordinate</em>
                <p>The coordinate to test against the region. </p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if the coordinate lies within the region’s boundaries or <c>false</c> if it does not.</p>
                <b>Special Considerations</b>
                <p>In iOS, use a <c>CLCircularRegion</c> object to manage geographic regions.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 7.0.</li>
                </ul>
            </remarks>
            <param name="coordinate">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CLRegionState">
            <summary>
            Constants that reflect the relationship of the current location to the region boundaries.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLRegionState.Unknown">
            <summary>
                <p>It is unknown whether the location is inside or outside of the region.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLRegionStateUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLRegionState.Inside">
            <summary>
                <p>The location is inside the given region.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLRegionStateInside</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CLRegionState.Outside">
            <summary>
                <p>The location is outside of the given region.</p>
                <p>Available in iOS 7.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>CLRegionStateOutside</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.CoreLocation.CoreLocationConstants">
            <summary>
            Constants belonging to CoreLocationConstants.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.CoreLocation.CoreLocationConstants.kCLErrorUserInfoAlternateRegionKey">
            <summary>
                <p>A key in the user information dictionary of an <c>kCLErrorRegionMonitoringResponseDelayed</c> error whose value is a <c>CLRegion</c> object that the location services can more effectively monitor.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>kCLErrorUserInfoAlternateRegionKey</c> constant.
            </summary>
            <remarks>
            Keys used in error user information dictionaries.
            <p></p><p></p>This is a constant for "Error User Info Keys".
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKAlarm">
            <summary>
            An <c>EKAlarm</c> object represents an alarm in Event Kit. Use the <c>alarmWithAbsoluteDate:</c> and <c>alarmWithRelativeOffset:</c> class methods to create an alarm and use the properties to set information about an alarm. In OS X Mountain Lion, you can specify an action to trigger when the alarm fires via the <c>emailAddress</c>, <c>soundName</c>, or <c>url</c> property.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_alarmWithAbsoluteDate_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_alarmWithRelativeOffset_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_get_absoluteDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_set_absoluteDate(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_get_proximity(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_set_proximity(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_get_relativeOffset(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_set_relativeOffset(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_get_structuredLocation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.UP_EKAlarm_set_structuredLocation(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKAlarm" /> class.
            <br></br>Equivalent to the native <c>[[EKAlarm alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKAlarm.ClassExists">
            <summary>
            Returns whether the native EKAlarm class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.Alarm(System.DateTime)">
            <summary>
            Creates and returns an alarm with an absolute date.
            <br></br>Equivalent to the native <c>alarmWithAbsoluteDate:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>date</em>
                <p>The date for the alarm.</p>
                <b>Return Value</b>
                <p>The created alarm.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="date">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKAlarm.Alarm(System.Double)">
            <summary>
            Creates and returns an alarm with a relative offset.
            <br></br>Equivalent to the native <c>alarmWithRelativeOffset:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>offset</em>
                <p>The offset from the start of an event, at which the alarm fires.</p>
                <b>Return Value</b>
                <p>The created alarm.</p>
                <b>Discussion</b>
                <p>Negative offset values fire before the start of the event, while positive values fire after the start.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="offset">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKAlarm.absoluteDate">
            <summary>
            The absolute date for the alarm.
            <br></br>Equivalent to the native <c>absoluteDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you set this property for a relative offset alarm, it loses the relative offset and becomes an absolute alarm.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKAlarm.proximity">
            <summary>
            A value indicating how a location-based alarm is triggered.
            <br></br>Equivalent to the native <c>proximity</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Alarms can be set to trigger when entering or exiting a location specified by <c>structuredLocation</c>. By default, alarms are not affected by location.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>EKAlarmProximity</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKAlarm.relativeOffset">
            <summary>
            The offset from the start of an event, at which the alarm fires.
            <br></br>Equivalent to the native <c>relativeOffset</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If you set this value for an absolute alarm, it loses its absolute date and becomes a relative offset alarm.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKAlarm.structuredLocation">
            <summary>
            The location to trigger an alarm.
            <br></br>Equivalent to the native <c>structuredLocation</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is used in conjunction with <c>proximity</c> to perform geofence-based triggering of reminders.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKAlarmProximity">
            <summary>
            A value indicating whether an alarm is triggered by entering or exiting a region.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKAlarmProximity.Leave">
            <summary>
                <p>The alarm is set to fire when leaving a region.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKAlarmProximityLeave</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKAlarmProximity.Enter">
            <summary>
                <p>The alarm is set to fire when entering a region.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKAlarmProximityEnter</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKAlarmProximity.None">
            <summary>
                <p>The alarm has no proximity trigger.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKAlarmProximityNone</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKAuthorizationStatus">
            <summary>
            Indicates the current authorization status for a specific entity type.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKAuthorizationStatus.Authorized">
            <summary>
                <p>The app is authorized to access the service.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKAuthorizationStatusAuthorized</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKAuthorizationStatus.Restricted">
            <summary>
                <p>The app is not authorized to access the service. The user cannot change this app’s authorization status, possibly due to active restrictions such as parental controls being in place.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKAuthorizationStatusRestricted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKAuthorizationStatus.NotDetermined">
            <summary>
                <p>The user has not yet made a choice regarding whether the app may access the service.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKAuthorizationStatusNotDetermined</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKAuthorizationStatus.Denied">
            <summary>
                <p>The user explicitly denied access to the service for the app.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKAuthorizationStatusDenied</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKCalendar">
            <summary>
            An instance of the <c>EKCalendar</c> class represents a calendar in Event Kit. Use the properties in this class to get attributes about a calendar, such as its title and type. Use the <c>calendarForEntityType:eventStore:</c> method to create a calendar object.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_calendarForEntityType_eventStore_(System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_calendarWithEventStore_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_allowedEntityTypes(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_allowsContentModifications(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_calendarIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_CGColor(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_set_CGColor(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_immutable(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_source(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_set_source(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_subscribed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_supportedEventAvailabilities(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_set_title(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.UP_EKCalendar_get_type(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKCalendar" /> class.
            <br></br>Equivalent to the native <c>[[EKCalendar alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.ClassExists">
            <summary>
            Returns whether the native EKCalendar class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.Calendar(U3DXT.iOS.Native.EventKit.EKEntityType,U3DXT.iOS.Native.EventKit.EKEventStore)">
            <summary>
            Creates a new calendar that can contain the given entity type.
            <br></br>Equivalent to the native <c>calendarForEntityType:eventStore:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>entityType</em>
                <p>The entity type that this calendar may support.</p>
                <em>eventStore</em>
                <p>The event store in which to create this calendar.</p>
                <b>Return Value</b>
                <p>The created calendar.</p>
                <b>Discussion</b>
                <p>You can only create calendars that accept either reminders or events. Some servers might allow mixing the two, although it is not common.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="entityType">
            </param>
            <param name="eventStore">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendar.Calendar(U3DXT.iOS.Native.EventKit.EKEventStore)">
            <summary>
            Creates and returns a calendar belonging to a specified event store.  ( Deprecated in iOS 6.0. )
            <br></br>Equivalent to the native <c>calendarWithEventStore:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>eventStore</em>
                <p>The event store to which the event belongs.</p>
                <b>Return Value</b>
                <p>The created calendar.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
            </remarks>
            <param name="eventStore">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.allowedEntityTypes">
            <summary>
            The entity types this calendar can contain. (read-only)
            <br></br>Equivalent to the native <c>allowedEntityTypes</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>While Event Kit only allows creation of single-entity calendars, other servers might allow mixed-entity calendars.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.allowsContentModifications">
            <summary>
            A Boolean value that indicates whether you can add, edit, and delete items in the calendar. (read-only)
            <br></br>Equivalent to the native <c>allowsContentModifications</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.calendarIdentifier">
            <summary>
            A unique identifier for the calendar. (read-only)
            <br></br>Equivalent to the native <c>calendarIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is set when the calendar is created and can be used as a local identifier. Use <c>calendarWithIdentifier:</c> to get a calendar with the specified identifier.</p>
                <p>A full sync with the calendar will lose this identifier. You should have a plan for dealing with a calendar whose identifier is no longer fetch-able by caching its other properties.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property calendarItemIdentifier</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.CGColor">
            <summary>
            The calendar’s color.
            <br></br>Equivalent to the native <c>CGColor</c> property.
            </summary>
            <remarks>
                <b>Special Considerations</b>
                <p>This property is the equivalent of the <c>color</c> property on OS X.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.immutable">
            <summary>
            A Boolean value indicating whether the calendar’s properties can be edited or deleted. (read-only)
            <br></br>Equivalent to the native <c>immutable</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>true</c>, the calendar is immutable; otherwise it is not. Events and reminders can still be added to an immutable calendar.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.source">
            <summary>
            The source object representing the account to which this calendar belongs.
            <br></br>Equivalent to the native <c>source</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property can only be set for newly created calendar objects. This property is read-only after the first time it is set; setting a value to this property after the first time it is set will result in an error. Therefore, moving a calendar from one source to another is not supported.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.subscribed">
            <summary>
            A Boolean value indicating whether the calendar is a subscribed calendar. (read-only)
            <br></br>Equivalent to the native <c>subscribed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>true</c>, the calendar is a subscribed calendar; otherwise it is not. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.supportedEventAvailabilities">
            <summary>
            The event availability settings supported by this calendar, as indicated by a bitmask. (read-only)
            <br></br>Equivalent to the native <c>supportedEventAvailabilities</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the calendar doesn’t support event availability settings, this value is <c>EKCalendarEventAvailabilityNone</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>EKCalendarEventAvailabilityMask</c>
                    </li>
                    <li>
                        <c>“EKCalendarEventAvailability”</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.title">
            <summary>
            The calendar’s title.
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendar.type">
            <summary>
            The calendar’s type. (read-only)
            <br></br>Equivalent to the native <c>type</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>CalDAV-subscribed calendars are of type <c>EKCalendarTypeCalDAV</c> with <c>isSubscribed</c> set to <c>true</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>EKCalendarType</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKCalendarEventAvailability">
            <summary>
            Event availability settings that the calendar can support.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarEventAvailability.Free">
            <summary>
                <p>The calendar supports the free event availability setting.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarEventAvailabilityFree</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarEventAvailability.Unavailable">
            <summary>
                <p>The calendar supports the unavailable event availability setting.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarEventAvailabilityUnavailable</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarEventAvailability.Busy">
            <summary>
                <p>The calendar supports the busy event availability setting.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarEventAvailabilityBusy</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarEventAvailability.None">
            <summary>
                <p>The calendar does not support event availability settings.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarEventAvailabilityNone</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarEventAvailability.Tentative">
            <summary>
                <p>The calendar supports the tentative event availability setting.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarEventAvailabilityTentative</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKCalendarItem">
            <summary>
            The <c>EKCalendarItem</c> class is a an abstract superclass for calendar events and reminders. This class provides common properties and methods for accessing properties of calendar items such as the ability to set the calendar, title, and location as well as support for attaching notes, displaying attendees, setting multiple alarms, and specifying recurrence rules.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_alarms(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_set_alarms(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_attendees(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_calendar(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_set_calendar(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_calendarItemExternalIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_calendarItemIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_creationDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_hasAlarms(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_hasAttendees(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_hasNotes(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_hasRecurrenceRules(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_lastModifiedDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_location(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_set_location(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_notes(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_set_notes(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_recurrenceRules(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_set_recurrenceRules(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_timeZone(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_set_timeZone(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_set_title(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_URL(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_set_URL(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_get_UUID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_addAlarm_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_addRecurrenceRule_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_removeAlarm_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.UP_EKCalendarItem_removeRecurrenceRule_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKCalendarItem" /> class.
            <br></br>Equivalent to the native <c>[[EKCalendarItem alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.ClassExists">
            <summary>
            Returns whether the native EKCalendarItem class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.alarms">
            <summary>
            The alarms associated with the calendar item, as an array of <c>EKAlarm</c> objects.
            <br></br>Equivalent to the native <c>alarms</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is <c>null</c> if the calendar item has no alarms.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addAlarm:</c>
                    </li>
                    <li>    <c>@property hasAlarms</c></li>
                    <li>
                        <c>– removeAlarm:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.attendees">
            <summary>
            The attendees associated with the calendar item, as an array of <c>EKParticipant</c> objects. (read-only)
            <br></br>Equivalent to the native <c>attendees</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is read-only; it is not possible to add attendees with Event Kit. This property is <c>null</c> if the calendar item has no attendees.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property hasAttendees</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.calendar">
            <summary>
            The calendar for the calendar item.
            <br></br>Equivalent to the native <c>calendar</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.calendarItemExternalIdentifier">
            <summary>
            The calendar item’s external identifier as provided by the calendar server. (read-only)
            <br></br>Equivalent to the native <c>calendarItemExternalIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This identifier allows you to access the same event or reminder across multiple devices.</p>
                <p>There are some cases where duplicate copies of a calendar item can exist in the same database:</p>
                <ul class="ul">
                    <li class="li">
                        <p>A calendar item was imported from an ICS file into multiple calendars</p>
                    </li>
                    <li class="li">
                        <p>An event was created in a calendar shared with the user and the user was also invited to the event</p>
                    </li>
                    <li class="li">
                        <p>The user is a delegate of a calendar that also has this event</p>
                    </li>
                    <li class="li">
                        <p>A subscribed calendar was added to multiple accounts</p>
                    </li>
                </ul>
                <p>In such cases, you should choose between calendar items based on other factors, such as the calendar or source.</p>
                <p>Recurring event identifiers are the same for all occurrences. If you wish to differentiate between occurrences, you may want to use the start date.</p>
                <p>For Exchange servers, the identifier is different between iOS and OS X and different between devices for reminders.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.calendarItemIdentifier">
            <summary>
            The calendar item’s unique identifier. (read-only)
            <br></br>Equivalent to the native <c>calendarItemIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is set when the calendar item is created and can be used as a local identifier. Use <c>calendarItemWithIdentifier:</c> to look up the item by this value.</p>
                <p>A full sync with the calendar will lose this identifier. You should have a plan for dealing with a calendar whose identifier is no longer fetch-able by caching its other properties.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property calendarIdentifier</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.creationDate">
            <summary>
            The date that this calendar item was created. (read-only)
            <br></br>Equivalent to the native <c>creationDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>null</c>, this property was not set or was synced in this state.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property lastModifiedDate</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.hasAlarms">
            <summary>
            A Boolean value that indicates whether the calendar item has alarms. (read-only)
            <br></br>Equivalent to the native <c>hasAlarms</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>true</c>, the calendar item has alarms; otherwise it does not.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property alarms</c></li>
                    <li>
                        <c>– addAlarm:</c>
                    </li>
                    <li>
                        <c>– removeAlarm:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.hasAttendees">
            <summary>
            A Boolean value that indicates whether the calendar item has attendees. (read-only)
            <br></br>Equivalent to the native <c>hasAttendees</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>true</c>, the calendar item has attendees; otherwise it does not.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property attendees</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.hasNotes">
            <summary>
            A Boolean value that indicates whether the calendar item has notes. (read-only)
            <br></br>Equivalent to the native <c>hasNotes</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>true</c>, the calendar item has notes; otherwise it does not.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property notes</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.hasRecurrenceRules">
            <summary>
            A Boolean value that indicates whether the calendar item has recurrence rules. (read-only)
            <br></br>Equivalent to the native <c>hasRecurrenceRules</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>true</c>, the calendar item has recurrence rules; otherwise it does not.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property recurrenceRules</c></li>
                    <li>
                        <c>– addRecurrenceRule:</c>
                    </li>
                    <li>
                        <c>– removeRecurrenceRule:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.lastModifiedDate">
            <summary>
            The date that the calendar item was last modified. (read-only)
            <br></br>Equivalent to the native <c>lastModifiedDate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property creationDate</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.location">
            <summary>
            The location associated with the calendar item.
            <br></br>Equivalent to the native <c>location</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is <c>null</c> if the calendar item has no location.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.notes">
            <summary>
            The notes associated with the calendar item.
            <br></br>Equivalent to the native <c>notes</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property hasNotes</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.recurrenceRules">
            <summary>
            The recurrence rules for the calendar item.
            <br></br>Equivalent to the native <c>recurrenceRules</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addRecurrenceRule:</c>
                    </li>
                    <li>
                        <c>– removeRecurrenceRule:</c>
                    </li>
                    <li>    <c>@property hasRecurrenceRules</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.timeZone">
            <summary>
            The time zone for the calendar item.
            <br></br>Equivalent to the native <c>timeZone</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>null</c>, the calendar item is a floating event. A floating event is not tied to a particular time zone. It occurs at a given time regardless of the time zone — for example, “lunch at noon.” The start and end times of a floating event should be set as if they were in the system time zone.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.title">
            <summary>
            The title for the calendar item.
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.URL">
            <summary>
            The URL for the calendar item.
            <br></br>Equivalent to the native <c>URL</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKCalendarItem.UUID">
            <summary>
            The calendar item’s unique identifier. (read-only) ( Deprecated in iOS 6.0. )
            <br></br>Equivalent to the native <c>UUID</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c><!--a  -->@property calendarItemIdentifier<!--/a--></c></li>
                    <li>    <c>@property calendarItemExternalIdentifier</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.AddAlarm(U3DXT.iOS.Native.EventKit.EKAlarm)">
            <summary>
            Adds an alarm to the receiver.
            <br></br>Equivalent to the native <c>addAlarm:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>alarm</em>
                <p>The alarm to be added.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property alarms</c></li>
                    <li>    <c>@property hasAlarms</c></li>
                    <li>
                        <c>– removeAlarm:</c>
                    </li>
                </ul>
            </remarks>
            <param name="alarm">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.AddRecurrenceRule(U3DXT.iOS.Native.EventKit.EKRecurrenceRule)">
            <summary>
            Adds a recurrence rule to the recurrence rule array.
            <br></br>Equivalent to the native <c>addRecurrenceRule:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rule</em>
                <p>The rule to be added to <c>recurrenceRules</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– removeRecurrenceRule:</c>
                    </li>
                    <li>    <c>@property recurrenceRules</c></li>
                    <li>    <c>@property hasRecurrenceRules</c></li>
                </ul>
            </remarks>
            <param name="rule">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.RemoveAlarm(U3DXT.iOS.Native.EventKit.EKAlarm)">
            <summary>
            Removes an alarm from the calendar item.
            <br></br>Equivalent to the native <c>removeAlarm:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>alarm</em>
                <p>The alarm to be removed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property alarms</c></li>
                    <li>
                        <c>– addAlarm:</c>
                    </li>
                    <li>    <c>@property hasAlarms</c></li>
                </ul>
            </remarks>
            <param name="alarm">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKCalendarItem.RemoveRecurrenceRule(U3DXT.iOS.Native.EventKit.EKRecurrenceRule)">
            <summary>
            Removes a recurrence rule from the recurrence rule array.
            <br></br>Equivalent to the native <c>removeRecurrenceRule:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>rule</em>
                <p>The rule to be removed from <c>recurrenceRules</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– addRecurrenceRule:</c>
                    </li>
                    <li>    <c>@property recurrenceRules</c></li>
                    <li>    <c>@property hasRecurrenceRules</c></li>
                </ul>
            </remarks>
            <param name="rule">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKCalendarType">
            <summary>
            Possible calendar types.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarType.Exchange">
            <summary>
                <p>An Exchange calendar.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarTypeExchange</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarType.Birthday">
            <summary>
                <p>A birthday calendar.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarTypeBirthday</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarType.Local">
            <summary>
                <p>A local calendar.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarTypeLocal</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarType.Subscription">
            <summary>
                <p>A locally subscribed calendar.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarTypeSubscription</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKCalendarType.CalDAV">
            <summary>
                <p>A CalDAV or iCloud calendar.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarTypeCalDAV</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKEntityMask">
            <summary>
            A bitmask of <c>EKEntityType</c> for specifying multiple entities at once.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEntityMask.Event">
            <summary>
            null
            <br></br>Equivalent to the native <c>EKEntityTypeEvent</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEntityMask.Reminder">
            <summary>
            null
            <br></br>Equivalent to the native <c>EKEntityTypeReminder</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKEntityType">
            <summary>
            The type of entities allowed for a source.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEntityType.Event">
            <summary>
                <p>Represents an event.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEntityTypeEvent</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEntityType.Reminder">
            <summary>
                <p>Represents a reminder.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEntityTypeReminder</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKError">
            <summary>
            Constants belonging to EKError.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKError.Domain">
            <summary>
                <p>Event Kit errors.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorDomain</c> constant.
            </summary>
            <remarks>
            Values that are returned as the error domain property of an <c>NSError</c> object.
            <p></p><p></p>This is a constant for "Event Kit Error Domains".
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKErrorCode">
            <summary>
            Values that are returned as the error code property of an <c>NSError</c> object.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.AlarmProximityNotSupported">
            <summary>
                <p>The source does not allow geofences on alarms.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorAlarmProximityNotSupported</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.ObjectBelongsToDifferentStore">
            <summary>
                <p>The object belongs to a different calendar store.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorObjectBelongsToDifferentStore</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.SourceDoesNotAllowCalendarAddDelete">
            <summary>
                <p>The source doesn’t allow calendars to be added or deleted.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorSourceDoesNotAllowCalendarAddDelete</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.CalendarIsImmutable">
            <summary>
                <p>The calendar is immutable and cannot be modified or deleted.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorCalendarIsImmutable</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.StartDateCollidesWithOtherOccurrence">
            <summary>
                <p>The event’s start date collides with another occurrence of the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorStartDateCollidesWithOtherOccurrence</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.SourceDoesNotAllowReminders">
            <summary>
                <p>The source does not allow calendars supporting reminder entity types.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorSourceDoesNotAllowReminders</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.InvalidSpan">
            <summary>
                <p>An invalid span was passed when saving or deleting.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorInvalidSpan</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.InternalFailure">
            <summary>
                <p>An internal error occurred.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorInternalFailure</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.StartDateTooFarInFuture">
            <summary>
                <p>The start date is further into the future than the calendar can display.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorStartDateTooFarInFuture</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.StructuredLocationsNotSupported">
            <summary>
                <p>The source to which this calendar belongs does not support structured locations.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorStructuredLocationsNotSupported</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.RecurringReminderRequiresDueDate">
            <summary>
                <p>The recurring reminder requires a due date.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorRecurringReminderRequiresDueDate</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.CalendarDoesNotAllowEvents">
            <summary>
                <p>The calendar does not allow events to be added.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorCalendarDoesNotAllowEvents</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.CalendarHasNoSource">
            <summary>
                <p>The calendar cannot be saved with no source set.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorCalendarHasNoSource</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.InvitesCannotBeMoved">
            <summary>
                <p>The event cannot be moved because it is an invite.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorInvitesCannotBeMoved</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.CalendarReadOnly">
            <summary>
                <p>The calendar is read-only and cannot have events added to it.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorCalendarReadOnly</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.CalendarSourceCannotBeModified">
            <summary>
                <p>The calendar cannot be moved to another source.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorCalendarSourceCannotBeModified</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.NoEndDate">
            <summary>
                <p>The event has no end date set.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorNoEndDate</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.DatesInverted">
            <summary>
                <p>The event’s end date occurs before its start date.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorDatesInverted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.ReminderLocationsNotSupported">
            <summary>
                <p>The source doesn't support locations on reminders.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorReminderLocationsNotSupported</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.CalendarDoesNotAllowReminders">
            <summary>
                <p>The calendar does not allow reminders to be added.</p>
                <p>Available in iOS 6.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorCalendarDoesNotAllowReminders</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.AlarmGreaterThanRecurrence">
            <summary>
                <p>The alarm interval is greater than the recurrence interval.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorAlarmGreaterThanRecurrence</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.NoStartDate">
            <summary>
                <p>The event has no start date set.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorNoStartDate</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.DurationGreaterThanRecurrence">
            <summary>
                <p>The duration of an event is greater than its recurrence interval.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorDurationGreaterThanRecurrence</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.NoCalendar">
            <summary>
                <p>The event is not associated with a calendar.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorNoCalendar</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKErrorCode.EventNotMutable">
            <summary>
                <p>The event is not mutable and cannot be saved or deleted.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKErrorEventNotMutable</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKEvent">
            <summary>
            An instance of the <c>EKEvent</c> class represents an event added to a calendar in the Event Kit framework.
            </summary>
            <remarks>
                <p>Use the <c>eventWithEventStore:</c> method to create a new event. Use the properties in the class to get and modify certain information about an event. Other properties, such as the event’s title and calendar, are inherited from the parent class <c>EKCalendarItem</c>.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_eventWithEventStore_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_allDay(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_set_allDay(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_availability(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_set_availability(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_birthdayPersonID(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_endDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_set_endDate(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_eventIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_isDetached(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_organizer(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_startDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_set_startDate(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_get_status(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_compareStartDateWithEvent_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.UP_EKEvent_refresh(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKEvent" /> class.
            <br></br>Equivalent to the native <c>[[EKEvent alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.ClassExists">
            <summary>
            Returns whether the native EKEvent class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.Event(U3DXT.iOS.Native.EventKit.EKEventStore)">
            <summary>
            Creates and returns a new event belonging to a specified event store.
            <br></br>Equivalent to the native <c>eventWithEventStore:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>eventStore</em>
                <p>The event store to which the event belongs.</p>
                <b>Return Value</b>
                <p>The created event.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="eventStore">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.allDay">
            <summary>
            A Boolean value that indicates whether the event is an all-day event.
            <br></br>Equivalent to the native <c>allDay</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.availability">
            <summary>
            The availability setting for the event.
            <br></br>Equivalent to the native <c>availability</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This setting is used by CalDAV and Exchange servers to indicate how the event should be treated for scheduling purposes.</p>
                <p>If the event’s calendar does not support availability settings, this property’s value is <c>EKEventAvailabilityNotSupported</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>EKEventAvailability</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.birthdayPersonID">
            <summary>
            The Address Book framework record identifier of the person for this birthday event. (read-only)
            <br></br>Equivalent to the native <c>birthdayPersonID</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is only set if this is a birthday event; otherwise the property is <c>null</c>.</p>
                <b>Special Considerations</b>
                <p>
                    <strong>Note:</strong> This property is equivalent to the <c>birthdayPersonUniqueID</c> property on OS X.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.endDate">
            <summary>
            The end date for the event.
            <br></br>Equivalent to the native <c>endDate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.eventIdentifier">
            <summary>
            A unique identifier for the event. (read-only)
            <br></br>Equivalent to the native <c>eventIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You can use this identifier to look up an event with the EKEventStore method <c>eventWithIdentifier:</c>.</p>
                <p>If the calendar of an event changes, its identifier most likely changes as well.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.isDetached">
            <summary>
            A Boolean value that indicates whether an event is a detached instance of a repeating event. (read-only)
            <br></br>Equivalent to the native <c>isDetached</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This value is <c>true</c> if and only if the event is part of a repeating event and one or more of its attributes have been modified from the repeating event’s default attributes.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.organizer">
            <summary>
            The organizer associated with the event. (read-only)
            <br></br>Equivalent to the native <c>organizer</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property is <c>null</c> if the event has no organizer.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.startDate">
            <summary>
            The start date of the event.
            <br></br>Equivalent to the native <c>startDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Floating events such as all-day events are returned in the default time zone.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEvent.status">
            <summary>
            The status of the event. (read-only)
            <br></br>Equivalent to the native <c>status</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>You should act based on an event’s status only if the status is <c>EKEventStatusCanceled</c>, which indicates that the event has been canceled. Other statuses should be considered informational.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>EKEventStatus</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.CompareStartDate(U3DXT.iOS.Native.EventKit.EKEvent)">
            <summary>
            Compares the start date of the receiving event with the start date of another event.
            <br></br>Equivalent to the native <c>compareStartDateWithEvent:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>other</em>
                <p>The event to compare against.</p>
                <b>Return Value</b>
                <ul class="ul">
                    <li class="li">
                        <p>
                            <c>NSOrderedAscending</c> if the start date of the receiver precedes the start date of <c>other</c>.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>NSOrderedSame</c> if the start dates of the two events are identical.</p>
                    </li>
                    <li class="li">
                        <p>
                            <c>NSOrderedDescending</c> if the start date of the receiver comes after the start date of <c>other</c>.</p>
                    </li>
                </ul>
                <b>Discussion</b>
                <p>You can pass the selector for this method to the NSArray method <c>sortedArrayUsingSelector:</c> to create an array of events sorted by start date.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="other">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEvent.Refresh">
            <summary>
            Updates the event’s data with the current information in the Calendar database.
            <br></br>Equivalent to the native <c>refresh</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>If the event was successfully refreshed, <c>true</c>; otherwise, <c>false</c>.</p>
                <b>Discussion</b>
                <p>You should call this method only on events that your application is editing, and only when your application receives the <c>EKEventStoreChangedNotification</c> notification. If this method returns <c>false</c>, the event has been deleted or otherwise invalidated, and you should not continue to use it.</p>
                <p>This method does not replace the values of any properties that you have modified.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKEventAvailability">
            <summary>
            The event’s availability setting for scheduling purposes.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventAvailability.NotSupported">
            <summary>
                <p>Availability settings are not supported by the event’s calendar.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventAvailabilityNotSupported</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventAvailability.Free">
            <summary>
                <p>The event has a free availability setting.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventAvailabilityFree</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventAvailability.Unavailable">
            <summary>
                <p>The event has an unavailable availability setting.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventAvailabilityUnavailable</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventAvailability.Tentative">
            <summary>
                <p>The event has a tentative availability setting.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventAvailabilityTentative</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventAvailability.Busy">
            <summary>
                <p>The event has a busy availability setting.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventAvailabilityBusy</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKEventStatus">
            <summary>
            The event’s status.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventStatus.None">
            <summary>
                <p>The event has no status.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventStatusNone</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventStatus.Confirmed">
            <summary>
                <p>The event is confirmed.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventStatusConfirmed</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventStatus.Canceled">
            <summary>
                <p>The event is canceled.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventStatusCanceled</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventStatus.Tentative">
            <summary>
                <p>The event is tentative.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventStatusTentative</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKEventStore">
            <summary>
            An instance of the <c>EKEventStore</c> class represents the Calendar database. It is an application’s point of contact for accessing calendar and reminder data.
            </summary>
            <remarks>
                <p>On iOS 5 and later, initialize an event store object with the default <c>init</c> method. On iOS 6 and later, you must request access to an entity type after the event store is initialized with <c>requestAccessToEntityType:completion:</c> for data to return.</p>
                <p>On OS X, use <c>initWithAccessToEntityTypes:</c> instead of the default <c>init</c> method. Acceptable entity types are <c>EKEntityMaskEvent</c> for events and <c>EKEntityMaskReminder</c> for reminders.</p>
                <p>Create a predicate, or a search query for events, with the <c>predicateForEventsWithStartDate:endDate:calendars:</c> method.</p>
                <p>Fetch and process events that match a given predicate with the <c>eventsMatchingPredicate:</c> and <c>enumerateEventsMatchingPredicate:usingBlock:</c> methods.</p>
                <p>Save and delete events from the event store with the <c>saveEvent:span:commit:error:</c> and <c>removeEvent:span:commit:error:</c> methods.</p>
                <p>Use similar methods to access and manipulate reminders. Reminders are not available in Event Kit before iOS 6.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKEventStore.EKEventStoreChangedNotification">
            <summary>
            Constant name for the native <c>EKEventStoreChangedNotification</c> notification.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.EventKit.EKEventStore.Changed">
            <summary>
                <b>EKEventStoreChangedNotification</b> Posted whenever changes are made to the Calendar database, including adding, removing, and changing events or reminders. Individual changes are not described. When you receive this notification, you should refetch all <c>EKEvent</c> and <c>EKReminder</c> objects you have accessed, as they are considered stale. If you are actively editing an event and do not wish to refetch it unless it is absolutely necessary to do so, you can call the <c>refresh</c> method on it. If the method returns <c>true</c>, you do not need to refetch the event. <b>Availability</b><ul><li>Available in iOS 4.0 and later.</li></ul><br></br>Equivalent to adding the event handler as an observer to the native <c>EKEventStoreChangedNotification</c> notification.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="E:U3DXT.iOS.Native.EventKit.EKEventStore.AllNotifications">
            <summary>
            Occurs when this object sends any notification.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKEventStore.AllInstances">
            <summary>
            Static class for notifications of all instances of the <c>EKEventStore</c> class.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.EventKit.EKEventStore.AllInstances.Changed">
            <summary>
                <b>EKEventStoreChangedNotification</b> Posted whenever changes are made to the Calendar database, including adding, removing, and changing events or reminders. Individual changes are not described. When you receive this notification, you should refetch all <c>EKEvent</c> and <c>EKReminder</c> objects you have accessed, as they are considered stale. If you are actively editing an event and do not wish to refetch it unless it is absolutely necessary to do so, you can call the <c>refresh</c> method on it. If the method returns <c>true</c>, you do not need to refetch the event. <b>Availability</b><ul><li>Available in iOS 4.0 and later.</li></ul><br></br>Equivalent to adding the event handler as an observer to the native <c>EKEventStoreChangedNotification</c> notification.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_authorizationStatusForEntityType_(System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_get_calendars(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_get_defaultCalendarForNewEvents(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_get_defaultCalendarForNewReminders(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_get_eventStoreIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_calendarItemsWithExternalIdentifier_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_calendarItemWithIdentifier_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_calendarsForEntityType_(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_calendarWithIdentifier_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_cancelFetchRequest_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_commit_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_enumerateEventsMatchingPredicate_usingBlock_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_eventsMatchingPredicate_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_eventWithIdentifier_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_fetchRemindersMatchingPredicate_completion_(System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_predicateForCompletedRemindersWithCompletionDateStarting_ending_calendars_(System.String,System.Double,System.Double,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_predicateForEventsWithStartDate_endDate_calendars_(System.String,System.Double,System.Double,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_predicateForIncompleteRemindersWithDueDateStarting_ending_calendars_(System.String,System.Double,System.Double,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_predicateForRemindersInCalendars_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_refreshSourcesIfNecessary(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_removeCalendar_commit_error_(System.String,System.String,System.Boolean,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_removeEvent_span_commit_error_(System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_removeEvent_span_error_(System.String,System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_removeReminder_commit_error_(System.String,System.String,System.Boolean,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_requestAccessToEntityType_completion_(System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_reset(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_saveCalendar_commit_error_(System.String,System.String,System.Boolean,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_saveEvent_span_commit_error_(System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_saveEvent_span_error_(System.String,System.String,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_saveReminder_commit_error_(System.String,System.String,System.Boolean,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_sources(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.UP_EKEventStore_sourceWithIdentifier_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKEventStore" /> class.
            <br></br>Equivalent to the native <c>[[EKEventStore alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEventStore.ClassExists">
            <summary>
            Returns whether the native EKEventStore class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.AuthorizationStatus(U3DXT.iOS.Native.EventKit.EKEntityType)">
            <summary>
            Returns the authorization status for the given entity type.
            <br></br>Equivalent to the native <c>authorizationStatusForEntityType:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>entityType</em>
                <p>The event or reminder entity type.</p>
                <b>Return Value</b>
                <p>The app’s authorization status of the given type.</p>
                <b>Availability</b>
                <ul>
                    <li>Available on iOS 6 and later.</li>
                </ul>
            </remarks>
            <param name="entityType">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEventStore.calendars">
            <summary>
            The calendars associated with the event store, as an array of <c>EKCalendar</c> objects. (read-only) ( Deprecated in iOS 6.0. )
            <br></br>Equivalent to the native <c>calendars</c> property.
            </summary>
            <remarks>
                <b>Special Considerations</b>
                <p>
                    <strong>Note:</strong> This property is not available in OS X.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– calendarsForEntityType:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEventStore.defaultCalendarForNewEvents">
            <summary>
            The calendar that events are added to by default, as specified by user settings. (read-only)
            <br></br>Equivalent to the native <c>defaultCalendarForNewEvents</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEventStore.defaultCalendarForNewReminders">
            <summary>
            The calendar that events are added to by default, as specified by user settings. (read-only)
            <br></br>Equivalent to the native <c>defaultCalendarForNewReminders</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKEventStore.eventStoreIdentifier">
            <summary>
            The unique identifier for the event store. (read-only)
            <br></br>Equivalent to the native <c>eventStoreIdentifier</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the store is damaged, it is re-created and given a new identifier. If this value is different from a fetched value, you should take the appropriate action.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.CalendarItems(System.String)">
            <summary>
            Returns either the event’s first occurrences or the reminders with the specified external identifier.
            <br></br>Equivalent to the native <c>calendarItemsWithExternalIdentifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>externalIdentifier</em>
                <p>The calendar item’s external identifier.</p>
                <b>Return Value</b>
                <p>An array of calendar items with the specified identifier.</p>
                <b>Discussion</b>
                <p>The external identifier can be obtained from the calendarItemExternalIdentifier property. There may be more than one matching calendar item due to reasons discussed in <c>calendarItemExternalIdentifier</c>. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="externalIdentifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.CalendarItem(System.String)">
            <summary>
            Returns either the event’s first occurrence or the reminder with the specified identifier.
            <br></br>Equivalent to the native <c>calendarItemWithIdentifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifier</em>
                <p>The calendar item’s unique identifier.</p>
                <b>Return Value</b>
                <p>The reminder or the first occurrence of an event with the specified identifier.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.Calendars(U3DXT.iOS.Native.EventKit.EKEntityType)">
            <summary>
            Returns calendars that support a given entity type, such as reminders or events.
            <br></br>Equivalent to the native <c>calendarsForEntityType:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>entityType</em>
                <p>The calendar’s entity type.</p>
                <b>Return Value</b>
                <p>The calendar that supports the specified entity type.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>EKEntityType</c>
                    </li>
                </ul>
            </remarks>
            <param name="entityType">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.Calendar(System.String)">
            <summary>
            Returns the calendar with the specified identifier.
            <br></br>Equivalent to the native <c>calendarWithIdentifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifier</em>
                <p>The calendar’s unique identifier.</p>
                <b>Return Value</b>
                <p>The calendar with the specified identifier.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.CancelFetchRequest(System.Object)">
            <summary>
            Cancels the request to fetch reminders.
            <br></br>Equivalent to the native <c>cancelFetchRequest:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>fetchIdentifier</em>
                <p>The identifier of the request as returned by <c>fetchRemindersMatchingPredicate:completion:</c>.</p>
                <b>Discussion</b>
                <p>Once called, the completion block specified in <c>fetchRemindersMatchingPredicate:completion:</c> will not be called.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="fetchIdentifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.Commit(U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Commits all unsaved changes to the event store.
            <br></br>Equivalent to the native <c>commit:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>error</em>
                <p>A pointer to an <c>NSError</c> object. You do not need to create an <c>NSError</c> object. The commit operation aborts after the first failure if you pass <c>NULL</c>.</p>
                <b>Return Value</b>
                <p>If the commit operation succeeded, <c>true</c>; otherwise, <c>false</c>. Returns <c>true</c> even when there are no changes to commit.</p>
                <b>Discussion</b>
                <p>This method allows you to save batched changes to the event store. For example, if you pass <c>false</c> as the <c>commit</c> parameter to the <c>saveCalendar:commit:error:</c>, <c>removeCalendar:commit:error:</c>, <c>saveEvent:span:commit:error:</c>, or <c>removeEvent:span:commit:error:</c> methods, the changes are not saved until this method is invoked. Likewise, if you pass <c>true</c> as the <c>commit</c> parameter to the aforementioned methods, there is no need to call this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.EnumerateEventsMatchingPredicate(U3DXT.iOS.Native.Foundation.NSPredicate,System.Action{U3DXT.iOS.Native.EventKit.EKEvent,System.Boolean})">
            <summary>
            Finds all events that match a given predicate and calls a given callback for each event found.
            <br></br>Equivalent to the native <c>enumerateEventsMatchingPredicate:usingBlock:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>predicate</em>
                <p>The search predicate. Must be created with the <c>predicateForEventsWithStartDate:endDate:calendars:</c> method.</p>
                <em>block</em>
                <p>The block callback to call for each event. The callback must match the signature defined by <c>EKEventSearchCallback</c>.</p>
                <b>Discussion</b>
                <p>Only events that have been committed are included in enumeration. Events saved using <c>saveEvent:span:commit:error:</c> with the <em>commit</em> parameter set to <c>false</c> must call <c>commit:</c> beforehand to be included.</p>
                <p>This method is synchronous. For asynchronous behavior, run the method on another thread with <c>dispatch_async</c> or <c>NSOperation</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– eventsMatchingPredicate:</c>
                    </li>
                    <li>
                        <c>EKEventSearchCallback</c>
                    </li>
                    <li>
                        <c>– predicateForEventsWithStartDate:endDate:calendars:</c>
                    </li>
                </ul>
            </remarks>
            <param name="predicate">
            </param>
            <param name="block"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.EventsMatchingPredicate(U3DXT.iOS.Native.Foundation.NSPredicate)">
            <summary>
            Returns all events that match a given predicate.
            <br></br>Equivalent to the native <c>eventsMatchingPredicate:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>predicate</em>
                <p>The search predicate. Must be created with the <c>predicateForEventsWithStartDate:endDate:calendars:</c> method.</p>
                <b>Return Value</b>
                <p>All events that match <c>predicate</c>, as an array of <c>EKEvent</c> objects.</p>
                <b>Discussion</b>
                <p>Only events that have been committed are included in the results. Events saved using <c>saveEvent:span:commit:error:</c> with the <em>commit</em> parameter set to <c>false</c> must call <c>commit:</c> beforehand to be included.</p>
                <p>This method is synchronous. For asynchronous behavior, run the method on another thread with <c>dispatch_async</c> or <c>NSOperation</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– enumerateEventsMatchingPredicate:usingBlock:</c>
                    </li>
                    <li>
                        <c>– predicateForEventsWithStartDate:endDate:calendars:</c>
                    </li>
                </ul>
            </remarks>
            <param name="predicate">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.Event(System.String)">
            <summary>
            Returns the first occurrence of an event with a given identifier.
            <br></br>Equivalent to the native <c>eventWithIdentifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifier</em>
                <p>The identifier of the event.</p>
                <b>Return Value</b>
                <p>The event corresponding to <c>identifier</c>, or <c>null</c> if no event is found.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.FetchRemindersMatchingPredicate(U3DXT.iOS.Native.Foundation.NSPredicate,System.Action{System.Object[]})">
            <summary>
            Fetches reminders matching a given predicate.
            <br></br>Equivalent to the native <c>fetchRemindersMatchingPredicate:completion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>predicate</em>
                <p>The search predicate.</p>
                <em>completion</em>
                <p>An array of the matched reminders passed by reference.</p>
                <b>Return Value</b>
                <p>A value to be used in <c>cancelFetchRequest:</c> to cancel the request later if desired.</p>
                <b>Discussion</b>
                <p>Only reminders that have been committed are included in the results. Reminders saved using <c>saveReminder:commit:error:</c> with the <em>commit</em> parameter set to <c>false</c> must call <c>commit:</c> beforehand to be included.</p>
                <p>This method fetches reminders asynchronously.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– predicateForRemindersInCalendars:</c>
                    </li>
                    <li>
                        <c>– predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:</c>
                    </li>
                    <li>
                        <c>– predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:</c>
                    </li>
                </ul>
            </remarks>
            <param name="predicate">
            </param>
            <param name="completion"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.PredicateForCompletedRemindersWithCompletionDates(System.DateTime,System.DateTime,System.Object[])">
            <summary>
            Fetches completed reminders in a set of calendars within an optional range.
            <br></br>Equivalent to the native <c>predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>startDate</em>
                <p>The starting bound of the range to search.</p>
                <em>endDate</em>
                <p>The ending bound of the range to search.</p>
                <em>calendars</em>
                <p>An array of calendars to search.</p>
                <b>Return Value</b>
                <p>The created predicate to be used for <c>fetchRemindersMatchingPredicate:completion:</c>.</p>
                <b>Discussion</b>
                <p>Pass <c>null</c> for <em>startDate</em> to find all reminders completed before <em>endDate</em>. Similarly, pass <c>null</c> for both <em>startDate</em> and <em>endDate</em> to get all complete reminders in the specified calendars.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="startDate">
            </param>
            <param name="endDate">
            </param>
            <param name="calendars">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.PredicateForEvents(System.DateTime,System.DateTime,System.Object[])">
            <summary>
            Creates and returns a predicate for finding events in the event store that fall within a given date range.
            <br></br>Equivalent to the native <c>predicateForEventsWithStartDate:endDate:calendars:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>startDate</em>
                <p>The start date of the range of events fetched.</p>
                <em>endDate</em>
                <p>The end date of the range of events fetched.</p>
                <em>calendars</em>
                <p>The calendars to search, as an array of <c>EKCalendar</c> objects. Passing <c>null</c> indicates to search all calendars.</p>
                <b>Return Value</b>
                <p>The created predicate.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– eventsMatchingPredicate:</c>
                    </li>
                    <li>
                        <c>– enumerateEventsMatchingPredicate:usingBlock:</c>
                    </li>
                </ul>
            </remarks>
            <param name="startDate">
            </param>
            <param name="endDate">
            </param>
            <param name="calendars">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.PredicateForIncompleteRemindersWithDueDates(System.DateTime,System.DateTime,System.Object[])">
            <summary>
            Fetches incomplete reminders in a set of calendars within an optional range.
            <br></br>Equivalent to the native <c>predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>startDate</em>
                <p>The starting bound of the range to search.</p>
                <em>endDate</em>
                <p>The ending bound of the range to search.</p>
                <em>calendars</em>
                <p>An array of calendars to search.</p>
                <b>Return Value</b>
                <p>The created predicate to be used for <c>fetchRemindersMatchingPredicate:completion:</c>.</p>
                <b>Discussion</b>
                <p>Pass <c>null</c> for <em>startDate</em> to find all reminders due before <em>endDate</em>. Similarly, pass <c>null</c> for both <em>startDate</em> and <em>endDate</em> to get all incomplete reminders in the specified calendars.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="startDate">
            </param>
            <param name="endDate">
            </param>
            <param name="calendars">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.Predicate(System.Object[])">
            <summary>
            Fetches all reminders in a set of calendars.
            <br></br>Equivalent to the native <c>predicateForRemindersInCalendars:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>calendars</em>
                <p>An array of calendars to search.</p>
                <b>Return Value</b>
                <p>The created predicate to be used for <c>fetchRemindersMatchingPredicate:completion:</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="calendars">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.RefreshSourcesIfNecessary">
            <summary>
            Pulls new data from remote sources if necessary.
            <br></br>Equivalent to the native <c>refreshSourcesIfNecessary</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Use this method to pull new data from remote sources if the local data is out of date.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.RemoveCalendar(U3DXT.iOS.Native.EventKit.EKCalendar,System.Boolean,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Removes a calendar from the event store by either batching or committing the changes.
            <br></br>Equivalent to the native <c>removeCalendar:commit:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>calendar</em>
                <p>The calendar to be removed.</p>
                <em>commit</em>
                <p>
                    <c>true</c> to remove the calendar immediately; otherwise, the change is batched until the <c>commit:</c> method is invoked.</p>
                <em>error</em>
                <p>The error that occurred, if any; otherwise, <c>null</c>.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if successful; otherwise, <c>false</c>.</p>
                <b>Discussion</b>
                <p>This method raises an exception if <em>calendar</em> belongs to another event store.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– commit:</c>
                    </li>
                    <li>
                        <c>– saveCalendar:commit:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="calendar">
            </param>
            <param name="commit">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.RemoveEvent(U3DXT.iOS.Native.EventKit.EKEvent,U3DXT.iOS.Native.EventKit.EKSpan,System.Boolean,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Removes an event or recurring events from the event store by either batching or committing the changes.
            <br></br>Equivalent to the native <c>removeEvent:span:commit:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>event</em>
                <p>The event to remove.</p>
                <em>span</em>
                <p>The span to use. Indicates whether the remove affects future instances of the event in the case of a recurring event.</p>
                <em>commit</em>
                <p>
                    <c>true</c> to remove the event immediately; otherwise, the change is batched until the <c>commit:</c> method is invoked.</p>
                <em>error</em>
                <p>The error that occurred, if any did. Otherwise, <c>null</c>.</p>
                <b>Return Value</b>
                <p>If the event has successfully removed, <c>true</c>; otherwise, <c>false</c>. Also returns <c>false</c> if <c>event</c> cannot be removed because it is not in the event store.</p>
                <b>Discussion</b>
                <p>This method raises an exception if it is passed an event from another event store.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– commit:</c>
                    </li>
                    <li>
                        <c>– removeEvent:span:error:</c>
                    </li>
                    <li>
                        <c>– saveEvent:span:error:</c>
                    </li>
                    <li>
                        <c>– saveEvent:span:commit:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="anEvent">
            </param>
            <param name="span">
            </param>
            <param name="commit">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.RemoveEvent(U3DXT.iOS.Native.EventKit.EKEvent,U3DXT.iOS.Native.EventKit.EKSpan,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Removes an event from the event store.
            <br></br>Equivalent to the native <c>removeEvent:span:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>event</em>
                <p>The event to be removed.</p>
                <em>span</em>
                <p>The span to use. Indicates whether to remove future instances of the event in the case of a recurring event.</p>
                <em>error</em>
                <p>The error if one occurred; otherwise, <c>null</c>.</p>
                <b>Return Value</b>
                <p>If the event has successfully removed, <c>true</c>; otherwise, <c>false</c>. Also returns <c>false</c> if <c>event</c> cannot be removed because it is not in the event store.</p>
                <b>Discussion</b>
                <p>This method raises an exception if it is passed an event from another event store.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– saveEvent:span:error:</c>
                    </li>
                    <li>
                        <c>– saveEvent:span:commit:error:</c>
                    </li>
                    <li>
                        <c>– removeEvent:span:commit:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="anEvent">
            </param>
            <param name="span">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.RemoveReminder(U3DXT.iOS.Native.EventKit.EKReminder,System.Boolean,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Removes a reminder from the event store by either committing or batching the changes.
            <br></br>Equivalent to the native <c>removeReminder:commit:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>reminder</em>
                <p>The reminder to be removed.</p>
                <em>commit</em>
                <p>A Boolean value indicating whether to remove the reminder immediately or to batch the removals; passing <c>false</c> will not commit the removal from the event store until the <c>commit:</c> method is invoked.</p>
                <em>error</em>
                <p>The error that occurred, if any; otherwise, <c>null</c>.</p>
                <b>Return Value</b>
                <p>If successful, <c>true</c>; otherwise, <c>false</c>.</p>
                <b>Discussion</b>
                <p>This method raises an exception if <em>reminder</em> belongs to another event store.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– commit:</c>
                    </li>
                    <li>
                        <c>– saveReminder:commit:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="reminder">
            </param>
            <param name="commit">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.RequestAccessToEntityType(U3DXT.iOS.Native.EventKit.EKEntityType,System.Action{System.Boolean,U3DXT.iOS.Native.Foundation.NSError})">
            <summary>
            Prompts the user to grant or deny access to event or reminder data.
            <br></br>Equivalent to the native <c>requestAccessToEntityType:completion:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>entityType</em>
                <p>The event or reminder entity type.</p>
                <em>completion</em>
                <p>The block to call when the request completes.</p>
                <b>Discussion</b>
                <p>In iOS 6 and later, requesting access to an event store asynchronously prompts your users for permission to use their data. The user is only prompted the first time your app requests access to an entity type; any subsequent instantiations of <c>EKEventStore</c> uses existing permissions. When the user taps to grant or deny access, the completion handler will be called on an arbitrary queue. Your app is not blocked while the user decides to grant or deny permission.</p>
                <p>After users choose their permission level, the event store either calls the completion handler or broadcasts an <c>EKEventStoreChangedNotification</c>. The completion handler is called on iOS 6 and later, and the notification is broadcasted on iOS 5. Because users may deny access to the event store, your app should handle an empty data case.</p>
                <p>
                    <strong>Important:</strong> If your app has never requested access before, you must request access to events or reminders before attempting to fetch or create them. If you request data before prompting the user for access with this method, you'll need to reset the event store with the <c>reset</c> method in order to start receiving data once the user grants access.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available on iOS 6 and later.</li>
                </ul>
            </remarks>
            <param name="entityType">
            </param>
            <param name="completion"> A callback delegate.</param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.Reset">
            <summary>
            Returns the event store to its saved state.
            <br></br>Equivalent to the native <c>reset</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This method updates all the properties of all the objects with their corresponding values in the event store. Any local changes that were not saved before invoking this method will be lost. All objects that were created or retrieved using this store are disassociated from it and should be considered invalid.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>reset</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.SaveCalendar(U3DXT.iOS.Native.EventKit.EKCalendar,System.Boolean,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Saves a calendar to the event store by either committing or batching the changes.
            <br></br>Equivalent to the native <c>saveCalendar:commit:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>calendar</em>
                <p>The calendar to be saved.</p>
                <em>commit</em>
                <p>
                    <c>true</c> to save the calendar immediately; otherwise, the change is batched until the <c>commit:</c> method is invoked.</p>
                <em>error</em>
                <p>The error that occurred, if any; otherwise, <c>null</c>.</p>
                <b>Return Value</b>
                <p>
                    <c>true</c> if successful; otherwise, <c>false</c>.</p>
                <b>Discussion</b>
                <p>This method raises an exception if <em>calendar</em> belongs to another event store.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– commit:</c>
                    </li>
                    <li>
                        <c>– removeCalendar:commit:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="calendar">
            </param>
            <param name="commit">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.SaveEvent(U3DXT.iOS.Native.EventKit.EKEvent,U3DXT.iOS.Native.EventKit.EKSpan,System.Boolean,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Saves an event or recurring events to the event store by either batching or committing the changes.
            <br></br>Equivalent to the native <c>saveEvent:span:commit:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>event</em>
                <p>The event to be saved.</p>
                <em>span</em>
                <p>The span to use. Indicates whether the save affects future instances of the event in the case of a recurring event.</p>
                <em>commit</em>
                <p>To save the event immediately, pass <c>true</c>; otherwise, the change is batched until the <c>commit:</c> method is invoked. </p>
                <em>error</em>
                <p>The error that occurred, if any; otherwise, <c>null</c>.</p>
                <b>Return Value</b>
                <p>If successful, <c>true</c>; otherwise, <c>false</c>. Also returns <c>false</c> if <c>event</c> does not need to be saved because it has not been modified.</p>
                <b>Discussion</b>
                <p>This method raises an exception if it is passed an event from another event store.</p>
                <p>When an event is saved, it is updated in the Calendar database. Any fields you did not modify are updated to reflect the most recent value in the database. If the event has been deleted from the database, it is re-created as a new event.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– commit:</c>
                    </li>
                    <li>
                        <c>– saveEvent:span:error:</c>
                    </li>
                    <li>
                        <c>– removeEvent:span:error:</c>
                    </li>
                    <li>
                        <c>– removeEvent:span:commit:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="anEvent">
            </param>
            <param name="span">
            </param>
            <param name="commit">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.SaveEvent(U3DXT.iOS.Native.EventKit.EKEvent,U3DXT.iOS.Native.EventKit.EKSpan,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Saves changes to an event permanently.
            <br></br>Equivalent to the native <c>saveEvent:span:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>event</em>
                <p>The event to be saved.</p>
                <em>span</em>
                <p>The span to use. Indicates whether the save affects future instances of the event in the case of a recurring event.</p>
                <em>error</em>
                <p>The error that occurred, if any; otherwise, <c>null</c>.</p>
                <b>Return Value</b>
                <p>If the event has successfully saved, <c>true</c>; otherwise, <c>false</c>. Also returns <c>false</c> if <c>event</c> does not need to be saved because it was not modified.</p>
                <b>Discussion</b>
                <p>This method raises an exception if it is passed an event from another event store.</p>
                <p>When an event is saved, it is updated in the Calendar database. Any fields you did not modify are updated to reflect the most recent value in the database. If the event has been deleted from the database, it is re-created as a new event.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– saveEvent:span:commit:error:</c>
                    </li>
                    <li>
                        <c>– removeEvent:span:error:</c>
                    </li>
                    <li>
                        <c>– removeEvent:span:commit:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="anEvent">
            </param>
            <param name="span">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.SaveReminder(U3DXT.iOS.Native.EventKit.EKReminder,System.Boolean,U3DXT.iOS.Native.Foundation.NSError)">
            <summary>
            Saves changes to a reminder by either committing or batching the changes.
            <br></br>Equivalent to the native <c>saveReminder:commit:error:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>reminder</em>
                <p>The reminder to be saved.</p>
                <em>commit</em>
                <p>A Boolean value indicating whether to save the reminder immediately or to batch the changes; passing <c>false</c> will not commit changes to the event store until the <c>commit:</c> method is invoked.</p>
                <em>error</em>
                <p>The error that occurred, if any; otherwise, <c>null</c>.</p>
                <b>Return Value</b>
                <p>If successful, <c>true</c>; otherwise, <c>false</c>.</p>
                <b>Discussion</b>
                <p>This method raises an exception if <em>reminder</em> belongs to another event store.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– commit:</c>
                    </li>
                    <li>
                        <c>– removeReminder:commit:error:</c>
                    </li>
                </ul>
            </remarks>
            <param name="reminder">
            </param>
            <param name="commit">
            </param>
            <param name="error">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.Sources">
            <summary>
            Returns an unordered array of source objects.
            <br></br>Equivalent to the native <c>sources</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>An unordered array of <c>EKSource</c> objects.</p>
                <b>Discussion</b>
                <p>An EKSource object represents an account that contains calendars.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKEventStore.Source(System.String)">
            <summary>
            Returns a source with the specified identifier.
            <br></br>Equivalent to the native <c>sourceWithIdentifier:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>identifier</em>
                <p>The source’s unique identifier.</p>
                <b>Return Value</b>
                <p>The source with the specified identifier.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="identifier">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKObject">
            <summary>
            The <c>EKObject</c> class is an abstract superclass for all Event Kit classes whose instances are persistent. It provides fine control when saving and restoring property settings. For example, you can find out if a persistent object was modified locally and whether it needs to be saved. If the object has changed in the event store since it was fetched, you can refresh the local copy by keeping local changes or by removing local changes. You can also roll back the object to the state when it was first fetched.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.UP_EKObject_hasChanges(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.UP_EKObject_isNew(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.UP_EKObject_refresh(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.UP_EKObject_reset(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.UP_EKObject_rollback(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKObject" /> class.
            <br></br>Equivalent to the native <c>[[EKObject alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKObject.ClassExists">
            <summary>
            Returns whether the native EKObject class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.HasChanges">
            <summary>
            Returns whether this object or any of the objects it contains has uncommitted changes.
            <br></br>Equivalent to the native <c>hasChanges</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>Returns <c>true</c> if there are uncommitted changes; otherwise, <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.IsNew">
            <summary>
            Returns whether this object has ever been saved.
            <br></br>Equivalent to the native <c>isNew</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>Returns <c>true</c> if the object has not been saved; otherwise, <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.Refresh">
            <summary>
            Merges changes to this object with the latest saved values.
            <br></br>Equivalent to the native <c>refresh</c> method.
            </summary>
            <remarks>
                <b>Return Value</b>
                <p>If the operation is successful, <c>true</c>; if the object was deleted in the event store, <c>false</c>. If this method returns <c>false</c>, the object should be released.</p>
                <b>Discussion</b>
                <p>This method merges the local changes to properties of this object with the latest values in the event store. This method updates only properties that have not been modified locally, so you do not lose any changes by invoking this method. You can also use this method to see whether an object was deleted from the event store.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– reset</c>
                    </li>
                    <li>
                        <c>– rollback</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.Reset">
            <summary>
            Returns this object to its saved state.
            <br></br>Equivalent to the native <c>reset</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This method updates all the properties of this object with the corresponding values in the event store. Any local changes that were not saved before invoking this method are lost. This method does nothing if the object was never saved.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– refresh</c>
                    </li>
                    <li>
                        <c>– rollback</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKObject.Rollback">
            <summary>
            Rolls back the property values of this object to its original state when it was first fetched.
            <br></br>Equivalent to the native <c>rollback</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Any local changes to this object are lost when invoking this method. This method does not refetch property values from the event store. This method does nothing if the object was never changed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– refresh</c>
                    </li>
                    <li>
                        <c>– reset</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKParticipant">
            <summary>
            An <c>EKParticipant</c> object represents a participant in a calendar event. A participant can be a person, group, room, or other resource.
            </summary>
            <remarks>
                <p>Do not create <c>EKParticipant</c> objects directly. Instead, use the property <c><!--a target="_self" -->attendees<!--/a--></c> on <c>EKCalendarItem</c> to return an array of <c>EKParticipant</c> objects.</p>
                <p>Event Kit cannot add participants to an event nor change participant information. Use the properties in this class to get information about a participant.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.UP_EKParticipant_get_isCurrentUser(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.UP_EKParticipant_get_name(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.UP_EKParticipant_get_participantRole(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.UP_EKParticipant_get_participantStatus(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.UP_EKParticipant_get_participantType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.UP_EKParticipant_get_URL(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.UP_EKParticipant_ABRecordWithAddressBook_(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKParticipant" /> class.
            <br></br>Equivalent to the native <c>[[EKParticipant alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKParticipant.ClassExists">
            <summary>
            Returns whether the native EKParticipant class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKParticipant.isCurrentUser">
            <summary>
            A Boolean value indicating whether this participant represents the owner of this account. (read-only)
            <br></br>Equivalent to the native <c>isCurrentUser</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKParticipant.name">
            <summary>
            The participant’s name. (read-only)
            <br></br>Equivalent to the native <c>name</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKParticipant.participantRole">
            <summary>
            The participant’s role in the event. (read-only)
            <br></br>Equivalent to the native <c>participantRole</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>“Participant Roles”</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKParticipant.participantStatus">
            <summary>
            The participant’s attendance status. (read-only)
            <br></br>Equivalent to the native <c>participantStatus</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>“Participant Statuses”</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKParticipant.participantType">
            <summary>
            The participant’s type. (read-only)
            <br></br>Equivalent to the native <c>participantType</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>“Participant Types”</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKParticipant.URL">
            <summary>
            The URL representing this participant. (read-only)
            <br></br>Equivalent to the native <c>URL</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKParticipant.ABRecord(U3DXT.iOS.Native.AddressBook.ABAddressBook)">
            <summary>
            Returns the address book record that represents the participant.
            <br></br>Equivalent to the native <c>ABRecordWithAddressBook:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>addressBook</em>
                <p>The address book to search.</p>
                <b>Return Value</b>
                <p>The address book record for the participant, or <c>null</c> if the record is not found.</p>
                <b>Discussion</b>
                <p>This method searches for a record match based on the participant’s email address.</p>
                <b>Special Considerations</b>
                <p>
                    <strong>Note:</strong> This instance method is only available on iOS. For OS X, see the <c>ABPersonInAddressBook:</c> instance method.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="addressBook">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKParticipantRole">
            <summary>
            Represents a participant’s role for an event.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantRole.NonParticipant">
            <summary>
                <p>The participant does not have an active role in the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantRoleNonParticipant</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantRole.Unknown">
            <summary>
                <p>The participant’s role is unknown.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantRoleUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantRole.Required">
            <summary>
                <p>The participant’s attendance is required.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantRoleRequired</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantRole.Optional">
            <summary>
                <p>The participant’s attendance is optional.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantRoleOptional</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantRole.Chair">
            <summary>
                <p>The participant is the chair of the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantRoleChair</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKParticipantStatus">
            <summary>
            Represents a participant’s attendance status for an event.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantStatus.Delegated">
            <summary>
                <p>The participant has delegated attendance to another participant.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantStatusDelegated</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantStatus.Tentative">
            <summary>
                <p>The participant’s attendance status is tentative.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantStatusTentative</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantStatus.Pending">
            <summary>
                <p>The participant has yet to respond to the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantStatusPending</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantStatus.Accepted">
            <summary>
                <p>The participant has accepted the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantStatusAccepted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantStatus.InProcess">
            <summary>
                <p>The participant’s event is currently in process.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantStatusInProcess</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantStatus.Declined">
            <summary>
                <p>The participant has declined the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantStatusDeclined</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantStatus.Completed">
            <summary>
                <p>The participant’s event has completed.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantStatusCompleted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantStatus.Unknown">
            <summary>
                <p>The participant’s attendance status is unknown.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantStatusUnknown</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKParticipantType">
            <summary>
            Represent’s a participant’s type.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantType.Unknown">
            <summary>
                <p>The participant’s type is unknown.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantTypeUnknown</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantType.Room">
            <summary>
                <p>The participant is a room.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantTypeRoom</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantType.Resource">
            <summary>
                <p>The participant is a resource.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantTypeResource</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantType.Group">
            <summary>
                <p>The participant is a group.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantTypeGroup</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKParticipantType.Person">
            <summary>
                <p>The participant is a person.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKParticipantTypePerson</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek">
            <summary>
            The <c>EKRecurrenceDayOfWeek</c> class represents a day of the week for use with an <c>EKRecurrenceRule</c> object. A day of the week can optionally have a week number, indicating a specific day in the recurrence rule’s frequency. For example, a day of the week with a day value of Tuesday and a week number of 2 would represent the second Tuesday of every month in a monthly recurrence rule, and the second Tuesday of every year in a yearly recurrence rule. A day of the week with a week number of 0 ignores its week number.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.UP_EKRecurrenceDayOfWeek_dayOfWeek_(System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.UP_EKRecurrenceDayOfWeek_dayOfWeek_weekNumber_(System.Int32,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.UP_EKRecurrenceDayOfWeek_get_dayOfTheWeek(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.UP_EKRecurrenceDayOfWeek_get_weekNumber(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.UP_EKRecurrenceDayOfWeek_alloc_initWithDayOfTheWeek_weekNumber_(System.String,System.Int32,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek" /> class.
            <br></br>Equivalent to the native <c>[[EKRecurrenceDayOfWeek alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.ClassExists">
            <summary>
            Returns whether the native EKRecurrenceDayOfWeek class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.DayOfWeek(System.Int32)">
            <summary>
            Creates and returns a day of the week with a given day.
            <br></br>Equivalent to the native <c>dayOfWeek:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>dayOfTheWeek</em>
                <p>The day of the week. Values range from <c>1</c> to <c>7</c>, with Sunday being <c>1</c>.</p>
                <b>Return Value</b>
                <p>The new day of the week.</p>
                <b>Discussion</b>
                <p>The week number of the returned day of the week is <c>0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="dayOfTheWeek">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.DayOfWeek(System.Int32,System.Int32)">
            <summary>
            Creates and returns an autoreleased day of the week with a given day and week number.
            <br></br>Equivalent to the native <c>dayOfWeek:weekNumber:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>dayOfTheWeek</em>
                <p>The day of the week. Values range from <c>1</c> to <c>7</c>, with Sunday being <c>1</c>.</p>
                <em>weekNumber</em>
                <p>The week number.</p>
                <b>Return Value</b>
                <p>The new day of the week.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="dayOfTheWeek">
            </param>
            <param name="weekNumber">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.dayOfTheWeek">
            <summary>
            The day of the week. (read-only)
            <br></br>Equivalent to the native <c>dayOfTheWeek</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Values are from <c>1</c> to <c>7</c>, with Sunday being <c>1</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.weekNumber">
            <summary>
            The week number of the day of the week. (read-only)
            <br></br>Equivalent to the native <c>weekNumber</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Values range from <c>–53</c> to <c>53</c>. A negative value indicates a value from the end of the range. <c>0</c> indicates the week number is irrelevant.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceDayOfWeek.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates an instance of the native EKRecurrenceDayOfWeek and initializes the object. Initializes and returns a day of the week with a given day and week number.
            <br></br>Equivalent to the native <c>[[EKRecurrenceDayOfWeek alloc] initWithDayOfTheWeek:weekNumber:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>dayOfTheWeek</em>
                <p>The day of the week. Values range from <c>1</c> to <c>7</c>, with Sunday being <c>1</c>.</p>
                <em>weekNumber</em>
                <p>The week number.</p>
                <b>Return Value</b>
                <p>The initialized day of the week.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="dayOfTheWeek">
            </param>
            <param name="weekNumber">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd">
            <summary>
            The <c>EKRecurrenceEnd</c> class defines the end of a recurrence rule defined by an <c>EKRecurrenceRule</c> object. The recurrence end can be specified by a date (date-based) or by a maximum count of occurrences (count-based). An event which is set to never end should have its <c>EKRecurrenceEnd</c> set to <c>null</c>.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.UP_EKRecurrenceEnd_recurrenceEndWithEndDate_(System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.UP_EKRecurrenceEnd_recurrenceEndWithOccurrenceCount_(System.UInt32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.UP_EKRecurrenceEnd_get_endDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.UP_EKRecurrenceEnd_get_occurrenceCount(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd" /> class.
            <br></br>Equivalent to the native <c>[[EKRecurrenceEnd alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.ClassExists">
            <summary>
            Returns whether the native EKRecurrenceEnd class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.RecurrenceEnd(System.DateTime)">
            <summary>
            Initializes and returns a date-based recurrence end with a given end date.
            <br></br>Equivalent to the native <c>recurrenceEndWithEndDate:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>endDate</em>
                <p>The end date.</p>
                <b>Return Value</b>
                <p>The initialized recurrence end.</p>
                <b>Discussion</b>
                <p>The end date argument must be a valid <c>DateTime</c> and not <c>null</c>; otherwise an exception will be raised.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="endDate">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.RecurrenceEnd(System.UInt32)">
            <summary>
            Initializes and returns a count-based recurrence end with a given maximum occurrence count.
            <br></br>Equivalent to the native <c>recurrenceEndWithOccurrenceCount:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>occurrenceCount</em>
                <p>The maximum occurrence count.</p>
                <b>Return Value</b>
                <p>The initialized recurrence end.</p>
                <b>Discussion</b>
                <p>The maximum occurrence count argument must be a positive integer and not <c>0</c>; otherwise an exception will be raised.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="occurrenceCount">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.endDate">
            <summary>
            The end date of the recurrence end, or <c>null</c> if the recurrence end is count-based. (read-only)
            <br></br>Equivalent to the native <c>endDate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceEnd.occurrenceCount">
            <summary>
            The occurrence count of the recurrence end, or <c>0</c> if the recurrence end is date-based. (read-only)
            <br></br>Equivalent to the native <c>occurrenceCount</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKRecurrenceFrequency">
            <summary>
            Defines frequencies for recurrence rules.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKRecurrenceFrequency.Monthly">
            <summary>
                <p>Indicates a monthly recurrence rule.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKRecurrenceFrequencyMonthly</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKRecurrenceFrequency.Weekly">
            <summary>
                <p>Indicates a weekly recurrence rule.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKRecurrenceFrequencyWeekly</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKRecurrenceFrequency.Yearly">
            <summary>
                <p>Indicates a yearly recurrence rule.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKRecurrenceFrequencyYearly</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKRecurrenceFrequency.Daily">
            <summary>
                <p>Indicates a daily recurrence rule.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKRecurrenceFrequencyDaily</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKRecurrenceRule">
            <summary>
            The <c>EKRecurrenceRule</c> class is used to describe the recurrence pattern for a recurring event.
            </summary>
            <remarks>
                <p>After you create a recurrence rule, assign it to an event with the <c>recurrenceRule</c> method of <c>EKEvent</c>.</p>
                <p>Recurrence rules can have an end, represented by an <c>EKRecurrenceEnd</c> object. The end can be based on a specific date or a maximum number of occurrences.</p>
                <p>
                </p>
                <p>
                    <strong>Note:</strong> It is currently not possible to directly modify an <c>EKRecurrenceRule</c> or any of its properties. This functionality is achieved by creating a new <c>EKRecurrenceRule</c> and setting an event or reminder to use the newly created rule.</p>
                <p>
                </p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_calendarIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_daysOfTheMonth(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_daysOfTheWeek(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_daysOfTheYear(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_firstDayOfTheWeek(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_frequency(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_interval(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_monthsOfTheYear(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_recurrenceEnd(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_set_recurrenceEnd(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_setPositions(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_get_weeksOfTheYear(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_alloc_initRecurrenceWithFrequency_interval_daysOfTheWeek_daysOfTheMonth_monthsOfTheYear_weeksOfTheYear_daysOfTheYear_setPositions_end_(System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.UP_EKRecurrenceRule_alloc_initRecurrenceWithFrequency_interval_end_(System.String,System.Int32,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKRecurrenceRule" /> class.
            <br></br>Equivalent to the native <c>[[EKRecurrenceRule alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.ClassExists">
            <summary>
            Returns whether the native EKRecurrenceRule class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.calendarIdentifier">
            <summary>
            The identifier for the recurrence rule’s calendar. (read-only)
            <br></br>Equivalent to the native <c>calendarIdentifier</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.daysOfTheMonth">
            <summary>
            The days of the month associated with the recurrence rule, as an array of <c>double</c> objects. Values can be from <c>1</c> to <c>31</c> and from <c>-1</c> to <c>-31</c>.This property value is valid only for recurrence rules that were initialized with specific days of the month and a frequency type of <c>EKRecurrenceFrequencyMonthly</c>. (read-only)
            <br></br>Equivalent to the native <c>daysOfTheMonth</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Negative values indicate counting backwards from the end of the month.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.daysOfTheWeek">
            <summary>
            The days of the week associated with the recurrence rule, as an array of <c>EKRecurrenceDayOfWeek</c> objects. This property value is valid only for recurrence rules that were initialized with specific days of the week and a frequency type of <c>EKRecurrenceFrequencyWeekly</c>, <c>EKRecurrenceFrequencyMonthly</c>, or <c>EKRecurrenceFrequencyYearly</c>. (read-only)
            <br></br>Equivalent to the native <c>daysOfTheWeek</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.daysOfTheYear">
            <summary>
            The days of the year associated with the recurrence rule, as an array of <c>double</c> objects. Values can be from <c>1</c> to <c>366</c> and from <c>-1</c> to <c>-366</c>. This property value is valid only for recurrence rules initialized with a frequency type of <c>EKRecurrenceFrequencyYearly</c>. (read-only)
            <br></br>Equivalent to the native <c>daysOfTheYear</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Negative values indicate counting backwards from the end of the year.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.firstDayOfTheWeek">
            <summary>
            Indicates which day of the week the recurrence rule treats as the first day of the week. Values of <c>1</c> to <c>7</c> correspond to Sunday through Saturday. A value of <c>0</c> indicates that this property is not set for the recurrence rule. (read-only)
            <br></br>Equivalent to the native <c>firstDayOfTheWeek</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.frequency">
            <summary>
            The frequency of the recurrence rule. (read-only)
            <br></br>Equivalent to the native <c>frequency</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>“EKRecurrenceFrequency”</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.interval">
            <summary>
            Specifies how often the recurrence rule repeats over the unit of time indicated by its frequency. For example, a recurrence rule with a frequency type of <c>EKRecurrenceFrequencyWeekly</c> and an interval of <c>2</c> repeats every two weeks. (read-only)
            <br></br>Equivalent to the native <c>interval</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.monthsOfTheYear">
            <summary>
            The months of the year associated with the recurrence rule, as an array of <c>double</c> objects. Values can be from <c>1</c> to <c>12</c>. This property value is valid only for recurrence rules initialized with specific months of the year and a frequency type of <c>EKRecurrenceFrequencyYearly</c>. (read-only)
            <br></br>Equivalent to the native <c>monthsOfTheYear</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.recurrenceEnd">
            <summary>
            Indicates when the recurrence rule ends. This can be represented by an end date or a number of occurrences.
            <br></br>Equivalent to the native <c>recurrenceEnd</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.setPositions">
            <summary>
            An array of ordinal numbers that filters which recurrences to include in the recurrence rule’s frequency. For example, a yearly recurrence rule that has a <c>daysOfTheWeek</c> value that specifies Monday through Friday, and a <c>setPositions</c> array containing <c>2</c> and <c>-1</c>, occurs only on the second weekday and last weekday of every year. (read-only)
            <br></br>Equivalent to the native <c>setPositions</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Values can be from <c>1</c> to <c>366</c> and from <c>-1</c> to <c>-366</c>.</p>
                <p>Negative values indicate counting backwards from the end of the recurrence rule’s frequency (week, month, or year).</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.weeksOfTheYear">
            <summary>
            The weeks of the year associated with the recurrence rule, as an array of <c>double</c> objects. Values can be from <c>1</c> to <c>53</c> and from <c>-1</c> to <c>-53</c>. This property value is valid only for recurrence rules initialized with specific weeks of the year and a frequency type of <c>EKRecurrenceFrequencyYearly</c>. (read-only)
            <br></br>Equivalent to the native <c>weeksOfTheYear</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Negative values indicate counting backwards from the end of the year.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.#ctor(U3DXT.iOS.Native.EventKit.EKRecurrenceFrequency,System.Int32,System.Object[],System.Object[],System.Object[],System.Object[],System.Object[],System.Object[],U3DXT.iOS.Native.EventKit.EKRecurrenceEnd)">
            <summary>
            Creates an instance of the native EKRecurrenceRule and initializes the object. Initializes and returns a recurrence rule with a given frequency and additional scheduling information.
            <br></br>Equivalent to the native <c>[[EKRecurrenceRule alloc] initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>type</em>
                <p>The frequency of the recurrence rule. Can be daily, weekly, monthly, or yearly.</p>
                <em>interval</em>
                <p>The interval between instances of this recurrence. For example, a weekly recurrence rule with an interval of <c>2</c> occurs every other week. Must be greater than <c>0</c>.</p>
                <em>days</em>
                <p>The days of the week that the event occurs, as an array of <c>EKRecurrenceDayOfWeek</c> objects.</p>
                <em>monthDays</em>
                <p>The days of the month that the event occurs, as an array of <c>double</c> objects. Values can be from <c>1</c> to <c>31</c> and from <c>-1</c> to <c>-31</c>. This parameter is only valid for recurrence rules of type <c>EKRecurrenceFrequencyMonthly</c>.</p>
                <em>months</em>
                <p>The months of the year that the event occurs, as an array of <c>double</c> objects. Values can be from <c>1</c> to <c>12</c>. This parameter is only valid for recurrence rules of type <c>EKRecurrenceFrequencyYearly</c>.</p>
                <em>weeksOfTheYear</em>
                <p>The weeks of the year that the event occurs, as an array of <c>double</c> objects. Values can be from <c>1</c> to <c>53</c> and from <c>-1</c> to <c>-53</c>. This parameter is only valid for recurrence rules of type <c>EKRecurrenceFrequencyYearly</c>.</p>
                <em>daysOfTheYear</em>
                <p>The days of the year that the event occurs, as an array of <c>double</c> objects. Values can be from <c>1</c> to <c>366</c> and from <c>-1</c> to <c>-366</c>. This parameter is only valid for recurrence rules of type <c>EKRecurrenceFrequencyYearly</c>.</p>
                <em>setPositions</em>
                <p>An array of ordinal numbers that filters which recurrences to include in the recurrence rule’s frequency. See <c>setPositions</c> for more information.</p>
                <em>end</em>
                <p>The end of the recurrence rule.</p>
                <b>Return Value</b>
                <p>The initialized recurrence rule, or <c>null</c> if invalid values are provided.</p>
                <b>Discussion</b>
                <p>Negative values indicate counting backwards from the end of the recurrence rule’s frequency.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="type">
            </param>
            <param name="interval">
            </param>
            <param name="days">
            </param>
            <param name="monthDays">
            </param>
            <param name="months">
            </param>
            <param name="weeksOfTheYear">
            </param>
            <param name="daysOfTheYear">
            </param>
            <param name="setPositions">
            </param>
            <param name="end">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKRecurrenceRule.#ctor(U3DXT.iOS.Native.EventKit.EKRecurrenceFrequency,System.Int32,U3DXT.iOS.Native.EventKit.EKRecurrenceEnd)">
            <summary>
            Creates an instance of the native EKRecurrenceRule and initializes the object. Initializes and returns a simple recurrence rule with a given frequency, interval, and end.
            <br></br>Equivalent to the native <c>[[EKRecurrenceRule alloc] initRecurrenceWithFrequency:interval:end:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>type</em>
                <p>The frequency of the recurrence rule. Can be daily, weekly, monthly, or yearly.</p>
                <em>interval</em>
                <p>The interval between instances of this recurrence. For example, a weekly recurrence rule with an interval of <c>2</c> occurs every other week. Must be greater than <c>0</c>.</p>
                <em>end</em>
                <p>The end of the recurrence rule.</p>
                <b>Return Value</b>
                <p>The initialized recurrence rule, or <c>null</c> if invalid values are provided.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="type">
            </param>
            <param name="interval">
            </param>
            <param name="end">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKReminder">
            <summary>
            An instance of the <c>EKReminder</c> class represents a reminder added to a calendar in the Event Kit framework.
            </summary>
            <remarks>
                <p>Use the <c>reminderWithEventStore:</c> method to create a new reminder. Use the properties in the class to get and modify certain information about a reminder.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_reminderWithEventStore_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_get_completed(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_set_completed(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_get_completionDate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_set_completionDate(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_get_dueDateComponents(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_set_dueDateComponents(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_get_startDateComponents(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.UP_EKReminder_set_startDateComponents(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKReminder" /> class.
            <br></br>Equivalent to the native <c>[[EKReminder alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKReminder.ClassExists">
            <summary>
            Returns whether the native EKReminder class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKReminder.Reminder(U3DXT.iOS.Native.EventKit.EKEventStore)">
            <summary>
            Creates and returns a new reminder in the given event store.
            <br></br>Equivalent to the native <c>reminderWithEventStore:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>eventStore</em>
                <p>The event store.</p>
                <b>Return Value</b>
                <p>The created reminder.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="eventStore">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKReminder.completed">
            <summary>
            A Boolean value determining whether or not the reminder is marked completed.
            <br></br>Equivalent to the native <c>completed</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Setting this property to <c>true</c> will set <c>completionDate</c> to the current date; setting this property to <c>false</c> will set <c>completionDate</c> to <c>null</c>.</p>
                <b>Special Considerations</b>
                <p>If the reminder was completed using a different client, you may encounter the case where this property is <c>true</c>, but <c>completionDate</c> is <c>null</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKReminder.completionDate">
            <summary>
            The date on which the reminder was completed.
            <br></br>Equivalent to the native <c>completionDate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Setting this property to a date will set <c>completed</c> to <c>true</c>; setting this property to <c>null</c> will set <c>completed</c> to <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKReminder.dueDateComponents">
            <summary>
            The date by which the reminder should be completed.
            <br></br>Equivalent to the native <c>dueDateComponents</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The use of date components allows the due date and its time zone to be represented in a single property. A <c>null</c> time zone represents a floating date. Setting a date component without an hour, minute and second component will set the reminder to be an all-day reminder. If this property is set, the calendar must be set to <c>NSGregorianCalendar</c>; otherwise an exception is raised.</p>
                <p>This components’s <c>timeZone</c> property is independent of time zone properties on <c>startDateComponents</c> and its super <c>EKCalendarItem</c> object. By default, the due date is set to the system time zone.</p>
                <b>Special Considerations</b>
                <p>On iOS, Event Kit requires that a start date is set if the due date is set, however this is not a requirement on OS X.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKReminder.startDateComponents">
            <summary>
            The start date of the task.
            <br></br>Equivalent to the native <c>startDateComponents</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>The use of date components allows the start date and its time zone to be represented in a single property. A <c>null</c> time zone represents a floating date. Setting a date component without an hour, minute and second component will set the reminder to be an all-day reminder. If this property is set, the calendar must be set to <c>NSGregorianCalendar</c>; otherwise an exception is raised.</p>
                <p>The start date components’s <c>timeZone</c> property corresponds to the <c>timeZone</c> property on <c>EKCalendarItem</c>. A change in one value will cause a change in the other. Setting the time zone directly on the components does not guarantee that your changes will be saved; instead, pull this property from the reminder, set the time zone on it, and assign it back to the reminder: </p>
                <table>
                    <tr>
                        <td scope="row">
                            <pre>NSDateComponents *start = myEKReminder.startDateComponents;  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>start.timeZone = myNSTimeZone;  </pre>
                        </td>
                    </tr>
                    <tr>
                        <td scope="row">
                            <pre>myEKReminder.startDateComponents = start;  </pre>
                        </td>
                    </tr>
                </table>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKSource">
            <summary>
            An instance of the <c>EKSource</c> class represents the account that a calendar belongs to. You do not create instances of this class. You retrieve <c>EKSource</c> objects from an <c>EKEventStore</c> object. Use the <c>sources</c> property to get all the <c>EKSource</c> objects for an event store, and use the methods in this class to access properties of the source object.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.UP_EKSource_get_calendars(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.UP_EKSource_get_sourceIdentifier(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.UP_EKSource_get_sourceType(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.UP_EKSource_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.UP_EKSource_calendarsForEntityType_(System.String,System.Int32)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKSource" /> class.
            <br></br>Equivalent to the native <c>[[EKSource alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKSource.ClassExists">
            <summary>
            Returns whether the native EKSource class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKSource.calendars">
            <summary>
            The calendars that belong to this source object. (read-only) ( Deprecated in iOS 6.0. )
            <br></br>Equivalent to the native <c>calendars</c> property.
            </summary>
            <remarks>
                <b>Special Considerations</b>
                <p>
                    <strong>Note:</strong> This property is not available on OS X.</p>
                <p>
                </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                    <li>Deprecated in iOS 6.0.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>– calendarsForEntityType:</c>
                    </li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKSource.sourceIdentifier">
            <summary>
            A unique identifier for the source object. (read-only)
            <br></br>Equivalent to the native <c>sourceIdentifier</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKSource.sourceType">
            <summary>
            The type of this source object. (read-only)
            <br></br>Equivalent to the native <c>sourceType</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Possible values are described in <c>EKSourceType</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKSource.title">
            <summary>
            The name of this source object. (read-only)
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKSource.Calendars(U3DXT.iOS.Native.EventKit.EKEntityType)">
            <summary>
            Returns the calendars that belong to this source object that support a particular entity type.
            <br></br>Equivalent to the native <c>calendarsForEntityType:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>entityType</em>
                <p>The entity type of either an event or a reminder.</p>
                <b>Return Value</b>
                <p>The calendars belonging to this source that support the entity type.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>
                        <c>EKEntityType</c>
                    </li>
                </ul>
            </remarks>
            <param name="entityType">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKSourceType">
            <summary>
            The type of source object.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Use these values to set the <c>sourceType</c> property.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKSourceType.Subscribed">
            <summary>
                <p>Represents a subscribed source.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSourceTypeSubscribed</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKSourceType.Local">
            <summary>
                <p>Represents a local source.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSourceTypeLocal</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKSourceType.Birthdays">
            <summary>
                <p>Represents a birthday source.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSourceTypeBirthdays</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKSourceType.MobileMe">
            <summary>
                <p>Represents a MobileMe source.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSourceTypeMobileMe</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKSourceType.Exchange">
            <summary>
                <p>Represents an Exchange source.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSourceTypeExchange</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKSourceType.CalDAV">
            <summary>
                <p>Represents a CalDAV or iCloud source.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSourceTypeCalDAV</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKSpan">
            <summary>
            Indicates whether modifications should apply to a single event or all future events of a recurring event.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKSpan.ThisEvent">
            <summary>
                <p>Modifications to this event instance should affect only this instance.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSpanThisEvent</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKSpan.FutureEvents">
            <summary>
                <p>Modifications to this event instance should also affect future instances of this event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSpanFutureEvents</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKStructuredLocation">
            <summary>
            The <c>EKStructuredLocation</c> class specifies a geofence that can be used to trigger the alarm of a calendar item. Use <c>locationWithTitle:</c> to create a new structured location, then set it to the <c>structuredLocation</c> property of an <c>EKAlarm</c> object.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.UP_EKStructuredLocation_locationWithTitle_(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.UP_EKStructuredLocation_get_geoLocation(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.UP_EKStructuredLocation_set_geoLocation(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.UP_EKStructuredLocation_get_radius(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.UP_EKStructuredLocation_set_radius(System.String,System.Double)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.UP_EKStructuredLocation_get_title(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.UP_EKStructuredLocation_set_title(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKit.EKStructuredLocation" /> class.
            <br></br>Equivalent to the native <c>[[EKStructuredLocation alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKStructuredLocation.ClassExists">
            <summary>
            Returns whether the native EKStructuredLocation class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKit.EKStructuredLocation.Location(System.String)">
            <summary>
            Creates a new structured location.
            <br></br>Equivalent to the native <c>locationWithTitle:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>title</em>
                <p>The title of the location.</p>
                <b>Return Value</b>
                <p>The structured location object.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="title">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKStructuredLocation.geoLocation">
            <summary>
            The core location.
            <br></br>Equivalent to the native <c>geoLocation</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKStructuredLocation.radius">
            <summary>
            A minimum distance from the core location that would trigger the alarm or reminder.
            <br></br>Equivalent to the native <c>radius</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>To use the default radius, set this property to <c>0</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKit.EKStructuredLocation.title">
            <summary>
            The title of the location.
            <br></br>Equivalent to the native <c>title</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKit.EKTypesDaysoftheWeek">
            <summary>
            Defines values for the days of the week.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKTypesDaysoftheWeek.Saturday">
            <summary>
                <p>The value for Saturday.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSaturday</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKTypesDaysoftheWeek.Monday">
            <summary>
                <p>The value for Monday.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKMonday</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKTypesDaysoftheWeek.Friday">
            <summary>
                <p>The value for Friday.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKFriday</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKTypesDaysoftheWeek.Thursday">
            <summary>
                <p>The value for Thursday.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKThursday</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKTypesDaysoftheWeek.Wednesday">
            <summary>
                <p>The value for Wednesday.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKWednesday</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKTypesDaysoftheWeek.Sunday">
            <summary>
                <p>The value for Sunday.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKSunday</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKit.EKTypesDaysoftheWeek.Tuesday">
            <summary>
                <p>The value for Tuesday.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKTuesday</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser">
            <summary>
            An instance of the <c>EKCalendarChooser</c> class is a view controller that displays an interface for selecting one or more calendars in an event store. This view controller can be pushed on a navigation stack or presented modally. Use a delegate that conforms to the <c>EKCalendarChooserDelegate</c> protocol to receive callbacks when the user selects calendars or cancels the operation.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.DidCancel">
            <summary>
            Sent when the user cancels the selection of calendars. (required)
            <br></br>Equivalent to implementing the native <c>calendarChooserDidCancel:</c> method of <c>EKCalendarChooserDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.DidFinish">
            <summary>
            Sent when a user has finished selecting one or more calendars. (required)
            <br></br>Equivalent to implementing the native <c>calendarChooserDidFinish:</c> method of <c>EKCalendarChooserDelegate</c>.
            </summary>
        </member>
        <member name="E:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.SelectionDidChange">
            <summary>
            Sent when a user has changed the selection. (required)
            <br></br>Equivalent to implementing the native <c>calendarChooserSelectionDidChange:</c> method of <c>EKCalendarChooserDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_get_selectedCalendars(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_set_selectedCalendars(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_get_selectionStyle(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_get_showsCancelButton(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_set_showsCancelButton(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_get_showsDoneButton(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_set_showsDoneButton(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_alloc_initWithSelectionStyle_displayStyle_entityType_eventStore_(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.UP_EKCalendarChooser_alloc_initWithSelectionStyle_displayStyle_eventStore_(System.String,System.Int32,System.Int32,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser" /> class.
            <br></br>Equivalent to the native <c>[[EKCalendarChooser alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.ClassExists">
            <summary>
            Returns whether the native EKCalendarChooser class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.Delegate">
            <summary>
            The calendar chooser’s delegate.
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This object should conform to the <c>EKCalendarChooserDelegate</c> protocol.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.selectedCalendars">
            <summary>
            The calendars selected by the user.
            <br></br>Equivalent to the native <c>selectedCalendars</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.selectionStyle">
            <summary>
            Determines whether multiple selections are allowed. (read-only)
            <br></br>Equivalent to the native <c>selectionStyle</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>Possible values are described in  “EKCalendarChooserSelectionStyle.” </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.showsCancelButton">
            <summary>
            A Boolean value that determines whether the Cancel button is shown when this controller is presented modally by a navigation controller.
            <br></br>Equivalent to the native <c>showsCancelButton</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                    <c>true</c> to show the Cancel button; otherwise, <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property showsDoneButton</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.showsDoneButton">
            <summary>
            A Boolean value that determines whether the Done button is shown when this controller is presented modally by a navigation controller.
            <br></br>Equivalent to the native <c>showsDoneButton</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>
                    <c>true</c> to show the Done button; otherwise, <c>false</c>.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property showsDoneButton</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.#ctor(U3DXT.iOS.Native.EventKitUI.EKCalendarChooserSelectionStyle,U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDisplayStyle,U3DXT.iOS.Native.EventKit.EKEntityType,U3DXT.iOS.Native.EventKit.EKEventStore)">
            <summary>
            Creates an instance of the native EKCalendarChooser and initializes the object. Initializes a newly created calendar chooser for a specific entity type.
            <br></br>Equivalent to the native <c>[[EKCalendarChooser alloc] initWithSelectionStyle:displayStyle:entityType:eventStore:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>selectionStyle</em>
                <p>Determines whether multiple selections are allowed. Possible values are described in  “EKCalendarChooserSelectionStyle.” </p>
                <em>displayStyle</em>
                <p>Determines which calendars are displayed. Possible values are described in  “EKCalendarChooserDisplayStyle.” </p>
                <em>entityType</em>
                <p>The entity type of the calendar. Possible values are <c>EKEntityTypeEvent</c> and <c>EKEntityTypeReminder</c>.</p>
                <em>eventStore</em>
                <p>The event store that the calendars belong to.</p>
                <b>Return Value</b>
                <p>The initialized calendar chooser.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
            <param name="style">
            </param>
            <param name="displayStyle">
            </param>
            <param name="entityType">
            </param>
            <param name="eventStore">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooser.#ctor(U3DXT.iOS.Native.EventKitUI.EKCalendarChooserSelectionStyle,U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDisplayStyle,U3DXT.iOS.Native.EventKit.EKEventStore)">
            <summary>
            Creates an instance of the native EKCalendarChooser and initializes the object. Initializes a newly created calendar chooser.
            <br></br>Equivalent to the native <c>[[EKCalendarChooser alloc] initWithSelectionStyle:displayStyle:eventStore:]</c> calls.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>selectionStyle</em>
                <p>Determines whether multiple selections are allowed. Possible values are described in  “EKCalendarChooserSelectionStyle.” </p>
                <em>displayStyle</em>
                <p>Determines which calendars are displayed. Possible values are described in  “EKCalendarChooserDisplayStyle.” </p>
                <em>eventStore</em>
                <p>The event store that the calendars belong to.</p>
                <b>Return Value</b>
                <p>The initialized calendar chooser.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="selectionStyle">
            </param>
            <param name="displayStyle">
            </param>
            <param name="eventStore">
            </param>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate">
            <summary>
            The <c>EKCalendarChooserDelegate</c> protocol defines methods that a calendar chooser’s delegate may optionally implement to be notified when a user finishes selecting calendars or cancels the process.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate.UP_EKCalendarChooserDelegate_set__calendarChooserDidCancel__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate.UP_EKCalendarChooserDelegate_set__calendarChooserDidFinish__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate.UP_EKCalendarChooserDelegate_set__calendarChooserSelectionDidChange__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate.DidCancel(U3DXT.iOS.Native.EventKitUI.EKCalendarChooser)">
            <summary>
            (optional) Sent when the user cancels the selection of calendars. (required)
            <br></br>Equivalent to the native <c>calendarChooserDidCancel:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>calendarChooser</em>
                <p>The calendar chooser that sent this message.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="calendarChooser">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate.DidFinish(U3DXT.iOS.Native.EventKitUI.EKCalendarChooser)">
            <summary>
            (optional) Sent when a user has finished selecting one or more calendars. (required)
            <br></br>Equivalent to the native <c>calendarChooserDidFinish:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>calendarChooser</em>
                <p>The calendar chooser that sent this message.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="calendarChooser">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate.SelectionDidChange(U3DXT.iOS.Native.EventKitUI.EKCalendarChooser)">
            <summary>
            (optional) Sent when a user has changed the selection. (required)
            <br></br>Equivalent to the native <c>calendarChooserSelectionDidChange:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>calendarChooser</em>
                <p>The calendar chooser that sent this message.</p>
                <b>Discussion</b>
                <p>Use the <c>selectedCalendars</c> property to get the current selection.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 5.0 and later.</li>
                </ul>
            </remarks>
            <param name="calendarChooser">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate._calendarChooserDidCancel__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_calendarChooserDidCancel__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate._calendarChooserDidFinish__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_calendarChooserDidFinish__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDelegate._calendarChooserSelectionDidChange__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_calendarChooserSelectionDidChange__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDisplayStyle">
            <summary>
            The style of the chooser.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDisplayStyle.AllCalendars">
            <summary>
                <p>The chooser displays both readable and writable calendars.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarChooserDisplayAllCalendars</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserDisplayStyle.WritableCalendarsOnly">
            <summary>
                <p>The chooser displays writable calendars only.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarChooserDisplayWritableCalendarsOnly</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserSelectionStyle">
            <summary>
            The style of selecting calendars.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserSelectionStyle.Single">
            <summary>
                <p>The style that allows single selection of calendars.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarChooserSelectionStyleSingle</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKCalendarChooserSelectionStyle.Multiple">
            <summary>
                <p>The style that allows multiple selections of calendars.</p>
                <p>Available in iOS 5.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKCalendarChooserSelectionStyleMultiple</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKEventEditViewAction">
            <summary>
            Describes the action the user took to end editing.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKEventEditViewAction.Saved">
            <summary>
                <p>The user saved the changes made to the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventEditViewActionSaved</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKEventEditViewAction.Deleted">
            <summary>
                <p>The user deleted the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventEditViewActionDeleted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKEventEditViewAction.Canceled">
            <summary>
                <p>The user canceled the changes made to the event.</p>
                <p>Available in iOS 4.0 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventEditViewActionCanceled</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController">
            <summary>
            An <c>EKEventEditViewController</c> object allows the user to create and edit a calendar event. You can use this class to create a new event or a partially constructed event. If the new event has no calendar, the default calendar is used. You should present this type of view controller modally.
            </summary>
            <remarks>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.DidComplete">
            <summary>
            Invoked with the user is finished editing the event. (required)
            <br></br>Equivalent to implementing the native <c>eventEditViewController:didCompleteWithAction:</c> method of <c>EKEventEditViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.DidCompleteEventArgs">
            <summary>
            Event arguments for DidComplete.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.DidCompleteEventArgs.#ctor(U3DXT.iOS.Native.EventKitUI.EKEventEditViewAction)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.DidCompleteEventArgs.action">
            <summary>action</summary>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.defaultCalendarForNewEventsHandler">
            <summary>
            Returns the calendar to use as the default calendar for new events. (required)
            <br></br>Equivalent to implementing the native <c>eventEditViewControllerDefaultCalendarForNewEvents:</c> method of <c>EKEventEditViewDelegate</c>.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.UP_EKEventEditViewController_get_editViewDelegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.UP_EKEventEditViewController_set_editViewDelegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.UP_EKEventEditViewController_get_event(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.UP_EKEventEditViewController_set_event(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.UP_EKEventEditViewController_get_eventStore(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.UP_EKEventEditViewController_set_eventStore(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.UP_EKEventEditViewController_cancelEditing(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController" /> class.
            <br></br>Equivalent to the native <c>[[EKEventEditViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.ClassExists">
            <summary>
            Returns whether the native EKEventEditViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.editViewDelegate">
            <summary>
            The delegate that is notified when editing is done.
            <br></br>Equivalent to the native <c>editViewDelegate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.Event">
            <summary>
            The event the user creates or edits using this view controller.
            <br></br>Equivalent to the native <c>event</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>null</c>, a new event is created and added to the specified event store. New events are added to the default calendar. An exception is raised if set to an event that is not in the specified event store.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property eventStore</c></li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.eventStore">
            <summary>
            The event store used to save the event.
            <br></br>Equivalent to the native <c>eventStore</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property must be set before displaying the view.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
                <b>See Also</b>
                <ul>
                    <li>    <c>@property event</c></li>
                </ul>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewController.CancelEditing">
            <summary>
            Ends the editing session discarding any changes to the event.
            <br></br>Equivalent to the native <c>cancelEditing</c> method.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This method is the programmatic equivalent of the user tapping the Cancel button. The delegate will not receive the <c>eventEditViewController:didCompleteWithAction:</c> message, so you must dismiss the controller after calling this method.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 6.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate">
            <summary>
            Delegates of an <c>EKEventEditViewController</c> object conform to this protocol. Use an <c>EKEventEditViewController</c> object to allow the user to either create an event or edit an existing event. To be notified when the user finishes editing the event, set the delegate to an object conforming to this protocol.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate.UP_EKEventEditViewDelegate_set__eventEditViewController_didCompleteWithAction__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate.UP_EKEventEditViewDelegate_set__eventEditViewControllerDefaultCalendarForNewEvents__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate.DidComplete(U3DXT.iOS.Native.EventKitUI.EKEventEditViewController,U3DXT.iOS.Native.EventKitUI.EKEventEditViewAction)">
            <summary>
            (<b>required</b>) Invoked with the user is finished editing the event. (required)
            <br></br>Equivalent to the native <c>eventEditViewController:didCompleteWithAction:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>controller</em>
                <p>The edit view controller presenting the event.</p>
                <em>action</em>
                <p>The action the user took to end editing.</p>
                <b>Discussion</b>
                <p>You must implement this method to dismiss the event edit view controller that was presented modally.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="controller">
            </param>
            <param name="action">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate.DefaultCalendarForNewEvents(U3DXT.iOS.Native.EventKitUI.EKEventEditViewController)">
            <summary>
            (optional) Returns the calendar to use as the default calendar for new events. (required)
            <br></br>Equivalent to the native <c>eventEditViewControllerDefaultCalendarForNewEvents:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>controller</em>
                <p>The event edit view controller requesting the default calendar.</p>
                <b>Discussion</b>
                <p>If the delegate does not implement this method, the <c>defaultCalendarForNewEvents</c> property of the event store is used.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
            <param name="controller">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate._eventEditViewController_didCompleteWithAction__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_eventEditViewController_didCompleteWithAction__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventEditViewDelegate._eventEditViewControllerDefaultCalendarForNewEvents__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_eventEditViewControllerDefaultCalendarForNewEvents__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKEventViewAction">
            <summary>
            Describes the action that was taken to indicate that the event view controller should be closed.
            </summary>
            <remarks>
                <br />
            	Feedback
            </remarks>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKEventViewAction.Responded">
            <summary>
                <p>The user responded to a pending event invitation and saved it.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventViewActionResponded</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKEventViewAction.Deleted">
            <summary>
                <p>The event was deleted.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventViewActionDeleted</c> enum constant.
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKEventViewAction.Done">
            <summary>
                <p>The user tapped the Done button.</p>
                <p>Available in iOS 4.2 and later.</p>
                <p>
                </p>
                <br>
                </br>Equivalent to the native <c>EKEventViewActionDone</c> enum constant.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKEventViewController">
            <summary>
            An <c>EKEventViewController</c> object displays the details of a calendar event. You can set whether users are allowed to edit the event. If the event is an invitation, where the organizer is not the user, you can set whether a calendar preview is shown.
            </summary>
            <remarks>
                <p>You need to assign a delegate to an <c>EKEventViewController</c> object to receive a notification when the view controller should be closed. The delegate must conform to the <c>EKEventViewDelegate</c> protocol.</p>
            </remarks>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="E:U3DXT.iOS.Native.EventKitUI.EKEventViewController.DidComplete">
            <summary>
            Invoked when the event view controller should be closed. (required)
            <br></br>Equivalent to implementing the native <c>eventViewController:didCompleteWithAction:</c> method of <c>EKEventViewDelegate</c>.
            </summary>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKEventViewController.DidCompleteEventArgs">
            <summary>
            Event arguments for DidComplete.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.DidCompleteEventArgs.#ctor(U3DXT.iOS.Native.EventKitUI.EKEventViewAction)">
            <summary>
            </summary>
        </member>
        <member name="F:U3DXT.iOS.Native.EventKitUI.EKEventViewController.DidCompleteEventArgs.action">
            <summary>action</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.UP_EKEventViewController_get_allowsCalendarPreview(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.UP_EKEventViewController_set_allowsCalendarPreview(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.UP_EKEventViewController_get_allowsEditing(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.UP_EKEventViewController_set_allowsEditing(System.String,System.Boolean)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.UP_EKEventViewController_get_delegate(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.UP_EKEventViewController_set_delegate(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.UP_EKEventViewController_get_event(System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.UP_EKEventViewController_set_event(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="uuid">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.#ctor">
            <summary>
            Creates and initializes a new instance of the native <see cref="T:U3DXT.iOS.Native.EventKitUI.EKEventViewController" /> class.
            <br></br>Equivalent to the native <c>[[EKEventViewController alloc] init]</c> calls.
            </summary>
            <exception cref="T:U3DXT.Core.U3DXTException">
            Is thrown when creation or initialization fails.
            </exception>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewController.InstancesRespondToSelector(System.String)">
            <summary>
            Returns whether native instances of this class can respond to a selector with the same name.
            <br></br>Equivalent to the native <c>instancesRespondToSelector:</c> class method.
            </summary>
            <returns>
                <c>true</c> if native instances of this class can respond to a selector with the same name, <c>false</c> otherwise.
            </returns>
            <param name="selectorName">The literal name of the selector.</param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventViewController.ClassExists">
            <summary>
            Returns whether the native EKEventViewController class exists on the platform.
            </summary>
            <value>
                <c>true</c> if class exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventViewController.allowsCalendarPreview">
            <summary>
            A Boolean value that determines whether the user can view the event in a calendar day preview.
            <br></br>Equivalent to the native <c>allowsCalendarPreview</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If the event is an invitation and this property is <c>true</c>, then a table cell appears allowing the user to preview the event along with other events on the same day. If <c>false</c> (the default), the calendar day preview does not appear. This property applies only to invitations.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventViewController.allowsEditing">
            <summary>
            A Boolean value that determines whether the user is allowed to edit the event.
            <br></br>Equivalent to the native <c>allowsEditing</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>If <c>false</c> (the default), the event is not editable. If <c>true</c>, the Edit button appears and the user is allowed to change properties of the event. This property applies only to events in an editable calendar that were created by the user. For example, it doesn’t apply to invitations sent by another user. </p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventViewController.Delegate">
            <summary>
            The event view controller’s delegate.
            <br></br>Equivalent to the native <c>delegate</c> property.
            </summary>
            <remarks>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventViewController.Event">
            <summary>
            The event this view controller displays to the user.
            <br></br>Equivalent to the native <c>event</c> property.
            </summary>
            <remarks>
                <b>Discussion</b>
                <p>This property must be set before the view is displayed.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.0 and later.</li>
                </ul>
            </remarks>
        </member>
        <member name="T:U3DXT.iOS.Native.EventKitUI.EKEventViewDelegate">
            <summary>
            Delegates of an <c>EKEventViewController</c> object conform to this protocol. An event view controller’s delegate is notified when the event view controller should be closed. It is your responsibility to close the event view controller and perform any additional desired tasks within this protocol’s method.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewDelegate.UP_EKEventViewDelegate_set__eventViewController_didCompleteWithAction__handler(System.String,System.String)">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewDelegate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewDelegate.#ctor(U3DXT.iOS.Native.Internals._IosBaseClass._NewHelper,System.String)">
            <summary>
            U3DXT internal constructor.
            </summary>
            <param name="helper">
            </param>
            <param name="className">
            </param>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewDelegate._InitImplementedMethods">
            <summary>U3DXT internal.</summary>
        </member>
        <member name="M:U3DXT.iOS.Native.EventKitUI.EKEventViewDelegate.DidComplete(U3DXT.iOS.Native.EventKitUI.EKEventViewController,U3DXT.iOS.Native.EventKitUI.EKEventViewAction)">
            <summary>
            (<b>required</b>) Invoked when the event view controller should be closed. (required)
            <br></br>Equivalent to the native <c>eventViewController:didCompleteWithAction:</c> method.
            </summary>
            <remarks>
                <b>Parameters</b>
                <p>
                </p>
                <em>controller</em>
                <p>The event view controller that should be closed.</p>
                <em>action</em>
                <p>The action that was taken to prompt closing the event view controller. See <c>“EKEventViewAction”</c> for possible values.</p>
                <b>Availability</b>
                <ul>
                    <li>Available in iOS 4.2 and later.</li>
                </ul>
            </remarks>
            <param name="controller">
            </param>
            <param name="action">
            </param>
        </member>
        <member name="P:U3DXT.iOS.Native.EventKitUI.EKEventViewDelegate._eventViewController_didCompleteWithAction__handler">
            <summary>
                <br>
                </br>Equivalent to the native <c>_eventViewController_didCompleteWithAction__handler</c> property.
            </summary>
            <remarks>
            </remarks>
        </member>
    </members>
</doc>
